if exists(select * from SYSOBJECTS where ID = object_id(N'absp_10537_InsertTemplateInfo') and objectproperty(id,N'IsProcedure') = 1)
begin
	drop procedure absp_10537_InsertTemplateInfo;
end
go

create procedure  absp_10537_InsertTemplateInfo
as

begin
	set nocount on
	if exists (select 1 from sys.objects where name='TemplateInfo' and type = 'U' )
	begin
		if not exists(select 1 from templateInfo where templateName='Standard Unicede2 Import') 
			INSERT INTO [templateinfo] ([TemplateName],[TemplateType],[UserLevel],[IsLocked],[IsActive],[Category],[ReferenceCount],[TemplateVersion],[CreateDate],[ModifyDate],[CreatedBy],[ModifiedBy],[TemplateXml]) VALUES 
			('Standard Unicede2 Import',1,'S','Y','Y','U',1,'2015.001','20150202090000','20150202090000',1,1,'<?xml version="1.0" encoding="UTF-8" standalone="no"?><ImportMappingTemplate xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><SourceDataInfo relationshipType="N" sourceCount="1" sourceType="U"><OriginalSources><OriginalSourceData alias="A" name="RQE_Unicede 2 Test Data.csv::RQE_Unicede 2 Test Data.csv" sourceId="1"/></OriginalSources><SourceHeaders><SourceHeader sourceId="1"><Headers><Header colId="1" name="AreaTag"/><Header colId="2" name="PerilCode"/><Header colId="3" name="LOBCode"/><Header colId="4" name="Coverage"/><Header colId="5" name="NumRisks"/><Header colId="6" name="SumsIns"/><Header colId="7" name="AvgDed"/></Headers></SourceHeader></SourceHeaders></SourceDataInfo><Mappings><Mapping mapType="Formula"><Source>%auto%</Source><Target displayName="Account Number" targetField="AccountNumber" targetTable="Account"/></Mapping><Mapping mapType="FixedValue"><Source>Unspecified</Source><Target displayName="Producer" targetField="Producer" targetTable="Account"/></Mapping><Mapping mapType="FixedValue"><Source>Unspecified</Source><Target displayName="Company" targetField="Company" targetTable="Account"/></Mapping><Mapping mapType="FixedValue"><Source>Unspecified</Source><Target displayName="Branch" targetField="Branch" targetTable="Account"/></Mapping><Mapping mapType="FixedValue"><Source>Unspecified</Source><Target displayName="Division" targetField="Division" targetTable="Account"/></Mapping><Mapping mapType="Formula"><Source>%auto%</Source><Target displayName="Site Number" targetField="SiteNumber" targetTable="Site"/></Mapping><Mapping mapType="FixedValue"><Source>MLT</Source><Target displayName="Country Code" systemLookupName="CountryCache" targetField="CountryCode" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>MWK</Source><Target displayName="Currency Code" systemLookupName="CurrencyCache" targetField="CurrencyCode" targetTable="Site"/></Mapping><Mapping mapType="Formula"><Source>%auto%</Source><Target displayName="Structure Number" targetField="StructureNumber" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[AreaTag]</Source><Target displayName="Locator" targetField="Locator" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>X</Source><Target displayName="Structure Type" systemLookupName="GenericStructureCache" targetField="StructureTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>X</Source><Target displayName="Earthquake Structure Type" systemLookupName="EQStructCache" targetField="EQStructureTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>X</Source><Target displayName="Wind Structure Type" systemLookupName="WSStructCache" targetField="WSStructureTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>X</Source><Target displayName="Flood Structure Type" systemLookupName="FLStructCache" targetField="FLStructureTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="1">[LOBCode]</Source><Target displayName="Occupancy Type" systemLookupName="GenericOccupancyCache" targetField="OccupancyTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="1">[LOBCode]</Source><Target displayName="Earthquake Occupancy Type" systemLookupName="EQOccupancyCache" targetField="EQOccupancyTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="1">[LOBCode]</Source><Target displayName="Wind Occupancy Type" systemLookupName="WSOccupancyCache" targetField="WSOccupancyTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="1">[LOBCode]</Source><Target displayName="Flood Occupancy Type" systemLookupName="FLOccupancyCache" targetField="FLOccupancyTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>Average</Source><Target displayName="Structure Modifier" systemLookupName="StructureModifierCache" targetField="StructureModifierID" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Number of Stories" targetField="NumStories" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[NumRisks]</Source><Target displayName="Number of Buildings" targetField="NumBuildings" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Has a Basement" systemLookupName="HasBasementEnumCache" targetField="HasBasement" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Ground Elevation" targetField="GroundElevation" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="First Floor Elevation" targetField="FirstFloorElevation" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Floor Area" targetField="FloorArea" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Sprinklered Percent" targetField="PctStructureSprinklered" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Sprinklered Percent - High Vuln." targetField="SprinklerContentPctVulnHigh" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Sprinklered Percent - Medium Vuln." targetField="SprinklerContentPctVulnMedium" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Sprinklered Percent - Low Vuln." targetField="SprinklerContentPctVulnLow" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Total Number of Employees" targetField="HeadCount" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Aggregated Annual Salary" targetField="Salary" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Day Shift Weight" targetField="Shift1Weight" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Swing Shift Weight" targetField="Shift2Weight" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Night Shift Weight" targetField="Shift3Weight" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Weekends and Holidays Shift Weight" targetField="Shift4Weight" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList" order="1"><Source sourceId="1">[PerilCode]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="2"><Source sourceId="1">[PerilCode]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="3"><Source sourceId="1">[PerilCode]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="4"><Source sourceId="1">[PerilCode]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="5"><Source sourceId="1">[PerilCode]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="6"><Source sourceId="1">[PerilCode]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="7"><Source sourceId="1">[PerilCode]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="8"><Source sourceId="1">[PerilCode]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="1"><Source>Bldg</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="2"><Source>Cont</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="3"><Source>Time</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="4"><Source>Bldg</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="5"><Source>Cont</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="6"><Source>Bldg</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="7"><Source>Cont</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="8"><Source>Time</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="Formula" order="1"><Source sourceId="1">if(OR([Coverage]={"B", "A"}),[SumsIns],0)</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="Formula" order="2"><Source sourceId="1">if([Coverage]="C",[SumsIns],0)</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="Formula" order="3"><Source sourceId="1">if([Coverage]="T",[SumsIns],0)</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="Formula" order="4"><Source sourceId="1">if([Coverage]="BC",0.6*[SumsIns],0)</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="Formula" order="5"><Source sourceId="1">if([Coverage]="BC",0.4*[SumsIns],0)</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="Formula" order="6"><Source sourceId="1">if([Coverage]="BCT",0.5*[SumsIns],0)</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="Formula" order="7"><Source sourceId="1">if([Coverage]="BCT",0.3*[SumsIns],0)</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="Formula" order="8"><Source sourceId="1">if([Coverage]="BCT",0.2*[SumsIns],0)</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="1"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="2"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="3"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="4"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="5"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="6"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="7"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="8"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping appliesTo="Structure" mapType="FixedPickList" order="1"><Source sourceId="1">[PerilCode]</Source><Target displayName="Peril" systemLookupName="PerilCache" targetField="PerilID" targetTable="SiteCondition"/></Mapping><Mapping appliesTo="Structure" mapType="FixedPickList" order="1"><Source sourceId="1">[Coverage]</Source><Target displayName="Coverage" systemLookupName="CoverageCache" targetField="CoverageID" targetTable="SiteCondition"/></Mapping><Mapping appliesTo="Structure" mapType="Formula" order="1"><Source sourceId="1">[AvgDed] * [NumRisks]</Source><Target displayName="Deductible" targetField="Deductible" targetTable="SiteCondition"/></Mapping><Mapping appliesTo="Structure" mapType="FixedValue" order="1"><Source>Standard</Source><Target displayName="Condition Type" systemLookupName="StructureConditionTypeCache" targetField="ConditionTypeID" targetTable="SiteCondition"/></Mapping></Mappings><SampleData><SampleDataBySource delimiter="|" sourceId="1"><SampleHeaderRows><SampleHeaderRow>AreaTag|PerilCode|LOBCode|Coverage|NumRisks|SumsIns|AvgDed</SampleHeaderRow></SampleHeaderRows><SampleDataRows><SampleDataRow>18-11|PEQ|PHO|BCT|50|1000000|200</SampleDataRow><SampleDataRow>18-12|PEQ|PHO|BCT|50|1000000|200</SampleDataRow><SampleDataRow>18-13|PEQ|PHO|BCT|50|1000000|200</SampleDataRow><SampleDataRow>18-14|PEQ|PHO|BCT|50|1000000|200</SampleDataRow></SampleDataRows></SampleDataBySource></SampleData></ImportMappingTemplate>');	

		--Fixed defect 0010616: RQE 16 DB Migration: Add Cede Dataextraction and Import template into templateinfo
		if not exists(select 1 from templateInfo where templateName='Standard CEDE Database Extraction Template') 
			INSERT INTO [templateinfo] ([TemplateName],[TemplateType],[UserLevel],[IsLocked],[IsActive],[Category],[ReferenceCount],[TemplateVersion],[CreateDate],[ModifyDate],[CreatedBy],[ModifiedBy],[TemplateXml]) VALUES
			 ('Standard CEDE Database Extraction Template',4,'U','N','Y','C',1,'2015.001','20150223151659','20150224101121',1,1,'<?xml version="1.0"?><DataExtractionTemplate><Filters><FilterInfo><FilterLabel>@portname</FilterLabel><Query><![CDATA[select  replace(EXPOSURESETNAME, char(13) + char(10), '''') from tExposureSet]]></Query><FilterVariable>@portname</FilterVariable></FilterInfo><FilterInfo><FilterLabel>@countryList</FilterLabel><Query><![CDATA[select countrycode   from tLocation inner join tExposureSet on tLocation.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portName'']]></Query><FilterVariable>@countryList</FilterVariable></FilterInfo></Filters><ExtractionQueries><ExtractionQueryInfo><TableName>tContract</TableName><ExtractionQuery><![CDATA[select tContract.* from tContract inner join tExposureSet on tContract.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLayer</TableName><ExtractionQuery><![CDATA[select tLayer.* from tLayer inner join tContract on tContract.ContractSID = tLayer.ContractSID inner join tExposureSet on tContract.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLayerCondition</TableName><ExtractionQuery><![CDATA[select tLayerCondition.* from tLayerCondition inner join tContract on tContract.ContractSID = tLayerCondition.ContractSID inner join tExposureSet on tContract.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLayerConditionLocationXref</TableName><ExtractionQuery><![CDATA[select tLayerConditionLocationXref.* from tLayerConditionLocationXref inner join tlocation on tlocation.LocationSID = tLayerConditionLocationXref.LocationSID inner join tExposureSet on tlocation.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLocation</TableName><ExtractionQuery><![CDATA[select tLocation.* from tLocation inner join tExposureSet on tLocation.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLocFeature</TableName><ExtractionQuery><![CDATA[select tLocFeature.* from tLocFeature inner join tlocation on tlocation.LocationSID = tLocFeature.LocationSID inner join tExposureSet on tlocation.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLocOffshore</TableName><ExtractionQuery><![CDATA[select tLocOffshore.* from tLocOffshore inner join tLocation on tLocOffshore.LocationSID = tLocation.LocationSID inner join tExposureSet on tlocation.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLocParsedAddress</TableName><ExtractionQuery><![CDATA[select tLocParsedAddress.* from tLocParsedAddress inner join tlocation on tlocation.LocationSID = tLocParsedAddress.LocationSID inner join tExposureSet on tlocation.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLocStepFunctionXref</TableName><ExtractionQuery><![CDATA[select tLocStepFunctionXref.* from tLocStepFunctionXref inner join tlocation on tlocation.LocationSID = tLocStepFunctionXref.LocationSID inner join tExposureSet on tlocation.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLocTerm</TableName><ExtractionQuery><![CDATA[select tLocTerm.* from tLocTerm inner join tContract on tContract.ContractSID = tLocTerm.ContractSID inner join tExposureSet on tContract.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tLocWC</TableName><ExtractionQuery><![CDATA[select tLocWC.* from tLocWC inner join tlocation on tlocation.LocationSID = tLocWC.LocationSID inner join tExposureSet on tlocation.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tReinsAppliesToExp</TableName><ExtractionQuery><![CDATA[select tReinsAppliesToExp.* from tReinsAppliesToExp inner join tExposureSet on tReinsAppliesToExp.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tStepFunction</TableName><ExtractionQuery><![CDATA[select tStepFunction.* from tStepFunction inner join tContract on tContract.ContractSID = tStepFunction.ContractSID inner join tExposureSet on tContract.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>tStepFunctionDetail</TableName><ExtractionQuery><![CDATA[select tStepFunctionDetail.* from tStepFunctionDetail inner join tStepFunction on tStepFunction.StepFunctionSID = tStepFunctionDetail.StepFunctionSID inner join tContract on tContract.ContractSID = tStepFunction.ContractSID inner join tExposureSet on tContract.ExposureSetSID = tExposureSet.ExposureSetSID where replace(tExposureSet.ExposureSetName, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo></ExtractionQueries><ConversionQueries><ConversionQueryInfo><ViewName>Account View</ViewName><Headers>AccNumber, AccName, Insured, Producer, Branch, AccUserData1, AccUserData2, AccUserData3, AccUserData4 </Headers><Categories>Accounts</Categories><ConversionQuery><![CDATA[select AccNumber = ContractID, AccName = ContractTypeCode, Insured = InsuredName, Producer = ProducerName, Branch = Branch, AccUserData1 = coalesce(UserDefined1, ''''), AccUserData2 = coalesce(UserDefined2, ''''), AccUserData3 = coalesce(UserDefined3, ''''), AccUserData4 = coalesce(UserDefined4, '''') into @finalTableName from tContract]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy View</ViewName><Headers>AccNumber, PolNumber, PolName, PolStatus, LineOfBusiness, InceptionDate, ExpirationDate, PolCurrency, PolUnderCover, PolProrata, PolPremium, PolUserData1, PolUserData2, PolUserData3</Headers><Categories>Policies</Categories><ConversionQuery><![CDATA[select AccNumber = ContractID, PolNumber = LayerID, PolName = PolicyForm, PolStatus = Case SubmitStatusCode when ''B'' then ''Bound'' when ''C'' then ''Cancelled'' when ''Q'' then ''Quoted'' when ''R'' then ''Cancelled'' when ''S'' then ''Pending'' else ''Bound'' end, LineOfBusiness = UserLineOfBusiness, InceptionDate = REPLACE (InceptionDate, ''-'', ''''), ExpirationDate = REPLACE (ExpirationDate, ''-'', ''''), PolCurrency = CurrencyCode, PolUnderCover = AttachmentPoint, PolProrata = OccParticipation*100, PolPremium = Premium, PolUserData1 = '''', PolUserData2 = '''', PolUserData3 = '''' into @finalTableName from tContract inner join tLayer on ( tLayer.ContractSID = tContract.ContractSID )]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy Condition View</ViewName><Headers>AccNumber, PolNumber, PolPeril, Coverage, PolLimit, PolDed, PolMinDed, PolMaxDed, PolCondType, PolTemplate, PolCondName, PolCondPriority </Headers><Categories>PolicyConditions</Categories><ConversionQuery><![CDATA[;with LayerPeril(LayerSID, PerilCode) as ( select LayerSID, case when perilsetcode=8844 then ''EQXX'' when perilsetcode=8192 then ''EQTS'' when perilsetcode=4368 then ''WIFL'' when perilsetcode=4096 then ''WIFL'' when perilsetcode=2048 then ''FLXX'' when perilsetcode=1024 then ''Undefined'' when perilsetcode=587 then ''ALLP'' when perilsetcode=520 then ''EQXX'' when perilsetcode=512 then ''FIWF'' when perilsetcode=256 then ''WIFL'' when perilsetcode=128 then ''EQSL'' when perilsetcode=67 then ''WIXX'' when perilsetcode=64 then ''STWS'' when perilsetcode=32 then ''Terrorism'' when perilsetcode=16 then ''WIFL'' when perilsetcode=8 then ''EQFF'' when perilsetcode=4 then ''EQSH'' when perilsetcode=2 then ''STTH'' when perilsetcode=1 then ''WIWI'' when perilsetcode=-1 then ''ALLP'' else ''ALLP'' end PerilCode from tLayer ), LayerConditionPeril(LayerConditionSID, PerilCode) as ( select LayerConditionSID, case when perilsetcode=8844 then ''EQXX'' when perilsetcode=8192 then ''EQTS'' when perilsetcode=4368 then ''WIFL'' when perilsetcode=4096 then ''WIFL'' when perilsetcode=2048 then ''FLXX'' when perilsetcode=1024 then ''Undefined'' when perilsetcode=587 then ''ALLP'' when perilsetcode=520 then ''EQXX'' when perilsetcode=512 then ''FIWF'' when perilsetcode=256 then ''WIFL'' when perilsetcode=128 then ''EQSL'' when perilsetcode=67 then ''WIXX'' when perilsetcode=64 then ''STWS'' when perilsetcode=32 then ''Terrorism'' when perilsetcode=16 then ''WIFL'' when perilsetcode=8 then ''EQFF'' when perilsetcode=4 then ''EQSH'' when perilsetcode=2 then ''STTH'' when perilsetcode=1 then ''WIWI'' when perilsetcode=-1 then ''ALLP'' else ''ALLP'' end PerilCode from tLayerCondition ), LayerConditions(LayerConditionSID, LayerCoverage, LayerDeduct, LayerLimit) as ( Select LayerConditionSID, ''CovA'', Attachment1, OccLimit1 from tLayerCondition where Attachment1>0 or OccLimit1>0 union all Select LayerConditionSID, ''CovB'', Attachment2, OccLimit2 from tLayerCondition where Attachment2>0 or OccLimit2>0 union all Select LayerConditionSID, ''CovC'', Attachment3, OccLimit3 from tLayerCondition where Attachment3>0 or OccLimit3>0 union all Select LayerConditionSID, ''CovD'', Attachment4, OccLimit4 from tLayerCondition where Attachment4>0 or OccLimit4>0 ) Select AccNumber = ContractID, PolNumber = LayerID, PolPeril = PerilCode, Coverage = ''ALLCOV'', PolLimit = OccTotalLimit, PolDed = Case DeductibleTypeCode when ''AP'' then Deductible1 when ''B'' then Deductible1 when ''FR'' then Deductible1 when ''PL'' then -Deductible1 when ''MI'' then Deductible1 else 0 end, PolMinDed = Case DeductibleTypeCode When ''MM'' then Deductible1 else 0 end, PolMaxDed = Case When DeductibleTypeCode in(''MA'', ''MM'') then Deductible2 else 0 end, PolCondType = case DeductibleTypeCode when ''FR'' then ''Step'' else ''Standard'' end, PolTemplate = case DeductibleTypeCode when ''FR'' then ''Franchise'' else '''' end, PolCondName = '''', PolCondPriority = 0 into @finalTableName from tLayer inner join LayerPeril on ( LayerPeril.LayerSID=tLayer.LayerSID ) inner join tContract on ( tContract.ContractSID = tLayer.ContractSID ) where ( OccTotalLimit>0 or Deductible1>0 or Deductible2>0 ) union all Select AccNumber = ContractID, PolNumber = LayerID, PolPeril = PerilCode, Coverage = LayerCoverage, PolLimit = Case When tLayerCondition.OccLimitTypeCode in (''B'', ''E'') then LayerLimit else 0 end, PolDed = LayerDeduct, PolMinDed = Case When tLayerCondition.DeductibleTypeCode in(''MI'', ''MM'') then tLayerCondition.Deductible1 else 0 end, PolMaxDed = Case tLayerCondition.DeductibleTypeCode when ''MA'' then tLayerCondition.Deductible2 when ''MM'' then tLayerCondition.Deductible2 when ''MI'' then 1 else 0 end, PolCondType = ''Standard'', PolTemplate = '''', PolCondName = AppliesToTag, PolCondPriority = InuringSequenceNumber from tLayerCondition inner join LayerConditions on ( LayerConditions.LayerConditionSID=tLayerCondition.LayerConditionSID ) inner join LayerConditionPeril on ( LayerConditionPeril.LayerConditionSID=LayerConditions.LayerConditionSID ) inner join tLayer on ( tLayer.LayerSID = tlayerCondition.LayerSID ) inner join tContract on ( tContract.ContractSID = tLayer.ContractSID ) order by 1, 2]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location View</ViewName><Headers>AccNumber, SiteNumber, SiteName, StructureNumber, StructureName, Country, StreetAddress, Postcode, City, AdminLevel2, AdminLevel1, Cresta, SubCresta, Latitude, Longitude, UserGeoData1, UserGeoData3, StructureCode, OccupancyCode, YearBuilt, NumBuildings, NumStories, Currency, StrUserData1, StrUserData2, StrUserData3, StrUserData4, PolCondName1, PolCondName2, PolCondName3, PolCondName4, PolCondName5</Headers><Categories>Sites, Structures</Categories><ConversionQuery><![CDATA[;with LayerLocations(LocationSID, Tag1, Tag2, Tag3, Tag4, Tag5) as ( select LocationSID, coalesce([1], ''''), coalesce([2], ''''), coalesce([3], ''''), coalesce([4], ''''), coalesce([5], '''') from (select LocationSID, Row_Number() over (partition by LocationSID order by X.LayerConditionSID) Ord, AppliesToTag from tLayerConditionLocationXref X inner join tLayerCondition C on (C.LayerConditionSID=X.LayerConditionSID) ) Data pivot ( max(AppliesToTag) for Ord in ([1], [2], [3], [4], [5]) ) Piv ) Select AccNumber = ContractID, SiteNumber = case when LocationGroup <> '''' then LocationGroup else LocationID end, SiteName = coalesce(LocationName, ''''), StructureNumber = LocationID, StructureName = coalesce(LocationName, ''''), Country = countrycode, StreetAddress = Address, Postcode = PostalCode, City = City, AdminLevel2 = SubareaName, AdminLevel1 = AreaCode, Cresta = CRESTACode, SubCresta = '''', Latitude = Latitude, Longitude = Longitude, UserGeoData1 = coalesce(EnhancedGeoMatchLevelCode, ''''), UserGeoData3 = ''C='' + rtrim(cast(GeoMatchLevelCode as CHAR)), StructureCode = ''AIR_'' + rtrim(cast(AIRConstructionCodeA as CHAR)), OccupancyCode = ''AIR_'' + rtrim(cast(AIROccupancyCode as CHAR)), YearBuilt = Case when YearBuilt = 0 then '''' else cast(YearBuilt as CHAR) end, NumBuildings = RiskCount, NumStories = Case when Stories = 0 then '''' else cast(Stories as CHAR) end, Currency = tLocation.CurrencyCode, StrUserData1 = coalesce(tLocation.UserDefined1, ''''), StrUserData2 = coalesce(tLocation.UserDefined2, ''''), StrUserData3 = coalesce(tLocation.UserDefined3, ''''), StrUserData4 = coalesce(tLocation.UserDefined4, ''''), PolCondName1 = coalesce(Tag1, ''''), PolCondName2 = coalesce(Tag2, ''''), PolCondName3 = coalesce(Tag3, ''''), PolCondName4 = coalesce(Tag4, ''''), PolCondName5 = coalesce(Tag5, '''') into @finalTableName from tLocation left outer join LayerLocations on ( LayerLocations.LocationSID=tLocation.LocationSID ) inner join tContract on ( tContract.ContractSID = tLocation.ContractSID ) order by 1, 2]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location Coverage View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, Peril, CovAVal, CovBVal, CovCVal, CovDVal</Headers><Categories>StructureCoverages</Categories><ConversionQuery><![CDATA[;with SubPerilList(LocationSID, PerilCode, PerilSet) as ( select LocationSID, case when perilsetcode=8844 then ''EQXX'' when perilsetcode>=8192 then ''EQTS'' when perilsetcode>=4096 then ''WIFL'' when perilsetcode>=2048 then ''FLXX'' when perilsetcode>=1024 then ''Undefined'' when perilsetcode>=512 then ''FIWF'' when perilsetcode>=256 then ''WIFL'' when perilsetcode>=128 then ''EQSL'' when perilsetcode>=64 then ''STWS'' when perilsetcode>=32 then ''Terrorism'' when perilsetcode>=16 then ''WIFL'' when perilsetcode>=8 then ''EQFF'' when perilsetcode>=4 then ''EQSH'' when perilsetcode>=2 then ''STTH'' when perilsetcode>=1 then ''WIWI'' when perilsetcode=-1 then ''ALLP'' end PerilCode, case when perilsetcode>=8844 then perilsetcode-8844 when perilsetcode>=8192 then perilsetcode-8192 when perilsetcode>=4096 then perilsetcode-4096 when perilsetcode>=2048 then perilsetcode-2048 when perilsetcode>=1024 then perilsetcode-1024 when perilsetcode>=512 then perilsetcode-512 when perilsetcode>=256 then perilsetcode-256 when perilsetcode>=128 then perilsetcode-128 when perilsetcode>=64 then perilsetcode-64 when perilsetcode>=32 then perilsetcode-32 when perilsetcode>=16 then perilsetcode-16 when perilsetcode>=8 then perilsetcode-8 when perilsetcode>=4 then perilsetcode-4 when perilsetcode>=2 then perilsetcode-2 else 0 end PerilSet from tLocTerm union all select LocationSID, case when perilset>=8192 then ''EQTS'' when perilset>=4096 then ''WIFL'' when perilset>=2048 then ''FLXX'' when perilset>=1024 then ''Undefined'' when perilset>=512 then ''FIWF'' when perilset>=256 then ''WIFL'' when perilset>=128 then ''EQSL'' when perilset>=64 then ''STWS'' when perilset>=32 then ''Terrorism'' when perilset>=16 then ''WIFL'' when perilset>=8 then ''EQFF'' when perilset>=4 then ''EQSH'' when perilset>=2 then ''STTH'' when perilset>=1 then ''WIWI'' when perilset=-1 then ''ALLP'' end, case when perilset>=8192 then perilset-8192 when perilset>=4096 then perilset-4096 when perilset>=2048 then perilset-2048 when perilset>=1024 then perilset-1024 when perilset>=512 then perilset-512 when perilset>=256 then perilset-256 when perilset>=128 then perilset-128 when perilset>=64 then perilset-64 when perilset>=32 then perilset-32 when perilset>=16 then perilset-16 when perilset>=8 then perilset-8 when perilset>=4 then perilset-4 when perilset>=2 then perilset-2 else 0 end from SubPerilList where PerilSet>0 ), LocCombinedPeril(LocationSID, PerilCode) as ( select distinct LocationSID, PerilCode from SubPerilList ), SiteStructureList(LocationSID, SiteNumber, StructureNumber) as ( select LocationSID, case when LocationGroup <> '''' then LocationGroup else LocationID end, LocationID from tLocation L ) Select AccNumber = ContractID, SiteNumber = case when LocationGroup <> '''' then LocationGroup else LocationID end, StructureNumber = LocationID, Peril = PerilCode, CovAVal = ReplacementValueA, CovBVal = ReplacementValueB, CovCVal = ReplacementValueC, CovDVal = case ReplacementValueDaysCovered when 0 then ReplacementValueD else ReplacementValueD*365/ReplacementValueDaysCovered end into @finalTableName from tLocation inner join LocCombinedPeril on ( LocCombinedPeril.LocationSID = tLocation.LocationSID ) inner join tContract on ( tContract.ContractSID = tLocation.ContractSID ) where ( PerilCode=''EQTS'' and CountryCode=''JPN'' ) or PerilCode<>''EQTS'' order by 1, 2, 3]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Site Condition View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, LocPeril, Coverage, LocDeduct, LocLimit, LocCondType, LocTemplate, LocCondPriority</Headers><Categories>SiteConditions</Categories><ConversionQuery><![CDATA[;with LocPeril(LocationSID, PerilCode) as ( select LocationSID, case when perilsetcode=8844 then ''EQXX'' when perilsetcode=8192 then ''EQTS'' when perilsetcode=4368 then ''WIFL'' when perilsetcode=4096 then ''WIFL'' when perilsetcode=2048 then ''FLXX'' when perilsetcode=1024 then ''Undefined'' when perilsetcode=587 then ''ALLP'' when perilsetcode=520 then ''EQXX'' when perilsetcode=512 then ''FIWF'' when perilsetcode=256 then ''WIFL'' when perilsetcode=128 then ''EQSL'' when perilsetcode=67 then ''WIXX'' when perilsetcode=64 then ''STWS'' when perilsetcode=32 then ''Terrorism'' when perilsetcode=16 then ''WIFL'' when perilsetcode=8 then ''EQFF'' when perilsetcode=4 then ''EQSH'' when perilsetcode=2 then ''STTH'' when perilsetcode=1 then ''WIWI'' when perilsetcode=-1 then ''ALLP'' else ''ALLP'' end PerilCode from tLocTerm ), LocLimitConditions(LocationSID, Coverage, Limit, Priority) as ( select LocationSID, ''CovA'', Limit1, 3 from tLocTerm where LimitTypeCode in (''C'',''EE'') and Limit1>0 union all select LocationSID, ''CovB'', Limit2, 3 from tLocTerm where LimitTypeCode in (''C'',''EE'') and Limit2>0 union all select LocationSID, ''CovC'', Limit3, 3 from tLocTerm where LimitTypeCode in (''C'',''EE'') and Limit3>0 union all select LocationSID, ''CovD'', Limit4, 3 from tLocTerm where LimitTypeCode in (''C'',''EE'') and Limit4>0 union all select LocationSID, ''AllCov'', Limit1, 1 from tLocTerm where (LimitTypeCode=''S'' or LimitTypeCode=''EF'') and Limit1>0 ), LocDeductConditions(LocationSID, Coverage, Deductible, Priority) as ( select LocationSID, ''CovA'', Deductible1, 3 from tLocTerm where DeductibleTypeCode=''C'' and Deductible1>0 union all select LocationSID, ''CovB'', Deductible2, 3 from tLocTerm where DeductibleTypeCode=''C'' and Deductible2>0 union all select LocationSID, ''CovC'', Deductible3, 3 from tLocTerm where DeductibleTypeCode=''C'' and Deductible3>0 union all select LocationSID, ''CovD'', Deductible4, 3 from tLocTerm where DeductibleTypeCode in (''C'',''CT'') and Deductible4>0 union all select LocationSID, ''AllCov'', Deductible1, 1 from tLocTerm where DeductibleTypeCode in (''S'',''FR'',''MP'') and Deductible1>0 union all select LocationSID, ''AllProp'', Deductible1, 2 from tLocTerm where DeductibleTypeCode in (''CB'',''CT'') and Deductible1>0 union all select LocationSID, ''AllCov'', -Deductible1, 1 from tLocTerm where DeductibleTypeCode=''PL'' and Deductible4>0 ), LocConditions(LocationSID, Coverage, Deductible, Limit, Priority) as ( select case when L.LocationSID is not null then L.LocationSID else D.LocationSID end, case when L.Coverage is not null then L.Coverage else D.Coverage end, coalesce(Deductible, 0), coalesce(Limit, 0), case when L.Priority is not null then L.Priority else D.Priority end from LocLimitConditions L full outer join LocDeductConditions D on L.LocationSID=D.LocationSID and L.Coverage=D.Coverage and L.Priority=D.Priority ) Select AccNumber = ContractID, SiteNumber = case when LocationGroup <> '''' then LocationGroup else LocationID end, StructureNumber = LocationID, LocPeril = PerilCode, Coverage = Coverage, LocDeduct = Deductible, LocLimit = Limit, LocCondType = case when LimitTypeCode=''EF'' or DeductibleTypeCode=''FR'' then ''Step'' else ''Standard'' end, LocTemplate = case when LimitTypeCode=''EF'' then ''Franchise Quake, EFEI'' when DeductibleTypeCode=''FR'' then ''Franchise'' else '''' end, LocCondPriority = Priority into @finalTableName from tLocTerm inner join LocConditions on ( LocConditions.LocationSID = tLocTerm.LocationSID ) inner join tLocation on ( tLocTerm.LocationSID = tLocation.LocationSID ) inner join tContract on ( tContract.ContractSID = tLocation.ContractSID ) inner join LocPeril on LocPeril.LocationSID=tLocation.LocationSID order by 1, 2, 3]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Reinsurance View</ViewName><Headers>AccNumber, PolNumber, SiteNumber, ReinsType, AppliesTo, LayerNumber, Currency, Peril, Coverage, LayerAmount, Attachment, CededPct, Reinsurer, TreatyName, FacCertificate</Headers><Categories>Reinsurance</Categories><ConversionQuery><![CDATA[;with ReinsPeril(ReinsAppliesToExpSID, PerilCode) as ( select ReinsAppliesToExpSID, case when perilsetcode=8844 then ''EQXX'' when perilsetcode=8192 then ''EQTS'' when perilsetcode=4368 then ''WIFL'' when perilsetcode=4096 then ''WIFL'' when perilsetcode=2048 then ''FLXX'' when perilsetcode=1024 then ''Undefined'' when perilsetcode=587 then ''ALLP'' when perilsetcode=520 then ''EQXX'' when perilsetcode=512 then ''FIWF'' when perilsetcode=256 then ''WIFL'' when perilsetcode=128 then ''EQSL'' when perilsetcode=67 then ''WIXX'' when perilsetcode=64 then ''STWS'' when perilsetcode=32 then ''Terrorism'' when perilsetcode=16 then ''WIFL'' when perilsetcode=8 then ''EQFF'' when perilsetcode=4 then ''EQSH'' when perilsetcode=2 then ''STTH'' when perilsetcode=1 then ''WIWI'' when perilsetcode=-1 then ''ALLP'' else ''ALLP'' end PerilCode from tReinsAppliesToExp ) Select AccNumber = case ReinsTargetTypeCode when ''CON'' then (select ContractID from tContract where tContract.ContractSID=ReinsTargetSID) when ''LYR'' then (select ContractID from tContract where ContractSID=(select ContractSID from tLayer where LayerSID=ReinsTargetSID)) when ''LOC'' then (select ContractID from tContract where ContractSID=(select ContractSID from tLocation where LocationSID=ReinsTargetSID)) else '''' end, PolNumber = case ReinsTargetTypeCode when ''LYR'' then (select LayerID from tLayer where tLayer.LayerSID=ReinsTargetSID) else '''' end , SiteNumber = case ReinsTargetTypeCode when ''LOC'' then (select LocationID from tLocation where tLocation.LocationSID=ReinsTargetSID) else '''' end, ReinsType = case ReinsuranceTypeCode when ''FAC'' then ''F'' when ''SS'' then ''T'' else ''T'' end, AppliesTo = case ReinsTargetTypeCode when ''CON'' then ''A'' when ''LYR'' then ''P'' when ''LOC'' then ''S'' else '''' end, LayerNumber = 1, Currency = CurrencyCode, Peril = PerilCode, Coverage = ''AllCov'', LayerAmount = GrossLimit, Attachment = AttachmentPoint, CededPct = 100*CededAmount, Reinsurer = ReinsurerName, TreatyName = case ReinsuranceTypeCode when ''FAC'' then '''' else ReinsuranceID end, FacCertificate = case ReinsuranceTypeCode when ''FAC'' then ReinsuranceID else '''' end into @finalTableName from tReinsAppliesToExp inner join ReinsPeril on ReinsPeril.ReinsAppliesToExpSID=tReinsAppliesToExp.ReinsAppliesToExpSID order by 1, 2, 3]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Secondary Structure</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, EFeatureCode, EFeatureValue, WFeatureCode, WFeatureValue</Headers><Categories>SecondaryStructures</Categories><ConversionQuery><![CDATA[select AccNumber = 0, SiteNumber=0, StructureNumber=0, EFeatureCode='''', EFeatureValue=0, WFeatureCode='''', WFeatureValue=0 into @finalTableName from tLocFeature where 1=2]]></ConversionQuery></ConversionQueryInfo></ConversionQueries></DataExtractionTemplate>');	

		if not exists(select 1 from templateInfo where templateName='Standard CEDE Import Template') 
			INSERT INTO [templateinfo] ([TemplateName],[TemplateType],[UserLevel],[IsLocked],[IsActive],[Category],[ReferenceCount],[TemplateVersion],[CreateDate],[ModifyDate],[CreatedBy],[ModifiedBy],[TemplateXml]) VALUES 
			('Standard CEDE Import Template',1,'U','N','Y','C',8,'2015.001','20150223155045','20150224112509',1,1,'<?xml version="1.0" encoding="UTF-8" standalone="no"?><ImportMappingTemplate xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><SourceDataInfo relationshipType="R" sourceCount="8" sourceType="X"><OriginalSources><OriginalSourceData alias="A" name="Account" sourceId="1"/><OriginalSourceData alias="B" name="Policy" sourceId="2"/><OriginalSourceData alias="C" name="PolicyCondition" sourceId="3"/><OriginalSourceData alias="D" name="Location" sourceId="4"/><OriginalSourceData alias="E" name="LocCoverage" sourceId="5"/><OriginalSourceData alias="F" name="LocCondition" sourceId="6"/><OriginalSourceData alias="G" name="Reinsurance" sourceId="7"/><OriginalSourceData alias="H" name="StructureFeature" sourceId="8"/></OriginalSources><Relationships><Categories><Category displayName="Account" name="Accounts" sourceId="1" tableName="Account"/><Category displayName="Policy" name="Policies" sourceId="2" tableName="Policy"/><Category displayName="Policy Condition" name="PolicyConditions" sourceId="3" tableName="PolicyCondition"/><Category displayName="Site" name="Sites" sourceId="4" tableName="Site"/><Category displayName="Structure" name="Structures" sourceId="4" tableName="Structure"/><Category displayName="Structure Coverage" name="StructureCoverages" sourceId="5" tableName="StructureCoverage"/><Category displayName="Site Condition" name="SiteConditions" sourceId="6" tableName="SiteCondition"/><Category displayName="Structure Feature" name="SecondaryStructures" sourceId="8" tableName="StructureFeature"/><Category displayName="Reinsurance" name="Reinsurance" sourceId="7" tableName="Reinsurance"/></Categories><KeyFields sourceId="1"><KeyField name="AccountNumber" sourceColumnName="AccNumber" sourceColumnNumber="1"/></KeyFields><KeyFields sourceId="2"><KeyField name="AccountNumber" sourceColumnName="AccNumber" sourceColumnNumber="1"/><KeyField name="PolicyNumber" sourceColumnName="PolNumber" sourceColumnNumber="2"/></KeyFields><KeyFields sourceId="3"><KeyField name="AccountNumber" sourceColumnName="AccNumber" sourceColumnNumber="1"/><KeyField name="PolicyNumber" sourceColumnName="PolNumber" sourceColumnNumber="2"/></KeyFields><KeyFields sourceId="4"><KeyField name="AccountNumber" sourceColumnName="AccNumber" sourceColumnNumber="1"/><KeyField name="SiteNumber" sourceColumnName="SiteNumber" sourceColumnNumber="2"/><KeyField name="StructureNumber" sourceColumnName="StructureNumber" sourceColumnNumber="4"/></KeyFields><KeyFields sourceId="5"><KeyField name="AccountNumber" sourceColumnName="AccNumber" sourceColumnNumber="1"/><KeyField name="SiteNumber" sourceColumnName="SiteNumber" sourceColumnNumber="2"/><KeyField name="StructureNumber" sourceColumnName="StructureNumber" sourceColumnNumber="3"/></KeyFields><KeyFields sourceId="6"><KeyField name="AccountNumber" sourceColumnName="AccNumber" sourceColumnNumber="1"/><KeyField name="SiteNumber" sourceColumnName="SiteNumber" sourceColumnNumber="2"/><KeyField name="StructureNumber" sourceColumnName="StructureNumber" sourceColumnNumber="3"/></KeyFields><KeyFields sourceId="7"><KeyField name="AccountNumber" sourceColumnName="AccNumber" sourceColumnNumber="1"/><KeyField name="PolicyNumber" sourceColumnName="PolNumber" sourceColumnNumber="2"/><KeyField name="SiteNumber" sourceColumnName="SiteNumber" sourceColumnNumber="3"/></KeyFields><KeyFields sourceId="8"><KeyField name="AccountNumber" sourceColumnName="AccNumber" sourceColumnNumber="1"/><KeyField name="SiteNumber" sourceColumnName="SiteNumber" sourceColumnNumber="2"/><KeyField name="StructureNumber" sourceColumnName="StructureNumber" sourceColumnNumber="3"/></KeyFields></Relationships><SourceHeaders><SourceHeader sourceId="1"><Headers><Header colId="1" name="AccNumber"/><Header colId="2" name="AccName"/><Header colId="3" name="Insured"/><Header colId="4" name="Producer"/><Header colId="5" name="Branch"/><Header colId="6" name="AccUserData1"/><Header colId="7" name="AccUserData2"/><Header colId="8" name="AccUserData3"/><Header colId="9" name="AccUserData4"/></Headers></SourceHeader><SourceHeader sourceId="2"><Headers><Header colId="1" name="AccNumber"/><Header colId="2" name="PolNumber"/><Header colId="3" name="PolName"/><Header colId="4" name="PolStatus"/><Header colId="5" name="LineOfBusiness"/><Header colId="6" name="InceptionDate"/><Header colId="7" name="ExpirationDate"/><Header colId="8" name="PolCurrency"/><Header colId="9" name="PolUnderCover"/><Header colId="10" name="PolProrata"/><Header colId="11" name="PolPremium"/><Header colId="12" name="PolUserData1"/><Header colId="13" name="PolUserData2"/><Header colId="14" name="PolUserData3"/></Headers></SourceHeader><SourceHeader sourceId="3"><Headers><Header colId="1" name="AccNumber"/><Header colId="2" name="PolNumber"/><Header colId="3" name="PolPeril"/><Header colId="4" name="Coverage"/><Header colId="5" name="PolLimit"/><Header colId="6" name="PolDed"/><Header colId="7" name="PolMinDed"/><Header colId="8" name="PolMaxDed"/><Header colId="9" name="PolCondType"/><Header colId="10" name="PolTemplate"/><Header colId="11" name="PolCondName"/><Header colId="12" name="PolCondPriority"/></Headers></SourceHeader><SourceHeader sourceId="4"><Headers><Header colId="1" name="AccNumber"/><Header colId="2" name="SiteNumber"/><Header colId="3" name="SiteName"/><Header colId="4" name="StructureNumber"/><Header colId="5" name="StructureName"/><Header colId="6" name="Country"/><Header colId="7" name="StreetAddress"/><Header colId="8" name="Postcode"/><Header colId="9" name="City"/><Header colId="10" name="AdminLevel2"/><Header colId="11" name="AdminLevel1"/><Header colId="12" name="Cresta"/><Header colId="13" name="SubCresta"/><Header colId="14" name="Latitude"/><Header colId="15" name="Longitude"/><Header colId="16" name="UserGeoData1"/><Header colId="17" name="UserGeoData3"/><Header colId="18" name="StructureCode"/><Header colId="19" name="OccupancyCode"/><Header colId="20" name="YearBuilt"/><Header colId="21" name="NumBuildings"/><Header colId="22" name="NumStories"/><Header colId="23" name="Currency"/><Header colId="24" name="StrUserData1"/><Header colId="25" name="StrUserData2"/><Header colId="26" name="StrUserData3"/><Header colId="27" name="StrUserData4"/><Header colId="28" name="PolCondName1"/><Header colId="29" name="PolCondName2"/><Header colId="30" name="PolCondName3"/><Header colId="31" name="PolCondName4"/><Header colId="32" name="PolCondName5"/></Headers></SourceHeader><SourceHeader sourceId="5"><Headers><Header colId="1" name="AccNumber"/><Header colId="2" name="SiteNumber"/><Header colId="3" name="StructureNumber"/><Header colId="4" name="Peril"/><Header colId="5" name="CovAVal"/><Header colId="6" name="CovBVal"/><Header colId="7" name="CovCVal"/><Header colId="8" name="CovDVal"/></Headers></SourceHeader><SourceHeader sourceId="6"><Headers><Header colId="1" name="AccNumber"/><Header colId="2" name="SiteNumber"/><Header colId="3" name="StructureNumber"/><Header colId="4" name="LocPeril"/><Header colId="5" name="Coverage"/><Header colId="6" name="LocDeduct"/><Header colId="7" name="LocLimit"/><Header colId="8" name="LocCondType"/><Header colId="9" name="LocTemplate"/><Header colId="10" name="LocCondPriority"/></Headers></SourceHeader><SourceHeader sourceId="7"><Headers><Header colId="1" name="AccNumber"/><Header colId="2" name="PolNumber"/><Header colId="3" name="SiteNumber"/><Header colId="4" name="ReinsType"/><Header colId="5" name="AppliesTo"/><Header colId="6" name="LayerNumber"/><Header colId="7" name="Currency"/><Header colId="8" name="Peril"/><Header colId="9" name="Coverage"/><Header colId="10" name="LayerAmount"/><Header colId="11" name="Attachment"/><Header colId="12" name="CededPct"/><Header colId="13" name="Reinsurer"/><Header colId="14" name="TreatyName"/><Header colId="15" name="FacCertificate"/></Headers></SourceHeader><SourceHeader sourceId="8"><Headers><Header colId="1" name="AccNumber"/><Header colId="2" name="SiteNumber"/><Header colId="3" name="StructureNumber"/><Header colId="4" name="EFeatureCode"/><Header colId="5" name="EFeatureValue"/><Header colId="6" name="WFeatureCode"/><Header colId="7" name="WFeatureValue"/></Headers></SourceHeader></SourceHeaders></SourceDataInfo><Mappings><Mapping mapType="NormalMap" order="1" pair="E1"><Source sourceId="8">[EFeatureCode]</Source><Target displayName="Code" systemLookupName="QuakeSecStructCache" targetField="FeatureCode" targetTable="StructureFeature"/></Mapping><Mapping mapType="NormalMap" order="1" pair="E1"><Source sourceId="8">[EFeatureValue]</Source><Target displayName="Value" targetField="FeatureValue" targetTable="StructureFeature"/></Mapping><Mapping mapType="NormalMap" order="1" pair="W1"><Source sourceId="8">[WFeatureCode]</Source><Target displayName="Code" systemLookupName="WindSecStructCache" targetField="FeatureCode" targetTable="StructureFeature"/></Mapping><Mapping mapType="NormalMap" order="1" pair="W1"><Source sourceId="8">[WFeatureValue]</Source><Target displayName="Value" targetField="FeatureValue" targetTable="StructureFeature"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[AccNumber]</Source><Target displayName="Account Number" targetField="AccountNumber" targetTable="Account"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[AccName]</Source><Target displayName="Account Name" targetField="AccountName" targetTable="Account"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[Insured]</Source><Target displayName="Insured" targetField="Insured" targetTable="Account"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[Producer]</Source><Target displayName="Producer" targetField="Producer" targetTable="Account"/></Mapping><Mapping mapType="FixedValue"><Source>Unspecified</Source><Target displayName="Company" targetField="Company" targetTable="Account"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[Branch]</Source><Target displayName="Branch" targetField="Branch" targetTable="Account"/></Mapping><Mapping mapType="FixedValue"><Source>Unspecified</Source><Target displayName="Division" targetField="Division" targetTable="Account"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[AccUserData1]</Source><Target displayName="User Data 1" targetField="UserData1" targetTable="Account"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[AccUserData2]</Source><Target displayName="User Data 2" targetField="UserData2" targetTable="Account"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="1">[AccUserData3]</Source><Target displayName="User Data 3" targetField="UserData3" targetTable="Account"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[PolNumber]</Source><Target displayName="Policy Number" targetField="PolicyNumber" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[PolName]</Source><Target displayName="Policy Name" targetField="PolicyName" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[PolCurrency]</Source><Target displayName="Currency Code" systemLookupName="CurrencyCache" targetField="CurrencyCode" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[PolPremium]</Source><Target displayName="Premium" targetField="Premium" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[PolUnderCover]</Source><Target displayName="Undercover" targetField="UnderCover" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[PolProrata]</Source><Target displayName="Pro-rata (%)" targetField="Prorata" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[InceptionDate]</Source><Target displayName="Inception Date" targetField="InceptionDate" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[ExpirationDate]</Source><Target displayName="Expiration Date" targetField="ExpirationDate" targetTable="Policy"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="2">[PolStatus]</Source><Target displayName="Policy Status" systemLookupName="PolicyStatusCache" targetField="PolicyStatusID" targetTable="Policy"/></Mapping><Mapping mapType="AutoLookup"><Source sourceId="2">[LineOfBusiness]</Source><Target displayName="Line of Business" targetField="LineOfBusinessID" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[PolUserData1]</Source><Target displayName="User Data 1" targetField="UserData1" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[PolUserData2]</Source><Target displayName="User Data 2" targetField="UserData2" targetTable="Policy"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="2">[PolUserData3]</Source><Target displayName="User Data 3" targetField="UserData3" targetTable="Policy"/></Mapping><Mapping mapType="FixedValue" order="1"><Source>ALLP</Source><Target displayName="Peril" systemLookupName="PerilCache" targetField="PerilID" targetTable="PolicyCondition"/></Mapping><Mapping mapType="FixedPickList" order="1"><Source sourceId="3">[Coverage]</Source><Target displayName="Coverage" systemLookupName="CoverageCache" targetField="CoverageID" targetTable="PolicyCondition"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="3">[PolLimit]</Source><Target displayName="Limit" targetField="Limit" targetTable="PolicyCondition"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="3">[PolDed]</Source><Target displayName="Deductible" targetField="Deductible" targetTable="PolicyCondition"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="3">[PolMinDed]</Source><Target displayName="Minimum Deductible" targetField="MinDeductible" targetTable="PolicyCondition"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="3">[PolMaxDed]</Source><Target displayName="Maximum Deductible" targetField="MaxDeductible" targetTable="PolicyCondition"/></Mapping><Mapping mapType="FixedPickList" order="1"><Source sourceId="3">[PolCondType]</Source><Target displayName="Condition Type" systemLookupName="PolicyConditionTypeCache" targetField="ConditionTypeID" targetTable="PolicyCondition"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="3">[PolCondName]</Source><Target displayName="Condition Name" targetField="PolicyConditionNameKey" targetTable="PolicyCondition"/></Mapping><Mapping mapType="FixedPickList" order="1"><Source sourceId="3">[PolTemplate]</Source><Target displayName="Step Template Name" systemLookupName="StepTemplateCache" targetField="StepTemplateID" targetTable="PolicyCondition"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="3">[PolCondPriority]</Source><Target displayName="Condition Priority" targetField="ConditionPriority" targetTable="PolicyCondition"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[SiteNumber]</Source><Target displayName="Site Number" targetField="SiteNumber" targetTable="Site"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[SiteName]</Source><Target displayName="Site Name" targetField="SiteName" targetTable="Site"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[Country]</Source><Target displayName="Country Code" systemLookupName="CountryCache" targetField="CountryCode" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[Currency]</Source><Target displayName="Currency Code" systemLookupName="CurrencyCache" targetField="CurrencyCode" targetTable="Site"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[StructureNumber]</Source><Target displayName="Structure Number" targetField="StructureNumber" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[StructureName]</Source><Target displayName="Structure Name" targetField="StructureName" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[StreetAddress]</Source><Target displayName="Street Address" targetField="StreetAddress" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[City]</Source><Target displayName="City" targetField="City" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[Postcode]</Source><Target displayName="Postcode" targetField="PostCode" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[AdminLevel1]</Source><Target displayName="Admin Level 1" targetField="AdminLevel1" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[AdminLevel2]</Source><Target displayName="Admin Level 2" targetField="AdminLevel2" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[Cresta]</Source><Target displayName="Cresta" targetField="Cresta" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[SubCresta]</Source><Target displayName="SubCresta" targetField="SubCresta" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[Latitude]</Source><Target displayName="Latitude" targetField="Latitude" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[Longitude]</Source><Target displayName="Longitude" targetField="Longitude" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[UserGeoData1]</Source><Target displayName="User Geodata 1" targetField="UserGeodata1" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[UserGeoData3]</Source><Target displayName="User Geodata 3" targetField="UserGeodata3" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="4">[StructureCode]</Source><Target displayName="Earthquake Structure Type" systemLookupName="EQStructCache" targetField="EQStructureTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="4">[StructureCode]</Source><Target displayName="Wind Structure Type" systemLookupName="WSStructCache" targetField="WSStructureTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="4">[StructureCode]</Source><Target displayName="Flood Structure Type" systemLookupName="FLStructCache" targetField="FLStructureTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="4">[OccupancyCode]</Source><Target displayName="Earthquake Occupancy Type" systemLookupName="EQOccupancyCache" targetField="EQOccupancyTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="4">[OccupancyCode]</Source><Target displayName="Wind Occupancy Type" systemLookupName="WSOccupancyCache" targetField="WSOccupancyTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList"><Source sourceId="4">[OccupancyCode]</Source><Target displayName="Flood Occupancy Type" systemLookupName="FLOccupancyCache" targetField="FLOccupancyTypeID" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>Average</Source><Target displayName="Structure Modifier" systemLookupName="StructureModifierCache" targetField="StructureModifierID" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[YearBuilt]</Source><Target displayName="Year Built" targetField="YearBuilt" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[NumStories]</Source><Target displayName="Number of Stories" targetField="NumStories" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[NumBuildings]</Source><Target displayName="Number of Buildings" targetField="NumBuildings" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Has a Basement" systemLookupName="HasBasementEnumCache" targetField="HasBasement" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Ground Elevation" targetField="GroundElevation" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="First Floor Elevation" targetField="FirstFloorElevation" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Floor Area" targetField="FloorArea" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[StrUserData1]</Source><Target displayName="User Data 1" targetField="UserData1" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[StrUserData2]</Source><Target displayName="User Data 2" targetField="UserData2" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap"><Source sourceId="4">[StrUserData3]</Source><Target displayName="User Data 3" targetField="UserData3" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Sprinklered Percent" targetField="PctStructureSprinklered" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Sprinklered Percent - High Vuln." targetField="SprinklerContentPctVulnHigh" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Sprinklered Percent - Medium Vuln." targetField="SprinklerContentPctVulnMedium" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source/><Target displayName="Sprinklered Percent - Low Vuln." targetField="SprinklerContentPctVulnLow" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Total Number of Employees" targetField="HeadCount" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Aggregated Annual Salary" targetField="Salary" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Day Shift Weight" targetField="Shift1Weight" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Swing Shift Weight" targetField="Shift2Weight" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Night Shift Weight" targetField="Shift3Weight" targetTable="Structure"/></Mapping><Mapping mapType="FixedValue"><Source>0</Source><Target displayName="Weekends and Holidays Shift Weight" targetField="Shift4Weight" targetTable="Structure"/></Mapping><Mapping mapType="FixedPickList" order="1"><Source sourceId="5">[Peril]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="2"><Source sourceId="5">[Peril]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="3"><Source sourceId="5">[Peril]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedPickList" order="4"><Source sourceId="5">[Peril]</Source><Target displayName="Peril" systemLookupName="StructureCoveragePerilCache" targetField="PerilID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="1"><Source>CovA</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="2"><Source>CovB</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="3"><Source>CovC</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="4"><Source>CovD</Source><Target displayName="Coverage" systemLookupName="StructureCoverageCache" targetField="CoverageID" targetTable="StructureCoverage"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="5">[CovAVal]</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="NormalMap" order="2"><Source sourceId="5">[CovBVal]</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="NormalMap" order="3"><Source sourceId="5">[CovCVal]</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="NormalMap" order="4"><Source sourceId="5">[CovDVal]</Source><Target displayName="Value" targetField="Value" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="1"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="2"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="3"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="FixedValue" order="4"><Source>1</Source><Target displayName="Damage Factor" targetField="DamageFactor" targetTable="StructureCoverage"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="4">[PolCondName1]</Source><Target displayName="Condition Name" targetField="PolicyConditionKey" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap" order="2"><Source sourceId="4">[PolCondName2]</Source><Target displayName="Condition Name" targetField="PolicyConditionKey" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap" order="3"><Source sourceId="4">[PolCondName3]</Source><Target displayName="Condition Name" targetField="PolicyConditionKey" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap" order="4"><Source sourceId="4">[PolCondName4]</Source><Target displayName="Condition Name" targetField="PolicyConditionKey" targetTable="Structure"/></Mapping><Mapping mapType="NormalMap" order="5"><Source sourceId="4">[PolCondName5]</Source><Target displayName="Condition Name" targetField="PolicyConditionKey" targetTable="Structure"/></Mapping><Mapping appliesTo="Structure" mapType="FixedValue" order="1"><Source>ALLP</Source><Target displayName="Peril" systemLookupName="PerilCache" targetField="PerilID" targetTable="SiteCondition"/></Mapping><Mapping appliesTo="Structure" mapType="FixedPickList" order="1"><Source sourceId="6">[Coverage]</Source><Target displayName="Coverage" systemLookupName="CoverageCache" targetField="CoverageID" targetTable="SiteCondition"/></Mapping><Mapping appliesTo="Structure" mapType="NormalMap" order="1"><Source sourceId="6">[LocLimit]</Source><Target displayName="Limit" targetField="Limit" targetTable="SiteCondition"/></Mapping><Mapping appliesTo="Structure" mapType="NormalMap" order="1"><Source sourceId="6">[LocDeduct]</Source><Target displayName="Deductible" targetField="Deductible" targetTable="SiteCondition"/></Mapping><Mapping appliesTo="Structure" mapType="FixedPickList" order="1"><Source sourceId="6">[LocCondType]</Source><Target displayName="Condition Type" systemLookupName="StructureConditionTypeCache" targetField="ConditionTypeID" targetTable="SiteCondition"/></Mapping><Mapping appliesTo="Structure" mapType="FixedPickList" order="1"><Source sourceId="6">[LocTemplate]</Source><Target displayName="Step Template Name" systemLookupName="StepTemplateCache" targetField="StepTemplateID" targetTable="SiteCondition"/></Mapping><Mapping appliesTo="Structure" mapType="NormalMap" order="1"><Source sourceId="6">[LocCondPriority]</Source><Target displayName="Condition Priority" targetField="ConditionPriority" targetTable="SiteCondition"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[AccNumber]</Source><Target displayName="Account Number" targetField="AccountKey" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[PolNumber]</Source><Target displayName="Policy Number" targetField="PolicyKey" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[SiteNumber]</Source><Target displayName="Site Number" targetField="SiteKey" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[AppliesTo]</Source><Target displayName="Applies To" systemLookupName="ReinsuranceAppliesToCache" targetField="AppliesTo" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[ReinsType]</Source><Target displayName="Treaty Type" systemLookupName="ReinsuranceTreatyTypeCache" targetField="TreatyType" targetTable="Reinsurance"/></Mapping><Mapping mapType="AutoLookup" order="1"><Source sourceId="7">[TreatyName]</Source><Target displayName="Treaty Tag" targetField="TreatyTagID" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[Currency]</Source><Target displayName="Currency Code" systemLookupName="CurrencyCache" targetField="CurrencyCode" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[FacCertificate]</Source><Target displayName="Certificate" targetField="Certificate" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[LayerNumber]</Source><Target displayName="Layer Number" targetField="LayerNumber" targetTable="Reinsurance"/></Mapping><Mapping mapType="FixedPickList" order="1"><Source sourceId="7">[Peril]</Source><Target displayName="Peril" systemLookupName="PerilCache" targetField="PerilID" targetTable="Reinsurance"/></Mapping><Mapping mapType="FixedPickList" order="1"><Source sourceId="7">[Coverage]</Source><Target displayName="Coverage" systemLookupName="CoverageCache" targetField="CoverageID" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[Attachment]</Source><Target displayName="Attachment Point" targetField="AttachmentPoint" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[LayerAmount]</Source><Target displayName="Layer Amount" targetField="LayerAmount" targetTable="Reinsurance"/></Mapping><Mapping mapType="NormalMap" order="1"><Source sourceId="7">[CededPct]</Source><Target displayName="Ceded Percent" targetField="CededPct" targetTable="Reinsurance"/></Mapping><Mapping mapType="AutoLookup" order="1"><Source sourceId="7">[Reinsurer]</Source><Target displayName="Reinsurer" targetField="ReinsurerID" targetTable="Reinsurance"/></Mapping></Mappings><SampleData><SampleDataBySource delimiter="|" sourceId="1"><SampleHeaderRows><SampleHeaderRow>AccNumber|AccName|Insured|Producer|Branch|AccUserData1|AccUserData2|AccUserData3|AccUserData4</SampleHeaderRow></SampleHeaderRows><SampleDataRows><SampleDataRow>64RecordALL|PP|GREGORY J GALEONE  DDS|||250|ZUS|WIND|ZUS</SampleDataRow><SampleDataRow>B_AP1|PP|Layer||||||</SampleDataRow><SampleDataRow>B_BL1|PP|Layer||||||</SampleDataRow><SampleDataRow>B_FR1|PP|Layer||||||</SampleDataRow><SampleDataRow>B_MA2a|PP|Layer||||||</SampleDataRow></SampleDataRows></SampleDataBySource><SampleDataBySource delimiter="|" sourceId="2"><SampleHeaderRows><SampleHeaderRow>AccNumber|PolNumber|PolName|PolStatus|LineOfBusiness|InceptionDate|ExpirationDate|PolCurrency|PolUnderCover|PolProrata|PolPremium|PolUserData1|PolUserData2|PolUserData3</SampleHeaderRow></SampleHeaderRows><SampleDataRows><SampleDataRow>B_AP1|LB2|Unknown|Pending|Unknown|20080101|20081231|USD|0|100|10|||</SampleDataRow><SampleDataRow>B_BL1|LB1|Unknown|Pending|Unknown|20080101|20081231|USD|0|100|10|||</SampleDataRow><SampleDataRow>B_FR1|LB3|Unknown|Pending|Unknown|20080101|20081231|USD|0|100|10|||</SampleDataRow><SampleDataRow>B_MA2a|LB6|Unknown|Pending|Unknown|20080101|20081231|USD|0|100|10|||</SampleDataRow><SampleDataRow>B_MI2a|LB5|Unknown|Pending|Unknown|20080101|20081231|USD|0|100|10|||</SampleDataRow></SampleDataRows></SampleDataBySource><SampleDataBySource delimiter="|" sourceId="3"><SampleHeaderRows><SampleHeaderRow>AccNumber|PolNumber|PolPeril|Coverage|PolLimit|PolDed|PolMinDed|PolMaxDed|PolCondType|PolTemplate|PolCondName|PolCondPriority</SampleHeaderRow></SampleHeaderRows><SampleDataRows><SampleDataRow>B_AP1|LB2|ALLP|ALLCOV|150000000|10000000|0|0|Standard|||0</SampleDataRow><SampleDataRow>B_BL1|LB1|ALLP|ALLCOV|150000000|10000000|0|0|Standard|||0</SampleDataRow><SampleDataRow>B_FR1|LB3|ALLP|ALLCOV|150000000|10000000|0|0|Step|Franchise||0</SampleDataRow><SampleDataRow>B_MA2a|LB6|ALLP|ALLCOV|150000000|0|0|10000000|Standard|||0</SampleDataRow><SampleDataRow>B_MI2a|LB5|ALLP|ALLCOV|150000000|10000000|0|0|Standard|||0</SampleDataRow></SampleDataRows></SampleDataBySource><SampleDataBySource delimiter="|" sourceId="4"><SampleHeaderRows><SampleHeaderRow>AccNumber|SiteNumber|SiteName|StructureNumber|StructureName|Country|StreetAddress|Postcode|City|AdminLevel2|AdminLevel1|Cresta|SubCresta|Latitude|Longitude|UserGeoData1|UserGeoData3|StructureCode|OccupancyCode|YearBuilt|NumBuildings|NumStories|Currency|StrUserData1|StrUserData2|StrUserData3|StrUserData4|PolCondName1|PolCondName2|PolCondName3|PolCondName4|PolCondName5</SampleHeaderRow></SampleHeaderRows><SampleDataRows><SampleDataRow>64RecordALL|64Record|64RecordLocID|64Record|64RecordLocID|US|124 W MAPLE AVE|19047|LANGHORNE|Bucks|PA|||40.175907000000002|-74.921126999999998|NONE|C=USER|AIR-CEDE_111|AIR-CEDE_316|1930|1|2|USD|||||||||</SampleDataRow><SampleDataRow>B_AP1|Loc_NO|FL|Loc_NO|FL|US||33609|TAMPA|Hillsborough|FL|||27.944845999999998|-82.525747999999993|NONE|C=USER|AIR-CEDE_100|AIR-CEDE_319||1||USD|||||||||</SampleDataRow><SampleDataRow>B_BL1|Loc_NO|FL|Loc_NO|FL|US||33609|TAMPA|Hillsborough|FL|||27.944845999999998|-82.525747999999993|NONE|C=USER|AIR-CEDE_100|AIR-CEDE_319||1||USD|||||||||</SampleDataRow><SampleDataRow>B_FR1|Loc_NO|FL|Loc_NO|FL|US||33609|TAMPA|Hillsborough|FL|||27.944845999999998|-82.525747999999993|NONE|C=USER|AIR-CEDE_100|AIR-CEDE_319||1||USD|||||||||</SampleDataRow><SampleDataRow>B_MA2a|Loc_NO|FL|Loc_NO|FL|US||33609|TAMPA|Hillsborough|FL|||27.944845999999998|-82.525747999999993|NONE|C=USER|AIR-CEDE_100|AIR-CEDE_319||1||USD|||||||||</SampleDataRow></SampleDataRows></SampleDataBySource><SampleDataBySource delimiter="|" sourceId="5"><SampleHeaderRows><SampleHeaderRow>AccNumber|SiteNumber|StructureNumber|Peril|CovAVal|CovBVal|CovCVal|CovDVal</SampleHeaderRow></SampleHeaderRows><SampleDataRows><SampleDataRow>64RecordALL|64Record|64Record|ALLP|0|0|119500|0</SampleDataRow><SampleDataRow>B_AP1|Loc_NO|Loc_NO|ALLP|40000000000|40000000000|40000000000|40000000000</SampleDataRow><SampleDataRow>B_BL1|Loc_NO|Loc_NO|ALLP|40000000000|40000000000|40000000000|40000000000</SampleDataRow><SampleDataRow>B_FR1|Loc_NO|Loc_NO|ALLP|40000000000|40000000000|40000000000|40000000000</SampleDataRow><SampleDataRow>B_MA2a|Loc_NO|Loc_NO|ALLP|40000000000|40000000000|40000000000|40000000000</SampleDataRow></SampleDataRows></SampleDataBySource><SampleDataBySource delimiter="|" sourceId="6"><SampleHeaderRows><SampleHeaderRow>AccNumber|SiteNumber|StructureNumber|LocPeril|Coverage|LocDeduct|LocLimit|LocCondType|LocTemplate|LocCondPriority</SampleHeaderRow></SampleHeaderRows><SampleDataRows><SampleDataRow>64RecordALL|64Record|64Record|ALLP|CovC|0|119500|Standard||3</SampleDataRow><SampleDataRow>64RecordALL|64Record|64Record|ALLP|AllCov|250|0|Standard||1</SampleDataRow><SampleDataRow>B_AP1|Loc_NO|Loc_NO|ALLP|AllCov|0|4000000000|Standard||1</SampleDataRow><SampleDataRow>B_BL1|Loc_NO|Loc_NO|ALLP|AllCov|0|4000000000|Standard||1</SampleDataRow><SampleDataRow>B_FR1|Loc_NO|Loc_NO|ALLP|AllCov|0|4000000000|Standard||1</SampleDataRow></SampleDataRows></SampleDataBySource><SampleDataBySource delimiter="|" sourceId="7"><SampleHeaderRows><SampleHeaderRow>AccNumber|PolNumber|SiteNumber|ReinsType|AppliesTo|LayerNumber|Currency|Peril|Coverage|LayerAmount|Attachment|CededPct|Reinsurer|TreatyName|FacCertificate</SampleHeaderRow></SampleHeaderRows><SampleDataRows><SampleDataRow>LayerRE_NFG|1||F|P|1|USD|ALLP|AllCov|500000|100000|100|||FACCERT1</SampleDataRow><SampleDataRow>LayerRE_NFG|2||F|P|1|USD|ALLP|AllCov|500000|100000|100|||FACCERT2</SampleDataRow><SampleDataRow>LayerRE_PFCA|1||F|P|1|USD|ALLP|AllCov|0|0|31.220730565095199|||FACCERT13</SampleDataRow><SampleDataRow>LayerRE_PFCA|2||F|P|1|USD|ALLP|AllCov|0|0|3.12E-06|||FACCERT14</SampleDataRow><SampleDataRow>LayerRE_PFCP|1||F|P|1|USD|ALLP|AllCov|0|0|20|||FACCERT7</SampleDataRow></SampleDataRows></SampleDataBySource><SampleDataBySource delimiter="|" sourceId="8"><SampleHeaderRows><SampleHeaderRow>AccNumber|SiteNumber|StructureNumber|EFeatureCode|EFeatureValue|WFeatureCode|WFeatureValue</SampleHeaderRow></SampleHeaderRows></SampleDataBySource></SampleData></ImportMappingTemplate>');	

		--0010857: RQE 16 DB Migration: Need a Standard Visualization Template for Qlik Reports
		if  exists(select 1 from templateInfo where templateName='Standard Visualization - Worldwide Template') 
			delete from TemplateInfo where TemplateName='Standard Visualization - Worldwide Template';
		
		INSERT INTO [templateinfo] ([TemplateName],[TemplateType],[UserLevel],[IsLocked],[IsActive],[Category],[ReferenceCount],[TemplateVersion],[CreateDate],[ModifyDate],[CreatedBy],[ModifiedBy],[TemplateXml]) VALUES 
		('Standard Visualization - Worldwide Template',2,'S','Y','Y','X',0,'2015.001','20150413070000','20150413070000',1,1,'<?xml version="1.0"?><AnalysisTemplate><ReportSelection><ReportSelectionByNodeType applicableNodeType="Accumulation Portfolio"><SelectedReports><SelectedReport engineCallID="1000" reportMappingKey="10001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10005" templateReportName="by Country" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10007" templateReportName="by Portfolio" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10017" templateReportName="Reinsurance/Retrocession by Reinsurer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10019" templateReportName="Reinsurance/Retrocession by Treaty" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10021" templateReportName="Reinsurance/Retrocession by Layer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10023" templateReportName="Reinstatements by Reinsurer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10025" templateReportName="Reinstatements by Treaty" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10027" templateReportName="Reinstatements by Layer" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Primary Portfolio"><SelectedReports><SelectedReport engineCallID="2000" reportMappingKey="11001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2000" reportMappingKey="11005" templateReportName="by Country" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2001" reportMappingKey="11008" templateReportName="by Region" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2002" reportMappingKey="11011" templateReportName="by Sub-Region" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2004" reportMappingKey="11016" templateReportName="by Postcode" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2000" reportMappingKey="11045" templateReportName="U.S. Landfall Series" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Primary Account"></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Primary Site"><SelectedReports><SelectedReport engineCallID="9000" reportMappingKey="13001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="9000" reportMappingKey="13003" templateReportName="by Coverage" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="9000" reportMappingKey="13005" templateReportName="by Structure" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Reinsurance Portfolio"><SelectedReports><SelectedReport engineCallID="23000" reportMappingKey="16001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16005" templateReportName="by Country" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16012" templateReportName="by Division" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16014" templateReportName="by Producer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16016" templateReportName="by Program" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16020" templateReportName="by Treaty Type" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16022" templateReportName="U.S. Landfall Series" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Reinsurance Program"><SelectedReports><SelectedReport engineCallID="27000" reportMappingKey="17001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="27000" reportMappingKey="17006" templateReportName="by Layer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="27000" reportMappingKey="17010" templateReportName="by Treaty Type" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Reinsurance Treaty"><SelectedReports><SelectedReport engineCallID="30001" reportMappingKey="18001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="30001" reportMappingKey="18004" templateReportName="by Region" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="30001" reportMappingKey="18009" templateReportName="by Layer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="30001" reportMappingKey="18012" templateReportName="by Reinstatement" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType></ReportSelection><MetricSelection><Summary><ReturnPeriod>50</ReturnPeriod><ReturnPeriod>100</ReturnPeriod><ReturnPeriod>250</ReturnPeriod><ReturnPeriod>500</ReturnPeriod></Summary><ReturnPeriods><ReturnPeriod>2</ReturnPeriod><ReturnPeriod>3</ReturnPeriod><ReturnPeriod>5</ReturnPeriod><ReturnPeriod>7</ReturnPeriod><ReturnPeriod>10</ReturnPeriod><ReturnPeriod>11</ReturnPeriod><ReturnPeriod>13</ReturnPeriod><ReturnPeriod>14</ReturnPeriod><ReturnPeriod>17</ReturnPeriod><ReturnPeriod>20</ReturnPeriod><ReturnPeriod>25</ReturnPeriod><ReturnPeriod>33</ReturnPeriod><ReturnPeriod>50</ReturnPeriod><ReturnPeriod>100</ReturnPeriod><ReturnPeriod>111</ReturnPeriod><ReturnPeriod>125</ReturnPeriod><ReturnPeriod>143</ReturnPeriod><ReturnPeriod>167</ReturnPeriod><ReturnPeriod>200</ReturnPeriod><ReturnPeriod>250</ReturnPeriod><ReturnPeriod>333</ReturnPeriod><ReturnPeriod>500</ReturnPeriod><ReturnPeriod>1000</ReturnPeriod></ReturnPeriods><ELTMetrics><ELTMetric MetricName="ELTMetric-1" MetricID="1" MetricValue="D"></ELTMetric><ELTMetric MetricName="ELTMetric-2" MetricID="2" MetricValue="G"></ELTMetric><ELTMetric MetricName="ELTMetric-11" MetricID="11" MetricValue="H"></ELTMetric></ELTMetrics><YLTMetrics><YLTMetric MetricName="YLTMetric-1" MetricID="1" MetricValue="D"></YLTMetric><YLTMetric MetricName="YLTMetric-2" MetricID="2" MetricValue="G"></YLTMetric></YLTMetrics></MetricSelection><EventSelection><EventType>Stochastic</EventType><EventType>Historical and hypothetical</EventType></EventSelection><AnalysisOptions><DemandSurge>Off</DemandSurge><Frequency>Long Term</Frequency></AnalysisOptions></AnalysisTemplate>');	
		
		if exists(select 1 from templateInfo where templateName='Standard Visualization - U.S. Earthquake and Hurricane Template') 
			delete from TemplateInfo where TemplateName='Standard Visualization - U.S. Earthquake and Hurricane Template';
		
		INSERT INTO [templateinfo] ([TemplateName],[TemplateType],[UserLevel],[IsLocked],[IsActive],[Category],[ReferenceCount],[TemplateVersion],[CreateDate],[ModifyDate],[CreatedBy],[ModifiedBy],[TemplateXml]) VALUES 
			('Standard Visualization - U.S. Earthquake and Hurricane Template',2,'S','Y','Y','X',0,'2015.001','20150413070000','20150413070000',1,1,'<?xml version="1.0"?><AnalysisTemplate><ReportSelection><ReportSelectionByNodeType applicableNodeType="Accumulation Portfolio"><SelectedReports><SelectedReport engineCallID="1000" reportMappingKey="10001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10005" templateReportName="by Country" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10007" templateReportName="by Portfolio" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10017" templateReportName="Reinsurance/Retrocession by Reinsurer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10019" templateReportName="Reinsurance/Retrocession by Treaty" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10021" templateReportName="Reinsurance/Retrocession by Layer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10023" templateReportName="Reinstatements by Reinsurer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10025" templateReportName="Reinstatements by Treaty" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="1000" reportMappingKey="10027" templateReportName="Reinstatements by Layer" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Primary Portfolio"><SelectedReports><SelectedReport engineCallID="2000" reportMappingKey="11001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2200" reportMappingKey="11003" templateReportName="Total" reportType="6" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2000" reportMappingKey="11005" templateReportName="by Country" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2001" reportMappingKey="11008" templateReportName="by Region" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2002" reportMappingKey="11011" templateReportName="by Sub-Region" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2004" reportMappingKey="11016" templateReportName="by Postcode" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2202" reportMappingKey="11050" templateReportName="by Line of Business by Region" reportType="6" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="2000" reportMappingKey="11045" templateReportName="U.S. Landfall Series" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Primary Account"></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Primary Site"><SelectedReports><SelectedReport engineCallID="9000" reportMappingKey="13001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="9000" reportMappingKey="13003" templateReportName="by Coverage" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="9000" reportMappingKey="13005" templateReportName="by Structure" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Reinsurance Portfolio"><SelectedReports><SelectedReport engineCallID="23000" reportMappingKey="16001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16005" templateReportName="by Country" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16012" templateReportName="by Division" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16014" templateReportName="by Producer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16016" templateReportName="by Program" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16020" templateReportName="by Treaty Type" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="23000" reportMappingKey="16022" templateReportName="U.S. Landfall Series" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Reinsurance Program"><SelectedReports><SelectedReport engineCallID="27000" reportMappingKey="17001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="27000" reportMappingKey="17006" templateReportName="by Layer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="27000" reportMappingKey="17010" templateReportName="by Treaty Type" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType><ReportSelectionByNodeType applicableNodeType="Reinsurance Treaty"><SelectedReports><SelectedReport engineCallID="30001" reportMappingKey="18001" templateReportName="Total" reportType="4" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="30001" reportMappingKey="18004" templateReportName="by Region" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="30001" reportMappingKey="18009" templateReportName="by Layer" reportType="3" nonTabReport="N"></SelectedReport><SelectedReport engineCallID="30001" reportMappingKey="18012" templateReportName="by Reinstatement" reportType="3" nonTabReport="N"></SelectedReport></SelectedReports></ReportSelectionByNodeType></ReportSelection><MetricSelection><Summary><ReturnPeriod>50</ReturnPeriod><ReturnPeriod>100</ReturnPeriod><ReturnPeriod>250</ReturnPeriod><ReturnPeriod>500</ReturnPeriod></Summary><ReturnPeriods><ReturnPeriod>2</ReturnPeriod><ReturnPeriod>3</ReturnPeriod><ReturnPeriod>5</ReturnPeriod><ReturnPeriod>7</ReturnPeriod><ReturnPeriod>10</ReturnPeriod><ReturnPeriod>11</ReturnPeriod><ReturnPeriod>13</ReturnPeriod><ReturnPeriod>14</ReturnPeriod><ReturnPeriod>17</ReturnPeriod><ReturnPeriod>20</ReturnPeriod><ReturnPeriod>25</ReturnPeriod><ReturnPeriod>33</ReturnPeriod><ReturnPeriod>50</ReturnPeriod><ReturnPeriod>100</ReturnPeriod><ReturnPeriod>111</ReturnPeriod><ReturnPeriod>125</ReturnPeriod><ReturnPeriod>143</ReturnPeriod><ReturnPeriod>167</ReturnPeriod><ReturnPeriod>200</ReturnPeriod><ReturnPeriod>250</ReturnPeriod><ReturnPeriod>333</ReturnPeriod><ReturnPeriod>500</ReturnPeriod><ReturnPeriod>1000</ReturnPeriod></ReturnPeriods><ELTMetrics><ELTMetric MetricName="ELTMetric-1" MetricID="1" MetricValue="D"></ELTMetric><ELTMetric MetricName="ELTMetric-2" MetricID="2" MetricValue="G"></ELTMetric><ELTMetric MetricName="ELTMetric-11" MetricID="11" MetricValue="H"></ELTMetric></ELTMetrics><YLTMetrics><YLTMetric MetricName="YLTMetric-1" MetricID="1" MetricValue="D"></YLTMetric><YLTMetric MetricName="YLTMetric-2" MetricID="2" MetricValue="G"></YLTMetric></YLTMetrics></MetricSelection><EventSelection><EventType>Stochastic</EventType><EventType>Historical and hypothetical</EventType></EventSelection><AnalysisOptions><DemandSurge>Off</DemandSurge><Frequency>Long Term</Frequency></AnalysisOptions></AnalysisTemplate>');	
		

		--Update the Data Extraction Templates
		Update TemplateInfo set TemplateXml = '<?xml version="1.0"?><DataExtractionTemplate><Filters><FilterInfo><FilterLabel>@portname</FilterLabel><Query><![CDATA[     select replace(replace(portname, char(13),'' ''),char(10),'' '') from portinfo    ]]></Query><FilterVariable>@portname</FilterVariable></FilterInfo><FilterInfo><FilterLabel>@countryList</FilterLabel><Query><![CDATA[    select distinct case when country = ''CB'' then ''CB-'' + rtrim(STATECODE) else rtrim(COUNTRY) end   from loc inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where loc.ISVALID = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portName''   ]]></Query><FilterVariable>@countryList</FilterVariable></FilterInfo></Filters><ExtractionQueries><ExtractionQueryInfo><TableName>RMSVer</TableName><ExtractionQuery><![CDATA[select * from RMSVer]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>locconditions</TableName><ExtractionQuery><![CDATA[select * from locconditions]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>LOBDET</TableName><ExtractionQuery><![CDATA[select * from LOBDET]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>loc</TableName><ExtractionQuery><![CDATA[select loc.* from loc inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' @countryList]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>loccvg</TableName><ExtractionQuery><![CDATA[select loccvg.* from loccvg inner join loc on loc.LOCID = loccvg.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' and Peril in ( @perilList )]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>eqdet</TableName><ExtractionQuery><![CDATA[select eqdet.* from eqdet inner join loc on loc.LOCID = eqdet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>hudet</TableName><ExtractionQuery><![CDATA[select hudet.* from hudet inner join loc on loc.LOCID = hudet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>todet</TableName><ExtractionQuery><![CDATA[select todet.* from todet inner join loc on loc.LOCID = todet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>policyconditions</TableName><ExtractionQuery><![CDATA[select distinct policyconditions.* from policyconditions inner join policy on policy.POLICYID = policyconditions.POLICYID and PolicyType in ( @perilList ) inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>polcvg</TableName><ExtractionQuery><![CDATA[select distinct polcvg.* from polcvg inner join policy on policy.POLICYID = polcvg.POLICYID and PolicyType in ( @perilList ) inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Policy</TableName><ExtractionQuery><![CDATA[select distinct Policy.* from Policy inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' and PolicyType in ( @perilList )]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>accgrp</TableName><ExtractionQuery><![CDATA[select distinct accgrp.* from accgrp inner join portacct on accgrp.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>TrtyDesc</TableName><ExtractionQuery><![CDATA[select * from trtydesc]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>ReinsInf</TableName><ExtractionQuery><![CDATA[select REINSINFID, EXPOSUREID, EXPOSRTYPE, PRIORITY, LAYERNUM, PCNTREINS, LAYERAMT, LAYERCUR, EXCESSAMT, EXCESSCUR, REINSNAME, REINSTYPE, reinsinf.ISVALID, FACDETID, TRTYINFOID, MAOLAMT from reinsinf inner join policy on policy.POLICYID = reinsinf.EXPOSUREID and EXPOSRTYPE = ''POL'' inner join portacct on portacct.ACCGRPID = policy.ACCGRPID inner join portinfo on portinfo.PORTINFOID = portacct.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' union select REINSINFID, EXPOSUREID, EXPOSRTYPE, PRIORITY, LAYERNUM, PCNTREINS, LAYERAMT, LAYERCUR, EXCESSAMT, EXCESSCUR, REINSNAME, REINSTYPE, reinsinf.ISVALID, FACDETID, TRTYINFOID, MAOLAMT from reinsinf inner join loc on loc.LOCID = reinsinf.EXPOSUREID and EXPOSRTYPE = ''LOC'' @countryList inner join portacct on portacct.ACCGRPID = loc.ACCGRPID inner join portinfo on portinfo.PORTINFOID = portacct.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Cedants</TableName><ExtractionQuery><![CDATA[select * from cedants]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Prdcers</TableName><ExtractionQuery><![CDATA[select * from prdcers]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>fldet</TableName><ExtractionQuery><![CDATA[select fldet.* from fldet inner join loc on loc.LOCID = fldet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where fldet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>CreateIndex</TableName><ExtractionQuery><![CDATA[CREATE NONCLUSTERED INDEX [loccvg_I1] ON [Schema_Name].[loccvg]( [PERIL], [LOSSTYPE], [VALUEAMT], [PCTSPRNKLR]) INCLUDE ([LOCID], [EQSLGRADE]); CREATE NONCLUSTERED INDEX [loccvg_I2] ON [Schema_Name].[loccvg] ([PERIL], [VALUEAMT], [LABELID]) INCLUDE ([LOCCVGID], [LOCID], [COVGMOD]);CREATE NONCLUSTERED INDEX [loc_I1] ON [Schema_Name].[LOC] ([LOCID]);]]></ExtractionQuery></ExtractionQueryInfo></ExtractionQueries><ConversionQueries><ConversionQueryInfo><ViewName>Account View</ViewName><Headers>AccNumber, AccName, Insured, Producer, Branch, AccUserData1, AccUserData2, AccUserData3, AccUserData4</Headers><Categories>Accounts</Categories><ConversionQuery><![CDATA[select ACCGRPNUM+'' - ''+cast(ACCGRPID as varchar) AccNumber, ACCGRPNAME AccName, case CEDANTID when '''' then '''' else (select NAME from cedants where cedants.ID=CEDANTID) end Insured, case PRDCERID when '''' then '''' else (select NAME from prdcers where prdcers.ID=PRDCERID) end Producer, BRANCHNAME Branch, USERID1 AccUserData1, USERID2 AccUserData2, USERID3 AccUserData3, USERID4 AccUserData4 into #Account from accgrp select * into @finalTableName from #Account order by 1; drop table #Account;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy View</ViewName><Headers>AccNumber, PolNumber, PolName, PolStatus, LineOfBusiness, InceptionDate, ExpirationDate, PolCurrency, PolUnderCover, PolProrata, PolPremium, PolUserData1, PolUserData2, PolUserData3</Headers><Categories>Policies</Categories><ConversionQuery><![CDATA[select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, POLICYID PolNumber, POLICYNUM + ''-'' + rtrim(cast(POLICYTYPE as CHAR)) PolName, Case POLICYSTAT when ''BOOK'' then ''Bound'' when ''CNCL'' then ''Cancelled'' when ''EXPD'' then ''Expired'' when ''PEND'' then ''Pending'' when ''QUOT'' then ''Quoted'' else '''' end PolStatus, case LOBDETID when 0 then '''' else (select LOBNAME from LOBDET where LOBDET.LOBDETID=policy.LOBDETID) end LineOfBusiness, CONVERT(CHAR(8), INCEPTDATE, 112) InceptionDate, CONVERT(CHAR(8), EXPIREDATE, 112) ExpirationDate, Case when UNDCOVAMT>0 then UNDCOVCUR when PARTOF>1 then PARTOFCUR when BLANLIMAMT>0 then BLANLIMCUR when BLANDEDAMT>0 then BLANDEDCUR when MINDEDAMT>0 then MINDEDCUR when MAXDEDAMT>0 then MAXDEDCUR else PARTOFCUR end PolCurrency, UNDCOVAMT PolUnderCover, Case when BLANLIMAMT>1 then Case when PARTOF>1 then Case when BLANLIMAMT>PARTOF then 100 else BLANLIMAMT/PARTOF*100 end when PARTOF>0 then PARTOF*100 else 100 end when BLANLIMAMT>0 then BLANLIMAMT*100 else Case when PARTOF>1 then 100 when PARTOF>0 then PARTOF*100 else 100 end end PolProrata, BLANPREAMT PolPremium, '''' PolUserData1, '''' PolUserData2, '''' PolUserData3 into #Policy from policy inner join accgrp on accgrp.ACCGRPID=policy.ACCGRPID where POLICYTYPE<5 select * into @finalTableName from #Policy order by 1, 2; drop table #Policy;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy Condition View</ViewName><Headers>AccNumber, PolNumber, PolPeril, PolCoverage, PolLimit, PolDed, PolMinDed, PolMaxDed, PolCondName, PolCondPriority</Headers><Categories>PolicyConditions</Categories><ConversionQuery><![CDATA[select POLICYID, ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, POLICYID PolNumber, case POLICYTYPE when 1 then ''EXXX'' when 2 then ''WIXX'' when 3 then ''STTH'' when 4 then ''FLXX'' end PolPeril , BLANLIMAMT, BLANDEDAMT, PARTOF, MINDEDAMT, MAXDEDAMT, case when POLICYID in (select POLICYID from policyconditions where CONDITIONTYPE=1) then (select max(cast(policyid as VARCHAR) + ''-'' + CONDITIONNAME) from policyconditions pc where pc.POLICYID=policy.POLICYID) else '''' end RestrictionName into #PolData from policy inner join accgrp on accgrp.ACCGRPID=policy.ACCGRPID where POLICYTYPE in ( @perilList ) ;with pcp (ID, CondName, [Priority]) as ( select conditionID, cast(policyid as VARCHAR) + ''-'' + conditionname, 3 from policyconditions where ParentconditionID=0 and conditiontype=2 union all select pc.conditionID, cast(pc.policyid as VARCHAR) + ''-'' + pc.conditionname, pcp.[Priority]+1 from policyconditions pc inner join pcp on pc.ParentconditionID=pcp.ID ) select CONDITIONID, POLICYID, LIMIT, DEDUCTIBLE, CondName, Priority into #PolCond from policyconditions inner join pcp on policyconditions.CONDITIONID=pcp.ID select AccNumber, PolNumber, PolPeril , Case LOSSTYPE when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''AllProp'' end PolCoverage, LIMITAMT PolLimit, DEDUCTAMT PolDed, ''0'' PolMinDed, ''0'' PolMaxDed, RestrictionName PolCondName, Case LOSSTYPE when 4 then 1 else 2 end PolCondPriority, 0 ConditionID into #PolicyCondition from polcvg inner join #PolData on polcvg.POLICYID=#PolData.POLICYID where ( limitamt>0 or deductamt>0 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT=0 or ( PARTOF=0 and BLANLIMAMT>1 ) ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT/PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>1 and PARTOF<=1 and PARTOF>0 ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>0 and ( PARTOF>1 or BLANLIMAMT<=1 ) ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT=0 or ( PARTOF=0 and BLANLIMAMT>1 ) ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT/PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>1 and PARTOF<=1 and PARTOF>0 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>0 and ( PARTOF>1 or BLANLIMAMT<=1 ) ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', LIMIT, DEDUCTIBLE, ''0'', ''0'', CondName, Priority, ConditionID from #PolData inner join #PolCond on #PolData.POLICYID=#PolCond.POLICYID union all select AccNumber, PolNumber, PolPeril, ''AllCov'', ''1'', ''0'', ''0'', ''0'', '''', 0, 0 from #PolData where ( BLANLIMAMT=0 and BLANDEDAMT=0 and MINDEDAMT=0 and MAXDEDAMT=0 ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) and POLICYID not in ( select policyid from polcvg ) select AccNumber, PolNumber, PolPeril , PolCoverage, case PolLimit when 0 then 1 else PolLimit end PolLimit, PolDed, PolMinDed, PolMaxDed, PolCondName, PolCondPriority into @finalTableName from #PolicyCondition where PolPeril <> ''NA'' order by 1, 2; drop table #PolicyCondition; drop table #PolCond; drop table #PolData;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location View</ViewName><Headers>AccNumber, SiteNumber, SiteName, StructureNumber, StructureName, Country, StreetAddress, Postcode, City, AdminLevel2, AdminLevel1, Cresta, SubCresta, UserGeoData3, Latitude, Longitude, StructureCode, OccupancyCode, YearBuilt, NumBuildings, NumStories, PctSprinkler, PctSprinklerHigh, PctSprinklerMed, PctSprinklerLow, Currency, StrUserData1, StrUserData2, StrUserData3, UserGeoData1, PolCondName1, PolCondName2, PolCondName3, PolCondName4, PolCondName5, PolCondName6, PolCondName7, PolCondName8, PolCondName9, PolCondName10, PolCondName11, PolCondName12, PolCondName13, PolCondName14, PolCondName15, PolCondName16, PolCondName17, PolCondName18, PolCondName19, PolCondName20, PolCondName21, PolCondName22, PolCondName23, PolCondName24, PolCondName25, PolCondName26, PolCondName27, PolCondName28, PolCondName29, PolCondName30</Headers><Categories>Sites, Structures</Categories><ConversionQuery><![CDATA[select LocID, MAX(cond1) Cond1, MAX(cond2) Cond2, MAX(cond3) Cond3, MAX(cond4) Cond4, MAX(cond5) Cond5, MAX(cond6) Cond6, MAX(cond7) Cond7, MAX(cond8) Cond8, MAX(cond9) Cond9, MAX(cond10) Cond10, MAX(cond11) Cond11, MAX(cond12) Cond12, MAX(cond13) Cond13, MAX(cond14) Cond14, MAX(cond15) Cond15, MAX(cond16) Cond16, MAX(cond17) Cond17, MAX(cond18) Cond18, MAX(cond19) Cond19, MAX(cond20) Cond20, MAX(cond21) Cond21, MAX(cond22) Cond22, MAX(cond23) Cond23, MAX(cond24) Cond24, MAX(cond25) Cond25, MAX(cond26) Cond26, MAX(cond27) Cond27, MAX(cond28) Cond28, MAX(cond29) Cond29, MAX(cond30) Cond30 into #LocCondList from ( select LocID, coalesce([1], '''') Cond1, coalesce([2], '''') Cond2, coalesce([3], '''') Cond3, coalesce([4], '''') Cond4, coalesce([5], '''') Cond5, coalesce([6], '''') Cond6, coalesce([7], '''') Cond7, coalesce([8], '''') Cond8, coalesce([9], '''') Cond9, coalesce([10], '''') Cond10, coalesce([11], '''') Cond11, coalesce([12], '''') Cond12, coalesce([13], '''') Cond13, coalesce([14], '''') Cond14, coalesce([15], '''') Cond15, coalesce([16], '''') Cond16, coalesce([17], '''') Cond17, coalesce([18], '''') Cond18, coalesce([19], '''') Cond19, coalesce([20], '''') Cond20, coalesce([21], '''') Cond21, coalesce([22], '''') Cond22, coalesce([23], '''') Cond23, coalesce([24], '''') Cond24, coalesce([25], '''') Cond25, coalesce([26], '''') Cond26, coalesce([27], '''') Cond27, coalesce([28], '''') Cond28, coalesce([29], '''') Cond29, coalesce([30], '''') Cond30 from ( select LocID, row_number() over (partition by locid order by locconditions.conditionid) Ord, cast(policyid as VARCHAR) + ''-'' + conditionname ConditionName from locconditions inner join policyconditions on locconditions.CONDITIONID=policyconditions.CONDITIONID where included>0 ) Data pivot (max(conditionname) for Ord in ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30]) ) Piv ) Z group by LOCID select LOCID, LocPct, [1] LowPct, [2] MedPct, [3] HighPct into #SprinklerData from ( select LOCID, LMH, max(LocPct) LocPct, sum(GradePct) GradePct from ( select LOCID, case EQSLGRADE when 0 then 2 when 1 then 1 when 2 then 2 else 3 end LMH, sum(PCTSPRNKLR*VALUEAMT) over (partition by LOCID)/sum(VALUEAMT) over (partition by LOCID) * 100. LocPct, PCTSPRNKLR*VALUEAMT/sum(PCTSPRNKLR*VALUEAMT) over (partition by LOCID) * 100. GradePct from loccvg where PERIL=1 and LOSSTYPE=2 and PCTSPRNKLR>0 and VALUEAMT>0 ) Data group by LOCID, LMH) Grouped pivot (max(GradePct) for LMH in ([1], [2], [3])) Pivoted select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case PRIMARYBLDG when 1 then LOCNAME else (select LOCNAME from loc L where L.LOCID=loc.PRIMARYLOCID) end SiteName, loc.LOCID StructureNumber, LOCNAME StructureName, case COUNTRY when ''CB'' then STATECODE else COUNTRY end Country, STREETNAME StreetAddress, POSTALCODE Postcode, CITY City, COUNTY AdminLevel2, STATECODE AdminLevel1, CRESTA Cresta, SUBCRESTA SubCresta, ''A='' + rtrim(cast(ADDRMATCH as CHAR)) UserGeoData3, LATITUDE Latitude, LONGITUDE Longitude, BLDGSCHEME + rtrim(cast(BLDGCLASS as CHAR)) StructureCode, OCCSCHEME + rtrim(cast(OCCTYPE as CHAR)) OccupancyCode, YEAR(yearbuilt) YearBuilt, NUMBLDGS NumBuildings, NUMSTORIES NumStories, PCTSPRNKLR PctSprinkler, CURRENCY Currency, loc.USERID1 StrUserData1, loc.USERID2 StrUserData2, loc.USERTXT1 StrUserData3, USERGEO1 UserGeoData1 into #Location from loc inner join ( select locid, max(VALUECUR) CURRENCY, max(pctsprnklr) PCTSPRNKLR from loccvg group by locid union all select LOCID, ''USD'', 0 from loc where locid not in ( select locid from loccvg ) ) lc on loc.LOCID=lc.LOCID inner join accgrp on accgrp.ACCGRPID=Loc.ACCGRPID select AccNumber, SiteNumber, SiteName, StructureNumber, StructureName, Country, StreetAddress, Postcode, City, AdminLevel2, AdminLevel1, Cresta, SubCresta, UserGeoData3, Latitude, Longitude, StructureCode, OccupancyCode, YearBuilt, NumBuildings, NumStories, Case PctSprinkler when 0 then 0 else (select LocPct from #SprinklerData S where s.LOCID=StructureNumber) end PctSprinkler, Case PctSprinkler when 0 then 0 else coalesce((select HighPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerHigh, Case PctSprinkler when 0 then 0 else coalesce((select MedPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerMed, Case PctSprinkler when 0 then 0 else coalesce((select LowPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerLow, Currency, StrUserData1, StrUserData2, StrUserData3, UserGeoData1, coalesce(Cond1, '''') PolCondName1, coalesce(Cond2, '''') PolCondName2, coalesce(Cond3, '''') PolCondName3, coalesce(Cond4, '''') PolCondName4, coalesce(Cond5, '''') PolCondName5, coalesce(Cond6, '''') PolCondName6, coalesce(Cond7, '''') PolCondName7, coalesce(Cond8, '''') PolCondName8, coalesce(Cond9, '''') PolCondName9, coalesce(Cond10, '''') PolCondName10, coalesce(Cond11, '''') PolCondName11, coalesce(Cond12, '''') PolCondName12, coalesce(Cond13, '''') PolCondName13, coalesce(Cond14, '''') PolCondName14, coalesce(Cond15, '''') PolCondName15, coalesce(Cond16, '''') PolCondName16, coalesce(Cond17, '''') PolCondName17, coalesce(Cond18, '''') PolCondName18, coalesce(Cond19, '''') PolCondName19, coalesce(Cond20, '''') PolCondName20, coalesce(Cond21, '''') PolCondName21, coalesce(Cond22, '''') PolCondName22, coalesce(Cond23, '''') PolCondName23, coalesce(Cond24, '''') PolCondName24, coalesce(Cond25, '''') PolCondName25, coalesce(Cond26, '''') PolCondName26, coalesce(Cond27, '''') PolCondName27, coalesce(Cond28, '''') PolCondName28, coalesce(Cond29, '''') PolCondName29, coalesce(Cond30, '''') PolCondName30 into @finalTableName from #Location lc left outer join #LocCondList lcl on lc.StructureNumber=lcl.locid order by 1, 2; drop table #SprinklerData; drop table #LocCondList; drop table #Location;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location Coverage View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, LocPeril, LocCoverage, DamageFactor, LocValue</Headers><Categories>StructureCoverages</Categories><ConversionQuery><![CDATA[select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, Case PERIL when 1 then ''@perilMap1'' when 2 then ''@perilMap2'' when 3 then ''@perilMap3'' when 4 then ''@perilMap4'' end LocPeril , Case LABELID when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''Bldg'' when 5 then ''Cont'' when 6 then ''Time'' when 7 then ''Bldg'' when 8 then ''Cont'' when 9 then ''Time'' when 10 then ''Bldg'' when 11 then ''Cont'' when 12 then ''Time'' when 14 then ''Bldg'' when 15 then ''Cont'' when 16 then ''Time'' when 20 then ''Bldg'' when 21 then ''Cont'' when 22 then ''Time'' when 24 then ''CovA'' when 25 then ''CovB'' when 26 then ''CovC'' when 27 then ''CovD'' when 28 then ''CovA'' when 29 then ''CovB'' when 30 then ''CovC'' when 31 then ''CovD'' when 32 then ''CovA'' when 33 then ''CovB'' when 34 then ''CovC'' when 35 then ''CovD'' when 36 then ''CovA'' when 37 then ''CovB'' when 38 then ''CovC'' when 39 then ''CovD'' when 40 then ''CovA'' when 41 then ''CovB'' when 42 then ''CovC'' when 43 then ''CovD'' when 44 then ''CovA'' when 45 then ''CovB'' when 46 then ''CovC'' when 47 then ''CovD'' end LocCoverage, rank() over (partition by loccvg.locid, labelid order by loccvgid) Rank, Case COVGMOD when 1 then 1.5 when 2 then 1.25 when 3 then 1.0 when 4 then 0.5 else 1 end DamageFactor, VALUEAMT LocValue into #LocCoverage from loccvg inner join loc on loc.LOCID=loccvg.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where VALUEAMT <> 0 and PERIL in ( 1,2,3,4 ) and LABELID < 48 and loccvg.LOCID in ( select distinct LOCID from loc ) select AccNumber, SiteNumber, StructureNumber, LocPeril, case Rank when 1 then LocCoverage else LocCoverage + CAST(Rank as CHAR) end LocCoverage, DamageFactor, LocValue into @finalTableName from #LocCoverage where LocPeril <> ''NA'' order by 1, 2; drop table #LocCoverage;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Site Condition View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, LocPeril, LocCoverage, LocCondType, LocCondPriority, LocLimit, LocDed, IsSite</Headers><Categories>SiteConditions</Categories><ConversionQuery><![CDATA[select LOCID LocID, Case when LOCID in (select distinct PRIMARYLOCID from loc where PRIMARYBLDG=0) then 1 else 0 end IsSite into #SITELIST from loc select LOCCVGID, Case PERIL when 1 then ''EXXX'' when 2 then ''WIXX'' when 3 then ''STTH'' when 4 then ''FLXX'' end Peril, Case LABELID when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''Bldg'' when 5 then ''Cont'' when 6 then ''Time'' when 7 then ''Bldg'' when 8 then ''Cont'' when 9 then ''Time'' when 10 then ''Bldg'' when 11 then ''Cont'' when 12 then ''Time'' when 14 then ''Bldg'' when 15 then ''Cont'' when 16 then ''Time'' when 20 then ''Bldg'' when 21 then ''Cont'' when 22 then ''Time'' when 24 then ''CovA'' when 25 then ''CovB'' when 26 then ''CovC'' when 27 then ''CovD'' when 28 then ''CovA'' when 29 then ''CovB'' when 30 then ''CovC'' when 31 then ''CovD'' when 32 then ''CovA'' when 33 then ''CovB'' when 34 then ''CovC'' when 35 then ''CovD'' when 36 then ''CovA'' when 37 then ''CovB'' when 38 then ''CovC'' when 39 then ''CovD'' when 40 then ''CovA'' when 41 then ''CovB'' when 42 then ''CovC'' when 43 then ''CovD'' when 44 then ''CovA'' when 45 then ''CovB'' when 46 then ''CovC'' when 47 then ''CovD'' end Coverage, IsSite into #LPC from loccvg inner join #SITELIST on #SITELIST.LocID=loccvg.LOCID where PERIL in ( 1,2,3,4 ) and LABELID<48 and ( LIMITAMT>0 or DEDUCTAMT>0 or WAITINGPERIOD>0 ) and loccvg.LOCID in ( select distinct LOCID from loc ) select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, #LPC.Peril LocPeril, #LPC.Coverage LocCoverage, rank() over (partition by loccvg.locid, labelid order by loccvg.loccvgid) Rank, Case CNTLOSSTRG when 0 then ''Standard'' else case loccvg.Peril when 1 then ''CEA'' else ''Standard'' end end LocCondType, 2 LocCondPriority, LIMITAMT LocLimit, Case when WAITINGPERIOD=0 then DEDUCTAMT else -WAITINGPERIOD end LocDed, IsSite into #LocCondition from loccvg inner join #LPC on #LPC.Loccvgid=loccvg.LOCCVGID inner join loc on loc.LOCID=loccvg.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''EQXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from eqdet inner join loccvg on loccvg.LOCID=eqdet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=eqdet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''WXXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from hudet inner join loccvg on loccvg.LOCID=hudet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=hudet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''STTH'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from todet inner join loccvg on loccvg.LOCID=todet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=todet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''FLXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from fldet inner join loccvg on loccvg.LOCID=fldet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=fldet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''EQXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from eqdet inner join loc on loc.LOCID=eqdet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''WXXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from hudet inner join loc on loc.LOCID=hudet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''STTH'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from todet inner join loc on loc.LOCID=todet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''FLXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from fldet inner join loc on loc.LOCID=fldet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) select AccNumber, SiteNumber, StructureNumber, LocPeril, case Rank when 1 then LocCoverage else LocCoverage + CAST(Rank as CHAR) end LocCoverage, LocCondType, LocCondPriority, LocLimit, LocDed, IsSite into @finalTableName from #LocCondition where LocPeril <> ''NA'' order by 1, 2; drop table #LocCondition; drop table #LPC; drop table #SITELIST;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Reinsurance View</ViewName><Headers>AccNumber, PolNumber, SiteNumber, ReinsType, AppliesTo, LayerNumber, Currency, Peril, Coverage, LayerAmount, Attachment, CededPct, Reinsurer, TreatyName, FacCertificate</Headers><Categories>Reinsurance</Categories><ConversionQuery><![CDATA[select case EXPOSRTYPE when ''LOC'' then (select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) from accgrp where accgrpid = (select ACCGRPID from loc where LOCID=EXPOSUREID)) else ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) from accgrp where accgrpid = ( select ACCGRPID from policy where policyid=EXPOSUREID ) ) end AccNumber, case EXPOSRTYPE when ''LOC'' then case REINSTYPE when ''F'' then coalesce(cast((select top 1 POLICYID from policy where policy.ACCGRPID=(select ACCGRPID from loc where LOCID=EXPOSUREID) order by UNDCOVAMT) as char),'''') else '''' end else cast(EXPOSUREID as char) end PolNumber, case EXPOSRTYPE when ''LOC'' then cast(EXPOSUREID as char) else '''' end SiteNumber, REINSTYPE ReinsType, case EXPOSRTYPE when ''LOC'' then ''S'' else ''P'' end AppliesTo, LAYERNUM LayerNumber, LAYERCUR Currency, ''ALLP'' Peril, ''AllCov'' Coverage, LAYERAMT LayerAmount, EXCESSAMT Attachment, PCNTREINS CededPct, REINSNAME Reinsurer, case REINSTYPE when ''T'' then case TRTYINFOID when 0 then ''Unspecified'' else coalesce((select TREATYNAME from trtydesc where trtydesc.TREATYID=reinsinf.TRTYINFOID),REINSNAME,''Unspecified'') end else '''' end TreatyName, case REINSTYPE when ''F'' then rtrim(cast(EXPOSUREID as char))+''-''+rtrim(cast(LAYERNUM as char))+''-''+rtrim(cast(REINSINFID as char)) else '''' end FacCertificate into #Reinsurance from reinsinf where REINSTYPE in ( ''F'',''T'' ) and EXPOSRTYPE in ( ''LOC'',''POL'' ) select * into @finalTableName from #Reinsurance where AccNumber is not null order by 1; drop table #Reinsurance;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Secondary Structure</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, EFeatureCode, EFeatureValue, WFeatureCode, WFeatureValue, </Headers><Categories>SecondaryStructures</Categories><ConversionQuery><![CDATA[with dataEQ (AccNumber, SiteNumber, StructureNumber, Country, CLADDING, CONQUAL, FRAMEBOLT, MECHELEC, ORNAMENT, OVERPROF, POUNDING, SHAPECONF, STORYPROF, URMPROV, WALLSBRACD) as ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, loc.COUNTRY, CLADDING, CONQUAL, FRAMEBOLT, MECHELEC, ORNAMENT, OVERPROF, POUNDING, SHAPECONF, STORYPROF, URMPROV, WALLSBRACD from eqdet inner join loc on loc.LOCID=eqdet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where COUNTRY in (''US'',''CA'') and eqdet.LOCID in (select distinct LOCID from loc) ) select AccNumber, SiteNumber, StructureNumber, ''E_PRE_CON'' EFeatureCode, case CLADDING when 1 then 2 when 2 then 1 when 3 then 1 else 0 end EFeatureValue into #SecondaryFeatureEQ from dataEQ where CLADDING>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_STR_CONDN'', case CONQUAL when 1 then 2 when 2 then 3 when 3 then 4 when 4 then 1 else 0 end from dataEQ where CONQUAL>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_FND_ANCHOR'', case FRAMEBOLT when 1 then 1 when 2 then 3 else 0 end from dataEQ where FRAMEBOLT>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_MECH_EQT'', case MECHELEC when 1 then 1 when 2 then 2 when 3 then 3 else 0 end from dataEQ where MECHELEC>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_HVY_AR_ELE'', case ORNAMENT when 1 then 1 when 2 then 2 when 3 then 2 else 0 end from dataEQ where ORNAMENT>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_VERT_SETBK'', case OVERPROF when 1 then 2 when 2 then 1 else 0 end from dataEQ where OVERPROF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_POUNDING'', case POUNDING when 1 then 4 when 2 then 1 else 0 end from dataEQ where POUNDING>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_BLDG_P_LAY'', case SHAPECONF when 1 then 1 when 2 then 3 else 0 end from dataEQ where SHAPECONF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_SOFT_STORY'', case STORYPROF when 1 then 3 when 2 then 1 else 0 end from dataEQ where STORYPROF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_URM_RETR'', case URMPROV when 1 then 2 when 2 then 1 else 0 end from dataEQ where URMPROV>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_CRIP_WALL'', case WALLSBRACD when 1 then 3 when 2 then 2 when 3 then 1 else 0 end from dataEQ where WALLSBRACD>0; with dataHU (AccNumber, SiteNumber, StructureNumber, Country, CLADSYS, FOUNDSYS,RESISTDOOR, ROOFANCH, ROOFGEOM, ROOFPARAPT, ROOFSYS) as ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, loc.COUNTRY, CLADSYS, FOUNDSYS, RESISTDOOR, ROOFANCH, ROOFGEOM, ROOFPARAPT, ROOFSYS from hudet inner join loc on loc.LOCID=hudet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where COUNTRY in (''US'',''CA'') and hudet.LOCID in (select distinct LOCID from loc) ) select AccNumber, SiteNumber, StructureNumber, ''W_WL_CLAD'' WFeatureCode, case CLADSYS when 1 then 1 when 2 then 3 when 3 then 6 when 4 then 4 when 5 then 5 when 6 then 2 when 7 then 5 when 8 then 1 else 0 end WFeatureValue into #SecondaryFeatureHU from dataHU where CLADSYS>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_FND_ANCH'', case FOUNDSYS when 1 then 5 when 2 then 4 when 3 then 1 when 4 then 1 else 0 end from dataHU where FOUNDSYS>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_DOOR_REIN'', case RESISTDOOR when 1 then 4 when 2 then 2 when 3 then 1 else 0 end from dataHU where RESISTDOOR>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF2WALL'', case ROOFANCH when 1 then 3 when 2 then 4 when 3 then 1 when 4 then 3 when 5 then 5 else 0 end from dataHU where ROOFANCH>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF_PROF'', case ROOFGEOM when 1 then 4 when 2 then 5 when 3 then 4 when 4 then 1 when 5 then 4 when 6 then 4 when 7 then 1 when 8 then 2 when 9 then 2 else 0 end from dataHU where ROOFGEOM>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_PARA'', case ROOFPARAPT when 1 then 2 else 0 end from dataHU where ROOFPARAPT>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF_MAT'', case ROOFSYS when 1 then 4 when 2 then 8 when 3 then 7 when 4 then 3 when 5 then 1 when 6 then 10 when 7 then 9 when 8 then 2 when 9 then 2 else 0 end from dataHU where ROOFSYS>0; select AccNumber, SiteNumber, StructureNumber, EFeatureCode, EFeatureValue, '''' WFeatureCode, '''' WFeatureValue into @finalTableName from #SecondaryFeatureEQ union all select AccNumber, SiteNumber, StructureNumber, '''', '''', WFeatureCode, WFeatureValue from #SecondaryFeatureHU order by 1, 2; drop table #SecondaryFeatureEQ; drop table #SecondaryFeatureHU;]]></ConversionQuery></ConversionQueryInfo></ConversionQueries></DataExtractionTemplate>' where TemplateName = 'Standard Database Extraction Template - Including IsValid=0';
		Update TemplateInfo set TemplateXml = '<?xml version="1.0"?><DataExtractionTemplate><Filters><FilterInfo><FilterLabel>@portname</FilterLabel><Query><![CDATA[     select replace(replace(portname, char(13),'' ''),char(10),'' '') from portinfo    ]]></Query><FilterVariable>@portname</FilterVariable></FilterInfo><FilterInfo><FilterLabel>@countryList</FilterLabel><Query><![CDATA[    select distinct case when country = ''CB'' then ''CB-'' + rtrim(STATECODE) else rtrim(COUNTRY) end   from loc inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where loc.ISVALID = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portName''   ]]></Query><FilterVariable>@countryList</FilterVariable></FilterInfo></Filters><ExtractionQueries><ExtractionQueryInfo><TableName>RMSVer</TableName><ExtractionQuery><![CDATA[select * from RMSVer]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>locconditions</TableName><ExtractionQuery><![CDATA[select * from locconditions]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>LOBDET</TableName><ExtractionQuery><![CDATA[select * from LOBDET]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>loc</TableName><ExtractionQuery><![CDATA[select loc.* from loc inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where loc.ISVALID = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' @countryList]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>loccvg</TableName><ExtractionQuery><![CDATA[select loccvg.* from loccvg inner join loc on loc.LOCID = loccvg.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where loccvg.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' and Peril in ( @perilList )]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>eqdet</TableName><ExtractionQuery><![CDATA[select eqdet.* from eqdet inner join loc on loc.LOCID = eqdet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where eqdet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>hudet</TableName><ExtractionQuery><![CDATA[select hudet.* from hudet inner join loc on loc.LOCID = hudet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where hudet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>todet</TableName><ExtractionQuery><![CDATA[select todet.* from todet inner join loc on loc.LOCID = todet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where todet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>policyconditions</TableName><ExtractionQuery><![CDATA[select distinct policyconditions.* from policyconditions inner join policy on policy.POLICYID = policyconditions.POLICYID and PolicyType in ( @perilList ) inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>polcvg</TableName><ExtractionQuery><![CDATA[select distinct polcvg.* from polcvg inner join policy on policy.POLICYID = polcvg.POLICYID and PolicyType in ( @perilList ) inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where polcvg.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Policy</TableName><ExtractionQuery><![CDATA[select distinct Policy.* from Policy inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where policy.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' and PolicyType in ( @perilList )]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>accgrp</TableName><ExtractionQuery><![CDATA[select distinct accgrp.* from accgrp inner join portacct on accgrp.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where accgrp.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>TrtyDesc</TableName><ExtractionQuery><![CDATA[select * from trtydesc where trtydesc.isvalid = 1]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>ReinsInf</TableName><ExtractionQuery><![CDATA[select REINSINFID, EXPOSUREID, EXPOSRTYPE, PRIORITY, LAYERNUM, PCNTREINS, LAYERAMT, LAYERCUR, EXCESSAMT, EXCESSCUR, REINSNAME, REINSTYPE, reinsinf.ISVALID, FACDETID, TRTYINFOID, MAOLAMT from reinsinf inner join policy on policy.POLICYID = reinsinf.EXPOSUREID and EXPOSRTYPE = ''POL'' inner join portacct on portacct.ACCGRPID = policy.ACCGRPID inner join portinfo on portinfo.PORTINFOID = portacct.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' union select REINSINFID, EXPOSUREID, EXPOSRTYPE, PRIORITY, LAYERNUM, PCNTREINS, LAYERAMT, LAYERCUR, EXCESSAMT, EXCESSCUR, REINSNAME, REINSTYPE, reinsinf.ISVALID, FACDETID, TRTYINFOID, MAOLAMT from reinsinf inner join loc on loc.LOCID = reinsinf.EXPOSUREID and EXPOSRTYPE = ''LOC'' @countryList inner join portacct on portacct.ACCGRPID = loc.ACCGRPID inner join portinfo on portinfo.PORTINFOID = portacct.PORTINFOID where reinsinf.isvalid =1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Cedants</TableName><ExtractionQuery><![CDATA[select * from cedants]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Prdcers</TableName><ExtractionQuery><![CDATA[select * from prdcers]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>fldet</TableName><ExtractionQuery><![CDATA[select fldet.* from fldet inner join loc on loc.LOCID = fldet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where fldet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>CreateIndex</TableName><ExtractionQuery><![CDATA[CREATE NONCLUSTERED INDEX [loccvg_I1] ON [Schema_Name].[loccvg]( [PERIL], [LOSSTYPE], [VALUEAMT], [PCTSPRNKLR]) INCLUDE ([LOCID], [EQSLGRADE]); CREATE NONCLUSTERED INDEX [loccvg_I2] ON [Schema_Name].[loccvg] ([PERIL], [VALUEAMT], [LABELID]) INCLUDE ([LOCCVGID], [LOCID], [COVGMOD]);CREATE NONCLUSTERED INDEX [loc_I1] ON [Schema_Name].[LOC] ([LOCID]);]]></ExtractionQuery></ExtractionQueryInfo></ExtractionQueries><ConversionQueries><ConversionQueryInfo><ViewName>Account View</ViewName><Headers>AccNumber, AccName, Insured, Producer, Branch, AccUserData1, AccUserData2, AccUserData3, AccUserData4</Headers><Categories>Accounts</Categories><ConversionQuery><![CDATA[select ACCGRPNUM+'' - ''+cast(ACCGRPID as varchar) AccNumber, ACCGRPNAME AccName, case CEDANTID when '''' then '''' else (select NAME from cedants where cedants.ID=CEDANTID) end Insured, case PRDCERID when '''' then '''' else (select NAME from prdcers where prdcers.ID=PRDCERID) end Producer, BRANCHNAME Branch, USERID1 AccUserData1, USERID2 AccUserData2, USERID3 AccUserData3, USERID4 AccUserData4 into #Account from accgrp select * into @finalTableName from #Account order by 1; drop table #Account;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy View</ViewName><Headers>AccNumber, PolNumber, PolName, PolStatus, LineOfBusiness, InceptionDate, ExpirationDate, PolCurrency, PolUnderCover, PolProrata, PolPremium, PolUserData1, PolUserData2, PolUserData3</Headers><Categories>Policies</Categories><ConversionQuery><![CDATA[select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, POLICYID PolNumber, POLICYNUM + ''-'' + rtrim(cast(POLICYTYPE as CHAR)) PolName, Case POLICYSTAT when ''BOOK'' then ''Bound'' when ''CNCL'' then ''Cancelled'' when ''EXPD'' then ''Expired'' when ''PEND'' then ''Pending'' when ''QUOT'' then ''Quoted'' else '''' end PolStatus, case LOBDETID when 0 then '''' else (select LOBNAME from LOBDET where LOBDET.LOBDETID=policy.LOBDETID) end LineOfBusiness, CONVERT(CHAR(8), INCEPTDATE, 112) InceptionDate, CONVERT(CHAR(8), EXPIREDATE, 112) ExpirationDate, Case when UNDCOVAMT>0 then UNDCOVCUR when PARTOF>1 then PARTOFCUR when BLANLIMAMT>0 then BLANLIMCUR when BLANDEDAMT>0 then BLANDEDCUR when MINDEDAMT>0 then MINDEDCUR when MAXDEDAMT>0 then MAXDEDCUR else PARTOFCUR end PolCurrency, UNDCOVAMT PolUnderCover, Case when BLANLIMAMT>1 then Case when PARTOF>1 then Case when BLANLIMAMT>PARTOF then 100 else BLANLIMAMT/PARTOF*100 end when PARTOF>0 then PARTOF*100 else 100 end when BLANLIMAMT>0 then BLANLIMAMT*100 else Case when PARTOF>1 then 100 when PARTOF>0 then PARTOF*100 else 100 end end PolProrata, BLANPREAMT PolPremium, '''' PolUserData1, '''' PolUserData2, '''' PolUserData3 into #Policy from policy inner join accgrp on accgrp.ACCGRPID=policy.ACCGRPID where POLICYTYPE<5 select * into @finalTableName from #Policy order by 1, 2; drop table #Policy;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy Condition View</ViewName><Headers>AccNumber, PolNumber, PolPeril, PolCoverage, PolLimit, PolDed, PolMinDed, PolMaxDed, PolCondName, PolCondPriority</Headers><Categories>PolicyConditions</Categories><ConversionQuery><![CDATA[select POLICYID, ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, POLICYID PolNumber, case POLICYTYPE when 1 then ''EXXX'' when 2 then ''WIXX'' when 3 then ''STTH'' when 4 then ''FLXX'' end PolPeril , BLANLIMAMT, BLANDEDAMT, PARTOF, MINDEDAMT, MAXDEDAMT, case when POLICYID in (select POLICYID from policyconditions where CONDITIONTYPE=1) then (select max(cast(policyid as VARCHAR) + ''-'' + CONDITIONNAME) from policyconditions pc where pc.POLICYID=policy.POLICYID) else '''' end RestrictionName into #PolData from policy inner join accgrp on accgrp.ACCGRPID=policy.ACCGRPID where POLICYTYPE in ( @perilList ) ;with pcp (ID, CondName, [Priority]) as ( select conditionID, cast(policyid as VARCHAR) + ''-'' + conditionname, 3 from policyconditions where ParentconditionID=0 and conditiontype=2 union all select pc.conditionID, cast(pc.policyid as VARCHAR) + ''-'' + pc.conditionname, pcp.[Priority]+1 from policyconditions pc inner join pcp on pc.ParentconditionID=pcp.ID ) select CONDITIONID, POLICYID, LIMIT, DEDUCTIBLE, CondName, Priority into #PolCond from policyconditions inner join pcp on policyconditions.CONDITIONID=pcp.ID select AccNumber, PolNumber, PolPeril , Case LOSSTYPE when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''AllProp'' end PolCoverage, LIMITAMT PolLimit, DEDUCTAMT PolDed, ''0'' PolMinDed, ''0'' PolMaxDed, RestrictionName PolCondName, Case LOSSTYPE when 4 then 1 else 2 end PolCondPriority, 0 ConditionID into #PolicyCondition from polcvg inner join #PolData on polcvg.POLICYID=#PolData.POLICYID where ( limitamt>0 or deductamt>0 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT=0 or ( PARTOF=0 and BLANLIMAMT>1 ) ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT/PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>1 and PARTOF<=1 and PARTOF>0 ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>0 and ( PARTOF>1 or BLANLIMAMT<=1 ) ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT=0 or ( PARTOF=0 and BLANLIMAMT>1 ) ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT/PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>1 and PARTOF<=1 and PARTOF>0 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>0 and ( PARTOF>1 or BLANLIMAMT<=1 ) ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', LIMIT, DEDUCTIBLE, ''0'', ''0'', CondName, Priority, ConditionID from #PolData inner join #PolCond on #PolData.POLICYID=#PolCond.POLICYID union all select AccNumber, PolNumber, PolPeril, ''AllCov'', ''1'', ''0'', ''0'', ''0'', '''', 0, 0 from #PolData where ( BLANLIMAMT=0 and BLANDEDAMT=0 and MINDEDAMT=0 and MAXDEDAMT=0 ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) and POLICYID not in ( select policyid from polcvg ) select AccNumber, PolNumber, PolPeril , PolCoverage, case PolLimit when 0 then 1 else PolLimit end PolLimit, PolDed, PolMinDed, PolMaxDed, PolCondName, PolCondPriority into @finalTableName from #PolicyCondition where PolPeril <> ''NA'' order by 1, 2; drop table #PolicyCondition; drop table #PolCond; drop table #PolData;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location View</ViewName><Headers>AccNumber, SiteNumber, SiteName, StructureNumber, StructureName, Country, StreetAddress, Postcode, City, AdminLevel2, AdminLevel1, Cresta, SubCresta, UserGeoData3, Latitude, Longitude, StructureCode, OccupancyCode, YearBuilt, NumBuildings, NumStories, PctSprinkler, PctSprinklerHigh, PctSprinklerMed, PctSprinklerLow, Currency, StrUserData1, StrUserData2, StrUserData3, UserGeoData1, PolCondName1, PolCondName2, PolCondName3, PolCondName4, PolCondName5, PolCondName6, PolCondName7, PolCondName8, PolCondName9, PolCondName10, PolCondName11, PolCondName12, PolCondName13, PolCondName14, PolCondName15, PolCondName16, PolCondName17, PolCondName18, PolCondName19, PolCondName20, PolCondName21, PolCondName22, PolCondName23, PolCondName24, PolCondName25, PolCondName26, PolCondName27, PolCondName28, PolCondName29, PolCondName30</Headers><Categories>Sites, Structures</Categories><ConversionQuery><![CDATA[select LocID, MAX(cond1) Cond1, MAX(cond2) Cond2, MAX(cond3) Cond3, MAX(cond4) Cond4, MAX(cond5) Cond5, MAX(cond6) Cond6, MAX(cond7) Cond7, MAX(cond8) Cond8, MAX(cond9) Cond9, MAX(cond10) Cond10, MAX(cond11) Cond11, MAX(cond12) Cond12, MAX(cond13) Cond13, MAX(cond14) Cond14, MAX(cond15) Cond15, MAX(cond16) Cond16, MAX(cond17) Cond17, MAX(cond18) Cond18, MAX(cond19) Cond19, MAX(cond20) Cond20, MAX(cond21) Cond21, MAX(cond22) Cond22, MAX(cond23) Cond23, MAX(cond24) Cond24, MAX(cond25) Cond25, MAX(cond26) Cond26, MAX(cond27) Cond27, MAX(cond28) Cond28, MAX(cond29) Cond29, MAX(cond30) Cond30 into #LocCondList from ( select LocID, coalesce([1], '''') Cond1, coalesce([2], '''') Cond2, coalesce([3], '''') Cond3, coalesce([4], '''') Cond4, coalesce([5], '''') Cond5, coalesce([6], '''') Cond6, coalesce([7], '''') Cond7, coalesce([8], '''') Cond8, coalesce([9], '''') Cond9, coalesce([10], '''') Cond10, coalesce([11], '''') Cond11, coalesce([12], '''') Cond12, coalesce([13], '''') Cond13, coalesce([14], '''') Cond14, coalesce([15], '''') Cond15, coalesce([16], '''') Cond16, coalesce([17], '''') Cond17, coalesce([18], '''') Cond18, coalesce([19], '''') Cond19, coalesce([20], '''') Cond20, coalesce([21], '''') Cond21, coalesce([22], '''') Cond22, coalesce([23], '''') Cond23, coalesce([24], '''') Cond24, coalesce([25], '''') Cond25, coalesce([26], '''') Cond26, coalesce([27], '''') Cond27, coalesce([28], '''') Cond28, coalesce([29], '''') Cond29, coalesce([30], '''') Cond30 from ( select LocID, row_number() over (partition by locid order by locconditions.conditionid) Ord, cast(policyid as VARCHAR) + ''-'' + conditionname ConditionName from locconditions inner join policyconditions on locconditions.CONDITIONID=policyconditions.CONDITIONID where included>0 ) Data pivot (max(conditionname) for Ord in ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30]) ) Piv ) Z group by LOCID select LOCID, LocPct, [1] LowPct, [2] MedPct, [3] HighPct into #SprinklerData from ( select LOCID, LMH, max(LocPct) LocPct, sum(GradePct) GradePct from ( select LOCID, case EQSLGRADE when 0 then 2 when 1 then 1 when 2 then 2 else 3 end LMH, sum(PCTSPRNKLR*VALUEAMT) over (partition by LOCID)/sum(VALUEAMT) over (partition by LOCID) * 100. LocPct, PCTSPRNKLR*VALUEAMT/sum(PCTSPRNKLR*VALUEAMT) over (partition by LOCID) * 100. GradePct from loccvg where PERIL=1 and LOSSTYPE=2 and PCTSPRNKLR>0 and VALUEAMT>0 ) Data group by LOCID, LMH) Grouped pivot (max(GradePct) for LMH in ([1], [2], [3])) Pivoted select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case PRIMARYBLDG when 1 then LOCNAME else (select LOCNAME from loc L where L.LOCID=loc.PRIMARYLOCID) end SiteName, loc.LOCID StructureNumber, LOCNAME StructureName, case COUNTRY when ''CB'' then STATECODE else COUNTRY end Country, STREETNAME StreetAddress, POSTALCODE Postcode, CITY City, COUNTY AdminLevel2, STATECODE AdminLevel1, CRESTA Cresta, SUBCRESTA SubCresta, ''A='' + rtrim(cast(ADDRMATCH as CHAR)) UserGeoData3, LATITUDE Latitude, LONGITUDE Longitude, BLDGSCHEME + rtrim(cast(BLDGCLASS as CHAR)) StructureCode, OCCSCHEME + rtrim(cast(OCCTYPE as CHAR)) OccupancyCode, YEAR(yearbuilt) YearBuilt, NUMBLDGS NumBuildings, NUMSTORIES NumStories, PCTSPRNKLR PctSprinkler, CURRENCY Currency, loc.USERID1 StrUserData1, loc.USERID2 StrUserData2, loc.USERTXT1 StrUserData3, USERGEO1 UserGeoData1 into #Location from loc inner join ( select locid, max(VALUECUR) CURRENCY, max(pctsprnklr) PCTSPRNKLR from loccvg group by locid union all select LOCID, ''USD'', 0 from loc where locid not in ( select locid from loccvg ) ) lc on loc.LOCID=lc.LOCID inner join accgrp on accgrp.ACCGRPID=Loc.ACCGRPID select AccNumber, SiteNumber, SiteName, StructureNumber, StructureName, Country, StreetAddress, Postcode, City, AdminLevel2, AdminLevel1, Cresta, SubCresta, UserGeoData3, Latitude, Longitude, StructureCode, OccupancyCode, YearBuilt, NumBuildings, NumStories, Case PctSprinkler when 0 then 0 else (select LocPct from #SprinklerData S where s.LOCID=StructureNumber) end PctSprinkler, Case PctSprinkler when 0 then 0 else coalesce((select HighPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerHigh, Case PctSprinkler when 0 then 0 else coalesce((select MedPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerMed, Case PctSprinkler when 0 then 0 else coalesce((select LowPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerLow, Currency, StrUserData1, StrUserData2, StrUserData3, UserGeoData1, coalesce(Cond1, '''') PolCondName1, coalesce(Cond2, '''') PolCondName2, coalesce(Cond3, '''') PolCondName3, coalesce(Cond4, '''') PolCondName4, coalesce(Cond5, '''') PolCondName5, coalesce(Cond6, '''') PolCondName6, coalesce(Cond7, '''') PolCondName7, coalesce(Cond8, '''') PolCondName8, coalesce(Cond9, '''') PolCondName9, coalesce(Cond10, '''') PolCondName10, coalesce(Cond11, '''') PolCondName11, coalesce(Cond12, '''') PolCondName12, coalesce(Cond13, '''') PolCondName13, coalesce(Cond14, '''') PolCondName14, coalesce(Cond15, '''') PolCondName15, coalesce(Cond16, '''') PolCondName16, coalesce(Cond17, '''') PolCondName17, coalesce(Cond18, '''') PolCondName18, coalesce(Cond19, '''') PolCondName19, coalesce(Cond20, '''') PolCondName20, coalesce(Cond21, '''') PolCondName21, coalesce(Cond22, '''') PolCondName22, coalesce(Cond23, '''') PolCondName23, coalesce(Cond24, '''') PolCondName24, coalesce(Cond25, '''') PolCondName25, coalesce(Cond26, '''') PolCondName26, coalesce(Cond27, '''') PolCondName27, coalesce(Cond28, '''') PolCondName28, coalesce(Cond29, '''') PolCondName29, coalesce(Cond30, '''') PolCondName30 into @finalTableName from #Location lc left outer join #LocCondList lcl on lc.StructureNumber=lcl.locid order by 1, 2; drop table #SprinklerData; drop table #LocCondList; drop table #Location;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location Coverage View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, LocPeril, LocCoverage, DamageFactor, LocValue</Headers><Categories>StructureCoverages</Categories><ConversionQuery><![CDATA[select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, Case PERIL when 1 then ''@perilMap1'' when 2 then ''@perilMap2'' when 3 then ''@perilMap3'' when 4 then ''@perilMap4'' end LocPeril , Case LABELID when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''Bldg'' when 5 then ''Cont'' when 6 then ''Time'' when 7 then ''Bldg'' when 8 then ''Cont'' when 9 then ''Time'' when 10 then ''Bldg'' when 11 then ''Cont'' when 12 then ''Time'' when 14 then ''Bldg'' when 15 then ''Cont'' when 16 then ''Time'' when 20 then ''Bldg'' when 21 then ''Cont'' when 22 then ''Time'' when 24 then ''CovA'' when 25 then ''CovB'' when 26 then ''CovC'' when 27 then ''CovD'' when 28 then ''CovA'' when 29 then ''CovB'' when 30 then ''CovC'' when 31 then ''CovD'' when 32 then ''CovA'' when 33 then ''CovB'' when 34 then ''CovC'' when 35 then ''CovD'' when 36 then ''CovA'' when 37 then ''CovB'' when 38 then ''CovC'' when 39 then ''CovD'' when 40 then ''CovA'' when 41 then ''CovB'' when 42 then ''CovC'' when 43 then ''CovD'' when 44 then ''CovA'' when 45 then ''CovB'' when 46 then ''CovC'' when 47 then ''CovD'' end LocCoverage, rank() over (partition by loccvg.locid, labelid order by loccvgid) Rank, Case COVGMOD when 1 then 1.5 when 2 then 1.25 when 3 then 1.0 when 4 then 0.5 else 1 end DamageFactor, VALUEAMT LocValue into #LocCoverage from loccvg inner join loc on loc.LOCID=loccvg.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where VALUEAMT <> 0 and PERIL in ( 1,2,3,4 ) and LABELID < 48 and loccvg.LOCID in ( select distinct LOCID from loc ) select AccNumber, SiteNumber, StructureNumber, LocPeril, case Rank when 1 then LocCoverage else LocCoverage + CAST(Rank as CHAR) end LocCoverage, DamageFactor, LocValue into @finalTableName from #LocCoverage where LocPeril <> ''NA'' order by 1, 2; drop table #LocCoverage;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Site Condition View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, LocPeril, LocCoverage, LocCondType, LocCondPriority, LocLimit, LocDed, IsSite</Headers><Categories>SiteConditions</Categories><ConversionQuery><![CDATA[select LOCID LocID, Case when LOCID in (select distinct PRIMARYLOCID from loc where PRIMARYBLDG=0) then 1 else 0 end IsSite into #SITELIST from loc select LOCCVGID, Case PERIL when 1 then ''EXXX'' when 2 then ''WIXX'' when 3 then ''STTH'' when 4 then ''FLXX'' end Peril, Case LABELID when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''Bldg'' when 5 then ''Cont'' when 6 then ''Time'' when 7 then ''Bldg'' when 8 then ''Cont'' when 9 then ''Time'' when 10 then ''Bldg'' when 11 then ''Cont'' when 12 then ''Time'' when 14 then ''Bldg'' when 15 then ''Cont'' when 16 then ''Time'' when 20 then ''Bldg'' when 21 then ''Cont'' when 22 then ''Time'' when 24 then ''CovA'' when 25 then ''CovB'' when 26 then ''CovC'' when 27 then ''CovD'' when 28 then ''CovA'' when 29 then ''CovB'' when 30 then ''CovC'' when 31 then ''CovD'' when 32 then ''CovA'' when 33 then ''CovB'' when 34 then ''CovC'' when 35 then ''CovD'' when 36 then ''CovA'' when 37 then ''CovB'' when 38 then ''CovC'' when 39 then ''CovD'' when 40 then ''CovA'' when 41 then ''CovB'' when 42 then ''CovC'' when 43 then ''CovD'' when 44 then ''CovA'' when 45 then ''CovB'' when 46 then ''CovC'' when 47 then ''CovD'' end Coverage, IsSite into #LPC from loccvg inner join #SITELIST on #SITELIST.LocID=loccvg.LOCID where PERIL in ( 1,2,3,4 ) and LABELID<48 and ( LIMITAMT>0 or DEDUCTAMT>0 or WAITINGPERIOD>0 ) and loccvg.LOCID in ( select distinct LOCID from loc ) select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, #LPC.Peril LocPeril, #LPC.Coverage LocCoverage, rank() over (partition by loccvg.locid, labelid order by loccvg.loccvgid) Rank, Case CNTLOSSTRG when 0 then ''Standard'' else case loccvg.Peril when 1 then ''CEA'' else ''Standard'' end end LocCondType, 2 LocCondPriority, LIMITAMT LocLimit, Case when WAITINGPERIOD=0 then DEDUCTAMT else -WAITINGPERIOD end LocDed, IsSite into #LocCondition from loccvg inner join #LPC on #LPC.Loccvgid=loccvg.LOCCVGID inner join loc on loc.LOCID=loccvg.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''EQXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from eqdet inner join loccvg on loccvg.LOCID=eqdet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=eqdet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''WXXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from hudet inner join loccvg on loccvg.LOCID=hudet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=hudet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''STTH'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from todet inner join loccvg on loccvg.LOCID=todet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=todet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''FLXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from fldet inner join loccvg on loccvg.LOCID=fldet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=fldet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''EQXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from eqdet inner join loc on loc.LOCID=eqdet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''WXXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from hudet inner join loc on loc.LOCID=hudet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''STTH'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from todet inner join loc on loc.LOCID=todet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''FLXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from fldet inner join loc on loc.LOCID=fldet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) select AccNumber, SiteNumber, StructureNumber, LocPeril, case Rank when 1 then LocCoverage else LocCoverage + CAST(Rank as CHAR) end LocCoverage, LocCondType, LocCondPriority, LocLimit, LocDed, IsSite into @finalTableName from #LocCondition where LocPeril <> ''NA'' order by 1, 2; drop table #LocCondition; drop table #LPC; drop table #SITELIST;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Reinsurance View</ViewName><Headers>AccNumber, PolNumber, SiteNumber, ReinsType, AppliesTo, LayerNumber, Currency, Peril, Coverage, LayerAmount, Attachment, CededPct, Reinsurer, TreatyName, FacCertificate</Headers><Categories>Reinsurance</Categories><ConversionQuery><![CDATA[select case EXPOSRTYPE when ''LOC'' then (select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) from accgrp where accgrpid = (select ACCGRPID from loc where LOCID=EXPOSUREID)) else ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) from accgrp where accgrpid = ( select ACCGRPID from policy where policyid=EXPOSUREID ) ) end AccNumber, case EXPOSRTYPE when ''LOC'' then case REINSTYPE when ''F'' then coalesce(cast((select top 1 POLICYID from policy where policy.ACCGRPID=(select ACCGRPID from loc where LOCID=EXPOSUREID) order by UNDCOVAMT) as char),'''') else '''' end else cast(EXPOSUREID as char) end PolNumber, case EXPOSRTYPE when ''LOC'' then cast(EXPOSUREID as char) else '''' end SiteNumber, REINSTYPE ReinsType, case EXPOSRTYPE when ''LOC'' then ''S'' else ''P'' end AppliesTo, LAYERNUM LayerNumber, LAYERCUR Currency, ''ALLP'' Peril, ''AllCov'' Coverage, LAYERAMT LayerAmount, EXCESSAMT Attachment, PCNTREINS CededPct, REINSNAME Reinsurer, case REINSTYPE when ''T'' then case TRTYINFOID when 0 then ''Unspecified'' else coalesce((select TREATYNAME from trtydesc where trtydesc.TREATYID=reinsinf.TRTYINFOID),REINSNAME,''Unspecified'') end else '''' end TreatyName, case REINSTYPE when ''F'' then rtrim(cast(EXPOSUREID as char))+''-''+rtrim(cast(LAYERNUM as char))+''-''+rtrim(cast(REINSINFID as char)) else '''' end FacCertificate into #Reinsurance from reinsinf where REINSTYPE in ( ''F'',''T'' ) and EXPOSRTYPE in ( ''LOC'',''POL'' ) select * into @finalTableName from #Reinsurance where AccNumber is not null order by 1; drop table #Reinsurance;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Secondary Structure</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, EFeatureCode, EFeatureValue, WFeatureCode, WFeatureValue, </Headers><Categories>SecondaryStructures</Categories><ConversionQuery><![CDATA[with dataEQ (AccNumber, SiteNumber, StructureNumber, Country, CLADDING, CONQUAL, FRAMEBOLT, MECHELEC, ORNAMENT, OVERPROF, POUNDING, SHAPECONF, STORYPROF, URMPROV, WALLSBRACD) as ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, loc.COUNTRY, CLADDING, CONQUAL, FRAMEBOLT, MECHELEC, ORNAMENT, OVERPROF, POUNDING, SHAPECONF, STORYPROF, URMPROV, WALLSBRACD from eqdet inner join loc on loc.LOCID=eqdet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where COUNTRY in (''US'',''CA'') and eqdet.LOCID in (select distinct LOCID from loc) ) select AccNumber, SiteNumber, StructureNumber, ''E_PRE_CON'' EFeatureCode, case CLADDING when 1 then 2 when 2 then 1 when 3 then 1 else 0 end EFeatureValue into #SecondaryFeatureEQ from dataEQ where CLADDING>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_STR_CONDN'', case CONQUAL when 1 then 2 when 2 then 3 when 3 then 4 when 4 then 1 else 0 end from dataEQ where CONQUAL>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_FND_ANCHOR'', case FRAMEBOLT when 1 then 1 when 2 then 3 else 0 end from dataEQ where FRAMEBOLT>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_MECH_EQT'', case MECHELEC when 1 then 1 when 2 then 2 when 3 then 3 else 0 end from dataEQ where MECHELEC>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_HVY_AR_ELE'', case ORNAMENT when 1 then 1 when 2 then 2 when 3 then 2 else 0 end from dataEQ where ORNAMENT>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_VERT_SETBK'', case OVERPROF when 1 then 2 when 2 then 1 else 0 end from dataEQ where OVERPROF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_POUNDING'', case POUNDING when 1 then 4 when 2 then 1 else 0 end from dataEQ where POUNDING>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_BLDG_P_LAY'', case SHAPECONF when 1 then 1 when 2 then 3 else 0 end from dataEQ where SHAPECONF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_SOFT_STORY'', case STORYPROF when 1 then 3 when 2 then 1 else 0 end from dataEQ where STORYPROF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_URM_RETR'', case URMPROV when 1 then 2 when 2 then 1 else 0 end from dataEQ where URMPROV>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_CRIP_WALL'', case WALLSBRACD when 1 then 3 when 2 then 2 when 3 then 1 else 0 end from dataEQ where WALLSBRACD>0; with dataHU (AccNumber, SiteNumber, StructureNumber, Country, CLADSYS, FOUNDSYS,RESISTDOOR, ROOFANCH, ROOFGEOM, ROOFPARAPT, ROOFSYS) as ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, loc.COUNTRY, CLADSYS, FOUNDSYS, RESISTDOOR, ROOFANCH, ROOFGEOM, ROOFPARAPT, ROOFSYS from hudet inner join loc on loc.LOCID=hudet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where COUNTRY in (''US'',''CA'') and hudet.LOCID in (select distinct LOCID from loc) ) select AccNumber, SiteNumber, StructureNumber, ''W_WL_CLAD'' WFeatureCode, case CLADSYS when 1 then 1 when 2 then 3 when 3 then 6 when 4 then 4 when 5 then 5 when 6 then 2 when 7 then 5 when 8 then 1 else 0 end WFeatureValue into #SecondaryFeatureHU from dataHU where CLADSYS>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_FND_ANCH'', case FOUNDSYS when 1 then 5 when 2 then 4 when 3 then 1 when 4 then 1 else 0 end from dataHU where FOUNDSYS>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_DOOR_REIN'', case RESISTDOOR when 1 then 4 when 2 then 2 when 3 then 1 else 0 end from dataHU where RESISTDOOR>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF2WALL'', case ROOFANCH when 1 then 3 when 2 then 4 when 3 then 1 when 4 then 3 when 5 then 5 else 0 end from dataHU where ROOFANCH>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF_PROF'', case ROOFGEOM when 1 then 4 when 2 then 5 when 3 then 4 when 4 then 1 when 5 then 4 when 6 then 4 when 7 then 1 when 8 then 2 when 9 then 2 else 0 end from dataHU where ROOFGEOM>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_PARA'', case ROOFPARAPT when 1 then 2 else 0 end from dataHU where ROOFPARAPT>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF_MAT'', case ROOFSYS when 1 then 4 when 2 then 8 when 3 then 7 when 4 then 3 when 5 then 1 when 6 then 10 when 7 then 9 when 8 then 2 when 9 then 2 else 0 end from dataHU where ROOFSYS>0; select AccNumber, SiteNumber, StructureNumber, EFeatureCode, EFeatureValue, '''' WFeatureCode, '''' WFeatureValue into @finalTableName from #SecondaryFeatureEQ union all select AccNumber, SiteNumber, StructureNumber, '''', '''', WFeatureCode, WFeatureValue from #SecondaryFeatureHU order by 1, 2; drop table #SecondaryFeatureEQ; drop table #SecondaryFeatureHU;]]></ConversionQuery></ConversionQueryInfo></ConversionQueries></DataExtractionTemplate>' where TemplateName = 'Standard Database Extraction Template';

		--Fixed defect 0010680: RQE 16 DB Migration: Standard Database Extraction Template names needs to be renamed to differentiate between EDM and CEDE
		Update TemplateInfo set TemplateName = 'Standard EDM Database Extraction Template' where TemplateName = 'Standard Database Extraction Template'
		Update TemplateInfo set TemplateName = 'Standard EDM Database Extraction Template - Including IsValid=0' where TemplateName = 'Standard Database Extraction Template - Including IsValid=0'

		--0010840: RQE 16 DB Migration: Run Import Job steps as Above Normal and Run Probabilistic Job steps as Normal
		Update TemplateInfo set CreateDate = '20150413073000', ModifyDate = '20150413073000', 	TemplateXml = '<?xml version="1.0" encoding="UTF-8" standalone="no"?><JobTemplate><JobProperties><JobProperty JobType="AllJobTypes" MaxCores="0" Premptive="N" Priority="Normal"/><JobProperty JobType="DataExtraction" MaxCores="0" Premptive="N" Priority="AboveNormal"/><JobProperty JobType="BrowserDataGen" MaxCores="0" Premptive="N" Priority="AboveNormal"/><JobProperty JobType="DataMigration" MaxCores="0" Premptive="N" Priority="AboveNormal"/><JobProperty JobType="Geocode" MaxCores="0" Premptive="N" Priority="AboveNormal"/><JobProperty JobType="Import" MaxCores="0" Premptive="N" Priority="AboveNormal"/><JobProperty JobType="Report" MaxCores="0" Premptive="N" Priority="AboveNormal"/></JobProperties></JobTemplate>' where TemplateName = 'Standard Job Template'

	end;
end;

