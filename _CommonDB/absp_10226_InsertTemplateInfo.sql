if exists(select * from SYSOBJECTS where ID = object_id(N'absp_10226_InsertTemplateInfo') and objectproperty(id,N'IsProcedure') = 1)
begin
	drop procedure absp_10226_InsertTemplateInfo;
end
go

create procedure  absp_10226_InsertTemplateInfo
as

begin
	set nocount on
	if exists (select 1 from sys.objects where name='TemplateInfo' and type = 'U' )
	begin

		-- Remove all prior data extraction templates (both system and user)
		Delete from TemplateInfo where TemplateType = 4 and TemplateName not in ('Standard Database Extraction Template - Including IsValid=0','Standard Database Extraction Template')

		-- Remove Standard SQL Sub Peril Templates (only do system templates, we decided to leave all user templates alone)
		Delete from TemplateInfo where TemplateName in ('Standard SQL Import Subperils - EQFF or WIFL','Standard SQL Import Subperils - EQSL or WIFL')

		-- Rename the final existing Standard SQL Import Template
		Update TemplateInfo set TemplateName = 'Standard EDM Import' where TemplateName = 'Standard SQL Import Basic Perils - EQSH or WIWI or STTH'

		--Now Update the Data Extraction Templates
		Update TemplateInfo set TemplateVersion = '2014.002', CreateDate = '20141124090000', ModifyDate = '20141124090000', TemplateXml = '<?xml version="1.0"?><DataExtractionTemplate><Filters><FilterInfo><FilterLabel>@portname</FilterLabel><Query><![CDATA[     select  replace(portname, char(13) + char(10), '''') from portinfo    ]]></Query><FilterVariable>@portname</FilterVariable></FilterInfo><FilterInfo><FilterLabel>@countryList</FilterLabel><Query><![CDATA[    select distinct case when country = ''CB'' then ''CB-'' + rtrim(STATECODE) else rtrim(COUNTRY) end   from loc inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where loc.ISVALID = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portName''   ]]></Query><FilterVariable>@countryList</FilterVariable></FilterInfo></Filters><ExtractionQueries><ExtractionQueryInfo><TableName>RMSVer</TableName><ExtractionQuery><![CDATA[select * from RMSVer]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>locconditions</TableName><ExtractionQuery><![CDATA[select * from locconditions]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>LOBDET</TableName><ExtractionQuery><![CDATA[select * from LOBDET]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>loc</TableName><ExtractionQuery><![CDATA[select loc.* from loc inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' @countryList]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>loccvg</TableName><ExtractionQuery><![CDATA[select loccvg.* from loccvg inner join loc on loc.LOCID = loccvg.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' and Peril in ( @perilList )]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>eqdet</TableName><ExtractionQuery><![CDATA[select eqdet.* from eqdet inner join loc on loc.LOCID = eqdet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>hudet</TableName><ExtractionQuery><![CDATA[select hudet.* from hudet inner join loc on loc.LOCID = hudet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>todet</TableName><ExtractionQuery><![CDATA[select todet.* from todet inner join loc on loc.LOCID = todet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>policyconditions</TableName><ExtractionQuery><![CDATA[select distinct policyconditions.* from policyconditions inner join policy on policy.POLICYID = policyconditions.POLICYID and PolicyType in ( @perilList ) inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>polcvg</TableName><ExtractionQuery><![CDATA[select distinct polcvg.* from polcvg inner join policy on policy.POLICYID = polcvg.POLICYID and PolicyType in ( @perilList ) inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Policy</TableName><ExtractionQuery><![CDATA[select distinct Policy.* from Policy inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' and PolicyType in ( @perilList )]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>accgrp</TableName><ExtractionQuery><![CDATA[select distinct accgrp.* from accgrp inner join portacct on accgrp.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>TrtyDesc</TableName><ExtractionQuery><![CDATA[select * from trtydesc]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>ReinsInf</TableName><ExtractionQuery><![CDATA[select REINSINFID, EXPOSUREID, EXPOSRTYPE, PRIORITY, LAYERNUM, PCNTREINS, LAYERAMT, LAYERCUR, EXCESSAMT, EXCESSCUR, REINSNAME, REINSTYPE, reinsinf.ISVALID, FACDETID, TRTYINFOID, MAOLAMT from reinsinf inner join policy on policy.POLICYID = reinsinf.EXPOSUREID and EXPOSRTYPE = ''POL'' inner join portacct on portacct.ACCGRPID = policy.ACCGRPID inner join portinfo on portinfo.PORTINFOID = portacct.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' union select REINSINFID, EXPOSUREID, EXPOSRTYPE, PRIORITY, LAYERNUM, PCNTREINS, LAYERAMT, LAYERCUR, EXCESSAMT, EXCESSCUR, REINSNAME, REINSTYPE, reinsinf.ISVALID, FACDETID, TRTYINFOID, MAOLAMT from reinsinf inner join loc on loc.LOCID = reinsinf.EXPOSUREID and EXPOSRTYPE = ''LOC'' @countryList inner join portacct on portacct.ACCGRPID = loc.ACCGRPID inner join portinfo on portinfo.PORTINFOID = portacct.PORTINFOID where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Cedants</TableName><ExtractionQuery><![CDATA[select * from cedants]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Prdcers</TableName><ExtractionQuery><![CDATA[select * from prdcers]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>fldet</TableName><ExtractionQuery><![CDATA[select fldet.* from fldet inner join loc on loc.LOCID = fldet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where fldet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>CreateIndex</TableName><ExtractionQuery><![CDATA[CREATE NONCLUSTERED INDEX [loccvg_I1] ON [Schema_Name].[loccvg]( [PERIL], [LOSSTYPE], [VALUEAMT], [PCTSPRNKLR]) INCLUDE ([LOCID], [EQSLGRADE]); CREATE NONCLUSTERED INDEX [loccvg_I2] ON [Schema_Name].[loccvg] ([PERIL], [VALUEAMT], [LABELID]) INCLUDE ([LOCCVGID], [LOCID], [COVGMOD]);CREATE NONCLUSTERED INDEX [loc_I1] ON [Schema_Name].[LOC] ([LOCID]);]]></ExtractionQuery></ExtractionQueryInfo></ExtractionQueries><ConversionQueries><ConversionQueryInfo><ViewName>Account View</ViewName><Headers>AccNumber, AccName, Insured, Producer, Branch, AccUserData1, AccUserData2, AccUserData3, AccUserData4</Headers><Categories>Accounts</Categories><ConversionQuery><![CDATA[select ACCGRPNUM+'' - ''+cast(ACCGRPID as varchar) AccNumber, ACCGRPNAME AccName, case CEDANTID when '''' then '''' else (select NAME from cedants where cedants.ID=CEDANTID) end Insured, case PRDCERID when '''' then '''' else (select NAME from prdcers where prdcers.ID=PRDCERID) end Producer, BRANCHNAME Branch, USERID1 AccUserData1, USERID2 AccUserData2, USERID3 AccUserData3, USERID4 AccUserData4 into #Account from accgrp select * into @finalTableName from #Account order by 1; drop table #Account;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy View</ViewName><Headers>AccNumber, PolNumber, PolName, PolStatus, LineOfBusiness, InceptionDate, ExpirationDate, PolCurrency, PolUnderCover, PolProrata, PolPremium, PolUserData1, PolUserData2, PolUserData3</Headers><Categories>Policies</Categories><ConversionQuery><![CDATA[select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, POLICYID PolNumber, POLICYNUM + ''-'' + rtrim(cast(POLICYTYPE as CHAR)) PolName, Case POLICYSTAT when ''BOOK'' then ''Bound'' when ''CNCL'' then ''Cancelled'' when ''EXPD'' then ''Expired'' when ''PEND'' then ''Pending'' when ''QUOT'' then ''Quoted'' else '''' end PolStatus, case LOBDETID when 0 then '''' else (select LOBNAME from LOBDET where LOBDET.LOBDETID=policy.LOBDETID) end LineOfBusiness, CONVERT(CHAR(8), INCEPTDATE, 112) InceptionDate, CONVERT(CHAR(8), EXPIREDATE, 112) ExpirationDate, Case when UNDCOVAMT>0 then UNDCOVCUR when PARTOF>1 then PARTOFCUR when BLANLIMAMT>0 then BLANLIMCUR when BLANDEDAMT>0 then BLANDEDCUR when MINDEDAMT>0 then MINDEDCUR when MAXDEDAMT>0 then MAXDEDCUR else PARTOFCUR end PolCurrency, UNDCOVAMT PolUnderCover, Case when BLANLIMAMT>1 then Case when PARTOF>1 then Case when BLANLIMAMT>PARTOF then 100 else BLANLIMAMT/PARTOF*100 end when PARTOF>0 then PARTOF*100 else 100 end when BLANLIMAMT>0 then BLANLIMAMT*100 else Case when PARTOF>1 then 100 when PARTOF>0 then PARTOF*100 else 100 end end PolProrata, BLANPREAMT PolPremium, '''' PolUserData1, '''' PolUserData2, '''' PolUserData3 into #Policy from policy inner join accgrp on accgrp.ACCGRPID=policy.ACCGRPID where POLICYTYPE<5 select * into @finalTableName from #Policy order by 1, 2; drop table #Policy;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy Condition View</ViewName><Headers>AccNumber, PolNumber, PolPeril, PolCoverage, PolLimit, PolDed, PolMinDed, PolMaxDed, PolCondName, PolCondPriority</Headers><Categories>PolicyConditions</Categories><ConversionQuery><![CDATA[select POLICYID, ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, POLICYID PolNumber, case POLICYTYPE when 1 then ''EXXX'' when 2 then ''WIXX'' when 3 then ''STTH'' when 4 then ''FLXX'' end PolPeril , BLANLIMAMT, BLANDEDAMT, PARTOF, MINDEDAMT, MAXDEDAMT, case when POLICYID in (select POLICYID from policyconditions where CONDITIONTYPE=1) then (select max(cast(policyid as VARCHAR) + ''-'' + CONDITIONNAME) from policyconditions pc where pc.POLICYID=policy.POLICYID) else '''' end RestrictionName into #PolData from policy inner join accgrp on accgrp.ACCGRPID=policy.ACCGRPID where POLICYTYPE in ( @perilList ) ;with pcp (ID, CondName, [Priority]) as ( select conditionID, cast(policyid as VARCHAR) + ''-'' + conditionname, 3 from policyconditions where ParentconditionID=0 and conditiontype=2 union all select pc.conditionID, cast(pc.policyid as VARCHAR) + ''-'' + pc.conditionname, pcp.[Priority]+1 from policyconditions pc inner join pcp on pc.ParentconditionID=pcp.ID ) select CONDITIONID, POLICYID, LIMIT, DEDUCTIBLE, CondName, Priority into #PolCond from policyconditions inner join pcp on policyconditions.CONDITIONID=pcp.ID select AccNumber, PolNumber, PolPeril , Case LOSSTYPE when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''AllProp'' end PolCoverage, LIMITAMT PolLimit, DEDUCTAMT PolDed, ''0'' PolMinDed, ''0'' PolMaxDed, RestrictionName PolCondName, Case LOSSTYPE when 4 then 1 else 2 end PolCondPriority, 0 ConditionID into #PolicyCondition from polcvg inner join #PolData on polcvg.POLICYID=#PolData.POLICYID where ( limitamt>0 or deductamt>0 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT=0 or ( PARTOF=0 and BLANLIMAMT>1 ) ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT/PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>1 and PARTOF<=1 and PARTOF>0 ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>0 and ( PARTOF>1 or BLANLIMAMT<=1 ) ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT=0 or ( PARTOF=0 and BLANLIMAMT>1 ) ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT/PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>1 and PARTOF<=1 and PARTOF>0 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>0 and ( PARTOF>1 or BLANLIMAMT<=1 ) ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', LIMIT, DEDUCTIBLE, ''0'', ''0'', CondName, Priority, ConditionID from #PolData inner join #PolCond on #PolData.POLICYID=#PolCond.POLICYID union all select AccNumber, PolNumber, PolPeril, ''AllCov'', ''1'', ''0'', ''0'', ''0'', '''', 0, 0 from #PolData where ( BLANLIMAMT=0 and BLANDEDAMT=0 and MINDEDAMT=0 and MAXDEDAMT=0 ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) and POLICYID not in ( select policyid from polcvg ) select AccNumber, PolNumber, PolPeril , PolCoverage, case PolLimit when 0 then 1 else PolLimit end PolLimit, PolDed, PolMinDed, PolMaxDed, PolCondName, PolCondPriority into @finalTableName from #PolicyCondition where PolPeril <> ''NA'' order by 1, 2; drop table #PolicyCondition; drop table #PolCond; drop table #PolData;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location View</ViewName><Headers>AccNumber, SiteNumber, SiteName, StructureNumber, StructureName, Country, StreetAddress, Postcode, City, AdminLevel2, AdminLevel1, Cresta, SubCresta, UserGeoData3, Latitude, Longitude, StructureCode, OccupancyCode, YearBuilt, NumBuildings, NumStories, PctSprinkler, PctSprinklerHigh, PctSprinklerMed, PctSprinklerLow, Currency, StrUserData1, StrUserData2, StrUserData3, UserGeoData1, PolCondName1, PolCondName2, PolCondName3, PolCondName4, PolCondName5, PolCondName6, PolCondName7, PolCondName8, PolCondName9, PolCondName10, PolCondName11, PolCondName12, PolCondName13, PolCondName14, PolCondName15, PolCondName16, PolCondName17, PolCondName18, PolCondName19, PolCondName20, PolCondName21, PolCondName22, PolCondName23, PolCondName24, PolCondName25, PolCondName26, PolCondName27, PolCondName28, PolCondName29, PolCondName30</Headers><Categories>Sites, Structures</Categories><ConversionQuery><![CDATA[select LocID, MAX(cond1) Cond1, MAX(cond2) Cond2, MAX(cond3) Cond3, MAX(cond4) Cond4, MAX(cond5) Cond5, MAX(cond6) Cond6, MAX(cond7) Cond7, MAX(cond8) Cond8, MAX(cond9) Cond9, MAX(cond10) Cond10, MAX(cond11) Cond11, MAX(cond12) Cond12, MAX(cond13) Cond13, MAX(cond14) Cond14, MAX(cond15) Cond15, MAX(cond16) Cond16, MAX(cond17) Cond17, MAX(cond18) Cond18, MAX(cond19) Cond19, MAX(cond20) Cond20, MAX(cond21) Cond21, MAX(cond22) Cond22, MAX(cond23) Cond23, MAX(cond24) Cond24, MAX(cond25) Cond25, MAX(cond26) Cond26, MAX(cond27) Cond27, MAX(cond28) Cond28, MAX(cond29) Cond29, MAX(cond30) Cond30 into #LocCondList from ( select LocID, coalesce([1], '''') Cond1, coalesce([2], '''') Cond2, coalesce([3], '''') Cond3, coalesce([4], '''') Cond4, coalesce([5], '''') Cond5, coalesce([6], '''') Cond6, coalesce([7], '''') Cond7, coalesce([8], '''') Cond8, coalesce([9], '''') Cond9, coalesce([10], '''') Cond10, coalesce([11], '''') Cond11, coalesce([12], '''') Cond12, coalesce([13], '''') Cond13, coalesce([14], '''') Cond14, coalesce([15], '''') Cond15, coalesce([16], '''') Cond16, coalesce([17], '''') Cond17, coalesce([18], '''') Cond18, coalesce([19], '''') Cond19, coalesce([20], '''') Cond20, coalesce([21], '''') Cond21, coalesce([22], '''') Cond22, coalesce([23], '''') Cond23, coalesce([24], '''') Cond24, coalesce([25], '''') Cond25, coalesce([26], '''') Cond26, coalesce([27], '''') Cond27, coalesce([28], '''') Cond28, coalesce([29], '''') Cond29, coalesce([30], '''') Cond30 from ( select LocID, row_number() over (partition by locid order by locconditions.conditionid) Ord, cast(policyid as VARCHAR) + ''-'' + conditionname ConditionName from locconditions inner join policyconditions on locconditions.CONDITIONID=policyconditions.CONDITIONID where included>0 ) Data pivot (max(conditionname) for Ord in ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30]) ) Piv ) Z group by LOCID select LOCID, LocPct, [1] LowPct, [2] MedPct, [3] HighPct into #SprinklerData from ( select LOCID, LMH, max(LocPct) LocPct, sum(GradePct) GradePct from ( select LOCID, case EQSLGRADE when 0 then 2 when 1 then 1 when 2 then 2 else 3 end LMH, sum(PCTSPRNKLR*VALUEAMT) over (partition by LOCID)/sum(VALUEAMT) over (partition by LOCID) * 100. LocPct, PCTSPRNKLR*VALUEAMT/sum(PCTSPRNKLR*VALUEAMT) over (partition by LOCID) * 100. GradePct from loccvg where PERIL=1 and LOSSTYPE=2 and PCTSPRNKLR>0 and VALUEAMT>0 ) Data group by LOCID, LMH) Grouped pivot (max(GradePct) for LMH in ([1], [2], [3])) Pivoted select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case PRIMARYBLDG when 1 then LOCNAME else (select LOCNAME from loc L where L.LOCID=loc.PRIMARYLOCID) end SiteName, loc.LOCID StructureNumber, LOCNAME StructureName, case COUNTRY when ''CB'' then STATECODE else COUNTRY end Country, STREETNAME StreetAddress, POSTALCODE Postcode, CITY City, COUNTY AdminLevel2, STATECODE AdminLevel1, CRESTA Cresta, SUBCRESTA SubCresta, ''A='' + rtrim(cast(ADDRMATCH as CHAR)) UserGeoData3, LATITUDE Latitude, LONGITUDE Longitude, BLDGSCHEME + rtrim(cast(BLDGCLASS as CHAR)) StructureCode, OCCSCHEME + rtrim(cast(OCCTYPE as CHAR)) OccupancyCode, YEAR(yearbuilt) YearBuilt, NUMBLDGS NumBuildings, NUMSTORIES NumStories, PCTSPRNKLR PctSprinkler, CURRENCY Currency, loc.USERID1 StrUserData1, loc.USERID2 StrUserData2, loc.USERTXT1 StrUserData3, USERGEO1 UserGeoData1 into #Location from loc inner join ( select locid, max(VALUECUR) CURRENCY, max(pctsprnklr) PCTSPRNKLR from loccvg group by locid union all select LOCID, ''USD'', 0 from loc where locid not in ( select locid from loccvg ) ) lc on loc.LOCID=lc.LOCID inner join accgrp on accgrp.ACCGRPID=Loc.ACCGRPID select AccNumber, SiteNumber, SiteName, StructureNumber, StructureName, Country, StreetAddress, Postcode, City, AdminLevel2, AdminLevel1, Cresta, SubCresta, UserGeoData3, Latitude, Longitude, StructureCode, OccupancyCode, YearBuilt, NumBuildings, NumStories, Case PctSprinkler when 0 then 0 else (select LocPct from #SprinklerData S where s.LOCID=StructureNumber) end PctSprinkler, Case PctSprinkler when 0 then 0 else coalesce((select HighPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerHigh, Case PctSprinkler when 0 then 0 else coalesce((select MedPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerMed, Case PctSprinkler when 0 then 0 else coalesce((select LowPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerLow, Currency, StrUserData1, StrUserData2, StrUserData3, UserGeoData1, coalesce(Cond1, '''') PolCondName1, coalesce(Cond2, '''') PolCondName2, coalesce(Cond3, '''') PolCondName3, coalesce(Cond4, '''') PolCondName4, coalesce(Cond5, '''') PolCondName5, coalesce(Cond6, '''') PolCondName6, coalesce(Cond7, '''') PolCondName7, coalesce(Cond8, '''') PolCondName8, coalesce(Cond9, '''') PolCondName9, coalesce(Cond10, '''') PolCondName10, coalesce(Cond11, '''') PolCondName11, coalesce(Cond12, '''') PolCondName12, coalesce(Cond13, '''') PolCondName13, coalesce(Cond14, '''') PolCondName14, coalesce(Cond15, '''') PolCondName15, coalesce(Cond16, '''') PolCondName16, coalesce(Cond17, '''') PolCondName17, coalesce(Cond18, '''') PolCondName18, coalesce(Cond19, '''') PolCondName19, coalesce(Cond20, '''') PolCondName20, coalesce(Cond21, '''') PolCondName21, coalesce(Cond22, '''') PolCondName22, coalesce(Cond23, '''') PolCondName23, coalesce(Cond24, '''') PolCondName24, coalesce(Cond25, '''') PolCondName25, coalesce(Cond26, '''') PolCondName26, coalesce(Cond27, '''') PolCondName27, coalesce(Cond28, '''') PolCondName28, coalesce(Cond29, '''') PolCondName29, coalesce(Cond30, '''') PolCondName30 into @finalTableName from #Location lc left outer join #LocCondList lcl on lc.StructureNumber=lcl.locid order by 1, 2; drop table #SprinklerData; drop table #LocCondList; drop table #Location;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location Coverage View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, LocPeril, LocCoverage, DamageFactor, LocValue</Headers><Categories>StructureCoverages</Categories><ConversionQuery><![CDATA[select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, Case PERIL when 1 then ''@perilMap1'' when 2 then ''@perilMap2'' when 3 then ''@perilMap3'' when 4 then ''@perilMap4'' end LocPeril , Case LABELID when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''Bldg'' when 5 then ''Cont'' when 6 then ''Time'' when 7 then ''Bldg'' when 8 then ''Cont'' when 9 then ''Time'' when 10 then ''Bldg'' when 11 then ''Cont'' when 12 then ''Time'' when 14 then ''Bldg'' when 15 then ''Cont'' when 16 then ''Time'' when 20 then ''Bldg'' when 21 then ''Cont'' when 22 then ''Time'' when 24 then ''CovA'' when 25 then ''CovB'' when 26 then ''CovC'' when 27 then ''CovD'' when 28 then ''CovA'' when 29 then ''CovB'' when 30 then ''CovC'' when 31 then ''CovD'' when 32 then ''CovA'' when 33 then ''CovB'' when 34 then ''CovC'' when 35 then ''CovD'' when 36 then ''CovA'' when 37 then ''CovB'' when 38 then ''CovC'' when 39 then ''CovD'' when 40 then ''CovA'' when 41 then ''CovB'' when 42 then ''CovC'' when 43 then ''CovD'' when 44 then ''CovA'' when 45 then ''CovB'' when 46 then ''CovC'' when 47 then ''CovD'' end LocCoverage, rank() over (partition by loccvg.locid, labelid order by loccvgid) Rank, Case COVGMOD when 1 then 1.5 when 2 then 1.25 when 3 then 1.0 when 4 then 0.5 else 1 end DamageFactor, VALUEAMT LocValue into #LocCoverage from loccvg inner join loc on loc.LOCID=loccvg.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where VALUEAMT <> 0 and PERIL in ( 1,2,3,4 ) and LABELID < 48 and loccvg.LOCID in ( select distinct LOCID from loc ) select AccNumber, SiteNumber, StructureNumber, LocPeril, case Rank when 1 then LocCoverage else LocCoverage + CAST(Rank as CHAR) end LocCoverage, DamageFactor, LocValue into @finalTableName from #LocCoverage where LocPeril <> ''NA'' order by 1, 2; drop table #LocCoverage;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Site Condition View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, LocPeril, LocCoverage, LocCondType, LocCondPriority, LocLimit, LocDed, IsSite</Headers><Categories>SiteConditions</Categories><ConversionQuery><![CDATA[select LOCID LocID, Case when LOCID in (select distinct PRIMARYLOCID from loc where PRIMARYBLDG=0) then 1 else 0 end IsSite into #SITELIST from loc select LOCCVGID, Case PERIL when 1 then ''EXXX'' when 2 then ''WIXX'' when 3 then ''STTH'' when 4 then ''FLXX'' end Peril, Case LABELID when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''Bldg'' when 5 then ''Cont'' when 6 then ''Time'' when 7 then ''Bldg'' when 8 then ''Cont'' when 9 then ''Time'' when 10 then ''Bldg'' when 11 then ''Cont'' when 12 then ''Time'' when 14 then ''Bldg'' when 15 then ''Cont'' when 16 then ''Time'' when 20 then ''Bldg'' when 21 then ''Cont'' when 22 then ''Time'' when 24 then ''CovA'' when 25 then ''CovB'' when 26 then ''CovC'' when 27 then ''CovD'' when 28 then ''CovA'' when 29 then ''CovB'' when 30 then ''CovC'' when 31 then ''CovD'' when 32 then ''CovA'' when 33 then ''CovB'' when 34 then ''CovC'' when 35 then ''CovD'' when 36 then ''CovA'' when 37 then ''CovB'' when 38 then ''CovC'' when 39 then ''CovD'' when 40 then ''CovA'' when 41 then ''CovB'' when 42 then ''CovC'' when 43 then ''CovD'' when 44 then ''CovA'' when 45 then ''CovB'' when 46 then ''CovC'' when 47 then ''CovD'' end Coverage, IsSite into #LPC from loccvg inner join #SITELIST on #SITELIST.LocID=loccvg.LOCID where PERIL in ( 1,2,3,4 ) and LABELID<48 and ( LIMITAMT>0 or DEDUCTAMT>0 or WAITINGPERIOD>0 ) and loccvg.LOCID in ( select distinct LOCID from loc ) select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, #LPC.Peril LocPeril, #LPC.Coverage LocCoverage, rank() over (partition by loccvg.locid, labelid order by loccvg.loccvgid) Rank, Case CNTLOSSTRG when 0 then ''Standard'' else case loccvg.Peril when 1 then ''CEA'' else ''Standard'' end end LocCondType, 2 LocCondPriority, LIMITAMT LocLimit, Case when WAITINGPERIOD=0 then DEDUCTAMT else -WAITINGPERIOD end LocDed, IsSite into #LocCondition from loccvg inner join #LPC on #LPC.Loccvgid=loccvg.LOCCVGID inner join loc on loc.LOCID=loccvg.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''EQXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from eqdet inner join loccvg on loccvg.LOCID=eqdet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=eqdet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''WXXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from hudet inner join loccvg on loccvg.LOCID=hudet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=hudet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''STTH'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from todet inner join loccvg on loccvg.LOCID=todet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=todet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''FLXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from fldet inner join loccvg on loccvg.LOCID=fldet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=fldet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''EQXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from eqdet inner join loc on loc.LOCID=eqdet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''WXXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from hudet inner join loc on loc.LOCID=hudet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''STTH'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from todet inner join loc on loc.LOCID=todet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''FLXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from fldet inner join loc on loc.LOCID=fldet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) select AccNumber, SiteNumber, StructureNumber, LocPeril, case Rank when 1 then LocCoverage else LocCoverage + CAST(Rank as CHAR) end LocCoverage, LocCondType, LocCondPriority, LocLimit, LocDed, IsSite into @finalTableName from #LocCondition where LocPeril <> ''NA'' order by 1, 2; drop table #LocCondition; drop table #LPC; drop table #SITELIST;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Reinsurance View</ViewName><Headers>AccNumber, PolNumber, SiteNumber, ReinsType, AppliesTo, LayerNumber, Currency, Peril, Coverage, LayerAmount, Attachment, CededPct, Reinsurer, TreatyName, FacCertificate</Headers><Categories>Reinsurance</Categories><ConversionQuery><![CDATA[select case EXPOSRTYPE when ''LOC'' then (select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) from accgrp where accgrpid = (select ACCGRPID from loc where LOCID=EXPOSUREID)) else ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) from accgrp where accgrpid = ( select ACCGRPID from policy where policyid=EXPOSUREID ) ) end AccNumber, case EXPOSRTYPE when ''LOC'' then case REINSTYPE when ''F'' then coalesce(cast((select top 1 POLICYID from policy where policy.ACCGRPID=(select ACCGRPID from loc where LOCID=EXPOSUREID) order by UNDCOVAMT) as char),'''') else '''' end else cast(EXPOSUREID as char) end PolNumber, case EXPOSRTYPE when ''LOC'' then cast(EXPOSUREID as char) else '''' end SiteNumber, REINSTYPE ReinsType, case EXPOSRTYPE when ''LOC'' then ''S'' else ''P'' end AppliesTo, LAYERNUM LayerNumber, LAYERCUR Currency, ''ALLP'' Peril, ''AllCov'' Coverage, LAYERAMT LayerAmount, EXCESSAMT Attachment, PCNTREINS CededPct, REINSNAME Reinsurer, case REINSTYPE when ''T'' then case TRTYINFOID when 0 then ''Unspecified'' else coalesce((select TREATYNAME from trtydesc where trtydesc.TREATYID=reinsinf.TRTYINFOID),REINSNAME,''Unspecified'') end else '''' end TreatyName, case REINSTYPE when ''F'' then rtrim(cast(EXPOSUREID as char))+''-''+rtrim(cast(LAYERNUM as char))+''-''+rtrim(cast(REINSINFID as char)) else '''' end FacCertificate into #Reinsurance from reinsinf where REINSTYPE in ( ''F'',''T'' ) and EXPOSRTYPE in ( ''LOC'',''POL'' ) select * into @finalTableName from #Reinsurance where AccNumber is not null order by 1; drop table #Reinsurance;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Secondary Structure</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, EFeatureCode, EFeatureValue, WFeatureCode, WFeatureValue, </Headers><Categories>SecondaryStructures</Categories><ConversionQuery><![CDATA[with dataEQ (AccNumber, SiteNumber, StructureNumber, Country, CLADDING, CONQUAL, FRAMEBOLT, MECHELEC, ORNAMENT, OVERPROF, POUNDING, SHAPECONF, STORYPROF, URMPROV, WALLSBRACD) as ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, loc.COUNTRY, CLADDING, CONQUAL, FRAMEBOLT, MECHELEC, ORNAMENT, OVERPROF, POUNDING, SHAPECONF, STORYPROF, URMPROV, WALLSBRACD from eqdet inner join loc on loc.LOCID=eqdet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where COUNTRY in (''US'',''CA'') and eqdet.LOCID in (select distinct LOCID from loc) ) select AccNumber, SiteNumber, StructureNumber, ''E_PRE_CON'' EFeatureCode, case CLADDING when 1 then 2 when 2 then 1 when 3 then 1 else 0 end EFeatureValue into #SecondaryFeatureEQ from dataEQ where CLADDING>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_STR_CONDN'', case CONQUAL when 1 then 2 when 2 then 3 when 3 then 4 when 4 then 1 else 0 end from dataEQ where CONQUAL>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_FND_ANCHOR'', case FRAMEBOLT when 1 then 1 when 2 then 3 else 0 end from dataEQ where FRAMEBOLT>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_MECH_EQT'', case MECHELEC when 1 then 1 when 2 then 2 when 3 then 3 else 0 end from dataEQ where MECHELEC>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_HVY_AR_ELE'', case ORNAMENT when 1 then 1 when 2 then 2 when 3 then 2 else 0 end from dataEQ where ORNAMENT>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_VERT_SETBK'', case OVERPROF when 1 then 2 when 2 then 1 else 0 end from dataEQ where OVERPROF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_POUNDING'', case POUNDING when 1 then 4 when 2 then 1 else 0 end from dataEQ where POUNDING>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_BLDG_P_LAY'', case SHAPECONF when 1 then 1 when 2 then 3 else 0 end from dataEQ where SHAPECONF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_SOFT_STORY'', case STORYPROF when 1 then 3 when 2 then 1 else 0 end from dataEQ where STORYPROF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_URM_RETR'', case URMPROV when 1 then 2 when 2 then 1 else 0 end from dataEQ where URMPROV>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_CRIP_WALL'', case WALLSBRACD when 1 then 3 when 2 then 2 when 3 then 1 else 0 end from dataEQ where WALLSBRACD>0; with dataHU (AccNumber, SiteNumber, StructureNumber, Country, CLADSYS, FOUNDSYS,RESISTDOOR, ROOFANCH, ROOFGEOM, ROOFPARAPT, ROOFSYS) as ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, loc.COUNTRY, CLADSYS, FOUNDSYS, RESISTDOOR, ROOFANCH, ROOFGEOM, ROOFPARAPT, ROOFSYS from hudet inner join loc on loc.LOCID=hudet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where COUNTRY in (''US'',''CA'') and hudet.LOCID in (select distinct LOCID from loc) ) select AccNumber, SiteNumber, StructureNumber, ''W_WL_CLAD'' WFeatureCode, case CLADSYS when 1 then 1 when 2 then 3 when 3 then 6 when 4 then 4 when 5 then 5 when 6 then 2 when 7 then 5 when 8 then 1 else 0 end WFeatureValue into #SecondaryFeatureHU from dataHU where CLADSYS>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_FND_ANCH'', case FOUNDSYS when 1 then 5 when 2 then 4 when 3 then 1 when 4 then 1 else 0 end from dataHU where FOUNDSYS>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_DOOR_REIN'', case RESISTDOOR when 1 then 4 when 2 then 2 when 3 then 1 else 0 end from dataHU where RESISTDOOR>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF2WALL'', case ROOFANCH when 1 then 3 when 2 then 4 when 3 then 1 when 4 then 3 when 5 then 5 else 0 end from dataHU where ROOFANCH>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF_PROF'', case ROOFGEOM when 1 then 4 when 2 then 5 when 3 then 4 when 4 then 1 when 5 then 4 when 6 then 4 when 7 then 1 when 8 then 2 when 9 then 2 else 0 end from dataHU where ROOFGEOM>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_PARA'', case ROOFPARAPT when 1 then 2 else 0 end from dataHU where ROOFPARAPT>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF_MAT'', case ROOFSYS when 1 then 4 when 2 then 8 when 3 then 7 when 4 then 3 when 5 then 1 when 6 then 10 when 7 then 9 when 8 then 2 when 9 then 2 else 0 end from dataHU where ROOFSYS>0; select AccNumber, SiteNumber, StructureNumber, EFeatureCode, EFeatureValue, '''' WFeatureCode, '''' WFeatureValue into @finalTableName from #SecondaryFeatureEQ union all select AccNumber, SiteNumber, StructureNumber, '''', '''', WFeatureCode, WFeatureValue from #SecondaryFeatureHU order by 1, 2; drop table #SecondaryFeatureEQ; drop table #SecondaryFeatureHU;]]></ConversionQuery></ConversionQueryInfo></ConversionQueries></DataExtractionTemplate>' where TemplateName = 'Standard Database Extraction Template - Including IsValid=0';
		Update TemplateInfo set TemplateVersion = '2014.002', CreateDate = '20141124090000', ModifyDate = '20141124090000', TemplateXml = '<?xml version="1.0"?><DataExtractionTemplate><Filters><FilterInfo><FilterLabel>@portname</FilterLabel><Query><![CDATA[     select  replace(portname, char(13) + char(10), '''') from portinfo    ]]></Query><FilterVariable>@portname</FilterVariable></FilterInfo><FilterInfo><FilterLabel>@countryList</FilterLabel><Query><![CDATA[    select distinct case when country = ''CB'' then ''CB-'' + rtrim(STATECODE) else rtrim(COUNTRY) end   from loc inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where loc.ISVALID = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portName''   ]]></Query><FilterVariable>@countryList</FilterVariable></FilterInfo></Filters><ExtractionQueries><ExtractionQueryInfo><TableName>RMSVer</TableName><ExtractionQuery><![CDATA[select * from RMSVer]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>locconditions</TableName><ExtractionQuery><![CDATA[select * from locconditions]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>LOBDET</TableName><ExtractionQuery><![CDATA[select * from LOBDET]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>loc</TableName><ExtractionQuery><![CDATA[select loc.* from loc inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where loc.ISVALID = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' @countryList]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>loccvg</TableName><ExtractionQuery><![CDATA[select loccvg.* from loccvg inner join loc on loc.LOCID = loccvg.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where loccvg.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' and Peril in ( @perilList )]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>eqdet</TableName><ExtractionQuery><![CDATA[select eqdet.* from eqdet inner join loc on loc.LOCID = eqdet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where eqdet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>hudet</TableName><ExtractionQuery><![CDATA[select hudet.* from hudet inner join loc on loc.LOCID = hudet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where hudet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>todet</TableName><ExtractionQuery><![CDATA[select todet.* from todet inner join loc on loc.LOCID = todet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where todet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>policyconditions</TableName><ExtractionQuery><![CDATA[select distinct policyconditions.* from policyconditions inner join policy on policy.POLICYID = policyconditions.POLICYID and PolicyType in ( @perilList ) inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>polcvg</TableName><ExtractionQuery><![CDATA[select distinct polcvg.* from polcvg inner join policy on policy.POLICYID = polcvg.POLICYID and PolicyType in ( @perilList ) inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where polcvg.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Policy</TableName><ExtractionQuery><![CDATA[select distinct Policy.* from Policy inner join portacct on policy.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where policy.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' and PolicyType in ( @perilList )]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>accgrp</TableName><ExtractionQuery><![CDATA[select distinct accgrp.* from accgrp inner join portacct on accgrp.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID @innerJoinLoc where accgrp.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>TrtyDesc</TableName><ExtractionQuery><![CDATA[select * from trtydesc where trtydesc.isvalid = 1]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>ReinsInf</TableName><ExtractionQuery><![CDATA[select REINSINFID, EXPOSUREID, EXPOSRTYPE, PRIORITY, LAYERNUM, PCNTREINS, LAYERAMT, LAYERCUR, EXCESSAMT, EXCESSCUR, REINSNAME, REINSTYPE, reinsinf.ISVALID, FACDETID, TRTYINFOID, MAOLAMT from reinsinf inner join policy on policy.POLICYID = reinsinf.EXPOSUREID and EXPOSRTYPE = ''POL'' inner join portacct on portacct.ACCGRPID = policy.ACCGRPID inner join portinfo on portinfo.PORTINFOID = portacct.PORTINFOID @innerJoinLoc where replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'' union select REINSINFID, EXPOSUREID, EXPOSRTYPE, PRIORITY, LAYERNUM, PCNTREINS, LAYERAMT, LAYERCUR, EXCESSAMT, EXCESSCUR, REINSNAME, REINSTYPE, reinsinf.ISVALID, FACDETID, TRTYINFOID, MAOLAMT from reinsinf inner join loc on loc.LOCID = reinsinf.EXPOSUREID and EXPOSRTYPE = ''LOC'' @countryList inner join portacct on portacct.ACCGRPID = loc.ACCGRPID inner join portinfo on portinfo.PORTINFOID = portacct.PORTINFOID where reinsinf.isvalid =1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Cedants</TableName><ExtractionQuery><![CDATA[select * from cedants]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>Prdcers</TableName><ExtractionQuery><![CDATA[select * from prdcers]]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>fldet</TableName><ExtractionQuery><![CDATA[select fldet.* from fldet inner join loc on loc.LOCID = fldet.LOCID @countryList inner join portacct on loc.ACCGRPID = portacct.ACCGRPID inner join portinfo on portacct.PORTINFOID = portinfo.PORTINFOID where fldet.isvalid = 1 and replace(portinfo.portname, char(13) + char(10), '''') = ''@portname'']]></ExtractionQuery></ExtractionQueryInfo><ExtractionQueryInfo><TableName>CreateIndex</TableName><ExtractionQuery><![CDATA[CREATE NONCLUSTERED INDEX [loccvg_I1] ON [Schema_Name].[loccvg]( [PERIL], [LOSSTYPE], [VALUEAMT], [PCTSPRNKLR]) INCLUDE ([LOCID], [EQSLGRADE]); CREATE NONCLUSTERED INDEX [loccvg_I2] ON [Schema_Name].[loccvg] ([PERIL], [VALUEAMT], [LABELID]) INCLUDE ([LOCCVGID], [LOCID], [COVGMOD]);CREATE NONCLUSTERED INDEX [loc_I1] ON [Schema_Name].[LOC] ([LOCID]);]]></ExtractionQuery></ExtractionQueryInfo></ExtractionQueries><ConversionQueries><ConversionQueryInfo><ViewName>Account View</ViewName><Headers>AccNumber, AccName, Insured, Producer, Branch, AccUserData1, AccUserData2, AccUserData3, AccUserData4</Headers><Categories>Accounts</Categories><ConversionQuery><![CDATA[select ACCGRPNUM+'' - ''+cast(ACCGRPID as varchar) AccNumber, ACCGRPNAME AccName, case CEDANTID when '''' then '''' else (select NAME from cedants where cedants.ID=CEDANTID) end Insured, case PRDCERID when '''' then '''' else (select NAME from prdcers where prdcers.ID=PRDCERID) end Producer, BRANCHNAME Branch, USERID1 AccUserData1, USERID2 AccUserData2, USERID3 AccUserData3, USERID4 AccUserData4 into #Account from accgrp select * into @finalTableName from #Account order by 1; drop table #Account;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy View</ViewName><Headers>AccNumber, PolNumber, PolName, PolStatus, LineOfBusiness, InceptionDate, ExpirationDate, PolCurrency, PolUnderCover, PolProrata, PolPremium, PolUserData1, PolUserData2, PolUserData3</Headers><Categories>Policies</Categories><ConversionQuery><![CDATA[select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, POLICYID PolNumber, POLICYNUM + ''-'' + rtrim(cast(POLICYTYPE as CHAR)) PolName, Case POLICYSTAT when ''BOOK'' then ''Bound'' when ''CNCL'' then ''Cancelled'' when ''EXPD'' then ''Expired'' when ''PEND'' then ''Pending'' when ''QUOT'' then ''Quoted'' else '''' end PolStatus, case LOBDETID when 0 then '''' else (select LOBNAME from LOBDET where LOBDET.LOBDETID=policy.LOBDETID) end LineOfBusiness, CONVERT(CHAR(8), INCEPTDATE, 112) InceptionDate, CONVERT(CHAR(8), EXPIREDATE, 112) ExpirationDate, Case when UNDCOVAMT>0 then UNDCOVCUR when PARTOF>1 then PARTOFCUR when BLANLIMAMT>0 then BLANLIMCUR when BLANDEDAMT>0 then BLANDEDCUR when MINDEDAMT>0 then MINDEDCUR when MAXDEDAMT>0 then MAXDEDCUR else PARTOFCUR end PolCurrency, UNDCOVAMT PolUnderCover, Case when BLANLIMAMT>1 then Case when PARTOF>1 then Case when BLANLIMAMT>PARTOF then 100 else BLANLIMAMT/PARTOF*100 end when PARTOF>0 then PARTOF*100 else 100 end when BLANLIMAMT>0 then BLANLIMAMT*100 else Case when PARTOF>1 then 100 when PARTOF>0 then PARTOF*100 else 100 end end PolProrata, BLANPREAMT PolPremium, '''' PolUserData1, '''' PolUserData2, '''' PolUserData3 into #Policy from policy inner join accgrp on accgrp.ACCGRPID=policy.ACCGRPID where POLICYTYPE<5 select * into @finalTableName from #Policy order by 1, 2; drop table #Policy;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Policy Condition View</ViewName><Headers>AccNumber, PolNumber, PolPeril, PolCoverage, PolLimit, PolDed, PolMinDed, PolMaxDed, PolCondName, PolCondPriority</Headers><Categories>PolicyConditions</Categories><ConversionQuery><![CDATA[select POLICYID, ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, POLICYID PolNumber, case POLICYTYPE when 1 then ''EXXX'' when 2 then ''WIXX'' when 3 then ''STTH'' when 4 then ''FLXX'' end PolPeril , BLANLIMAMT, BLANDEDAMT, PARTOF, MINDEDAMT, MAXDEDAMT, case when POLICYID in (select POLICYID from policyconditions where CONDITIONTYPE=1) then (select max(cast(policyid as VARCHAR) + ''-'' + CONDITIONNAME) from policyconditions pc where pc.POLICYID=policy.POLICYID) else '''' end RestrictionName into #PolData from policy inner join accgrp on accgrp.ACCGRPID=policy.ACCGRPID where POLICYTYPE in ( @perilList ) ;with pcp (ID, CondName, [Priority]) as ( select conditionID, cast(policyid as VARCHAR) + ''-'' + conditionname, 3 from policyconditions where ParentconditionID=0 and conditiontype=2 union all select pc.conditionID, cast(pc.policyid as VARCHAR) + ''-'' + pc.conditionname, pcp.[Priority]+1 from policyconditions pc inner join pcp on pc.ParentconditionID=pcp.ID ) select CONDITIONID, POLICYID, LIMIT, DEDUCTIBLE, CondName, Priority into #PolCond from policyconditions inner join pcp on policyconditions.CONDITIONID=pcp.ID select AccNumber, PolNumber, PolPeril , Case LOSSTYPE when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''AllProp'' end PolCoverage, LIMITAMT PolLimit, DEDUCTAMT PolDed, ''0'' PolMinDed, ''0'' PolMaxDed, RestrictionName PolCondName, Case LOSSTYPE when 4 then 1 else 2 end PolCondPriority, 0 ConditionID into #PolicyCondition from polcvg inner join #PolData on polcvg.POLICYID=#PolData.POLICYID where ( limitamt>0 or deductamt>0 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT=0 or ( PARTOF=0 and BLANLIMAMT>1 ) ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT/PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>1 and PARTOF<=1 and PARTOF>0 ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, '''', 0, 0 from #PolData where ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>0 and ( PARTOF>1 or BLANLIMAMT<=1 ) ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT=0 or ( PARTOF=0 and BLANLIMAMT>1 ) ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', BLANLIMAMT/PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>1 and PARTOF<=1 and PARTOF>0 ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', PARTOF, BLANDEDAMT, MINDEDAMT, MAXDEDAMT, RestrictionName, 0, ConditionID from #PolData inner join policyconditions on #PolData.POLICYID=policyconditions.POLICYID where conditiontype=1 and ( PARTOF>0 or BLANLIMAMT>0 or BLANDEDAMT>0 or MINDEDAMT>0 or MAXDEDAMT>0 ) and ( BLANLIMAMT>0 and ( PARTOF>1 or BLANLIMAMT<=1 ) ) union all select AccNumber, PolNumber, PolPeril, ''AllCov'', LIMIT, DEDUCTIBLE, ''0'', ''0'', CondName, Priority, ConditionID from #PolData inner join #PolCond on #PolData.POLICYID=#PolCond.POLICYID union all select AccNumber, PolNumber, PolPeril, ''AllCov'', ''1'', ''0'', ''0'', ''0'', '''', 0, 0 from #PolData where ( BLANLIMAMT=0 and BLANDEDAMT=0 and MINDEDAMT=0 and MAXDEDAMT=0 ) and POLICYID not in ( select policyid from policyconditions where CONDITIONTYPE=1 ) and POLICYID not in ( select policyid from polcvg ) select AccNumber, PolNumber, PolPeril , PolCoverage, case PolLimit when 0 then 1 else PolLimit end PolLimit, PolDed, PolMinDed, PolMaxDed, PolCondName, PolCondPriority into @finalTableName from #PolicyCondition where PolPeril <> ''NA'' order by 1, 2; drop table #PolicyCondition; drop table #PolCond; drop table #PolData;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location View</ViewName><Headers>AccNumber, SiteNumber, SiteName, StructureNumber, StructureName, Country, StreetAddress, Postcode, City, AdminLevel2, AdminLevel1, Cresta, SubCresta, UserGeoData3, Latitude, Longitude, StructureCode, OccupancyCode, YearBuilt, NumBuildings, NumStories, PctSprinkler, PctSprinklerHigh, PctSprinklerMed, PctSprinklerLow, Currency, StrUserData1, StrUserData2, StrUserData3, UserGeoData1, PolCondName1, PolCondName2, PolCondName3, PolCondName4, PolCondName5, PolCondName6, PolCondName7, PolCondName8, PolCondName9, PolCondName10, PolCondName11, PolCondName12, PolCondName13, PolCondName14, PolCondName15, PolCondName16, PolCondName17, PolCondName18, PolCondName19, PolCondName20, PolCondName21, PolCondName22, PolCondName23, PolCondName24, PolCondName25, PolCondName26, PolCondName27, PolCondName28, PolCondName29, PolCondName30</Headers><Categories>Sites, Structures</Categories><ConversionQuery><![CDATA[select LocID, MAX(cond1) Cond1, MAX(cond2) Cond2, MAX(cond3) Cond3, MAX(cond4) Cond4, MAX(cond5) Cond5, MAX(cond6) Cond6, MAX(cond7) Cond7, MAX(cond8) Cond8, MAX(cond9) Cond9, MAX(cond10) Cond10, MAX(cond11) Cond11, MAX(cond12) Cond12, MAX(cond13) Cond13, MAX(cond14) Cond14, MAX(cond15) Cond15, MAX(cond16) Cond16, MAX(cond17) Cond17, MAX(cond18) Cond18, MAX(cond19) Cond19, MAX(cond20) Cond20, MAX(cond21) Cond21, MAX(cond22) Cond22, MAX(cond23) Cond23, MAX(cond24) Cond24, MAX(cond25) Cond25, MAX(cond26) Cond26, MAX(cond27) Cond27, MAX(cond28) Cond28, MAX(cond29) Cond29, MAX(cond30) Cond30 into #LocCondList from ( select LocID, coalesce([1], '''') Cond1, coalesce([2], '''') Cond2, coalesce([3], '''') Cond3, coalesce([4], '''') Cond4, coalesce([5], '''') Cond5, coalesce([6], '''') Cond6, coalesce([7], '''') Cond7, coalesce([8], '''') Cond8, coalesce([9], '''') Cond9, coalesce([10], '''') Cond10, coalesce([11], '''') Cond11, coalesce([12], '''') Cond12, coalesce([13], '''') Cond13, coalesce([14], '''') Cond14, coalesce([15], '''') Cond15, coalesce([16], '''') Cond16, coalesce([17], '''') Cond17, coalesce([18], '''') Cond18, coalesce([19], '''') Cond19, coalesce([20], '''') Cond20, coalesce([21], '''') Cond21, coalesce([22], '''') Cond22, coalesce([23], '''') Cond23, coalesce([24], '''') Cond24, coalesce([25], '''') Cond25, coalesce([26], '''') Cond26, coalesce([27], '''') Cond27, coalesce([28], '''') Cond28, coalesce([29], '''') Cond29, coalesce([30], '''') Cond30 from ( select LocID, row_number() over (partition by locid order by locconditions.conditionid) Ord, cast(policyid as VARCHAR) + ''-'' + conditionname ConditionName from locconditions inner join policyconditions on locconditions.CONDITIONID=policyconditions.CONDITIONID where included>0 ) Data pivot (max(conditionname) for Ord in ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30]) ) Piv ) Z group by LOCID select LOCID, LocPct, [1] LowPct, [2] MedPct, [3] HighPct into #SprinklerData from ( select LOCID, LMH, max(LocPct) LocPct, sum(GradePct) GradePct from ( select LOCID, case EQSLGRADE when 0 then 2 when 1 then 1 when 2 then 2 else 3 end LMH, sum(PCTSPRNKLR*VALUEAMT) over (partition by LOCID)/sum(VALUEAMT) over (partition by LOCID) * 100. LocPct, PCTSPRNKLR*VALUEAMT/sum(PCTSPRNKLR*VALUEAMT) over (partition by LOCID) * 100. GradePct from loccvg where PERIL=1 and LOSSTYPE=2 and PCTSPRNKLR>0 and VALUEAMT>0 ) Data group by LOCID, LMH) Grouped pivot (max(GradePct) for LMH in ([1], [2], [3])) Pivoted select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case PRIMARYBLDG when 1 then LOCNAME else (select LOCNAME from loc L where L.LOCID=loc.PRIMARYLOCID) end SiteName, loc.LOCID StructureNumber, LOCNAME StructureName, case COUNTRY when ''CB'' then STATECODE else COUNTRY end Country, STREETNAME StreetAddress, POSTALCODE Postcode, CITY City, COUNTY AdminLevel2, STATECODE AdminLevel1, CRESTA Cresta, SUBCRESTA SubCresta, ''A='' + rtrim(cast(ADDRMATCH as CHAR)) UserGeoData3, LATITUDE Latitude, LONGITUDE Longitude, BLDGSCHEME + rtrim(cast(BLDGCLASS as CHAR)) StructureCode, OCCSCHEME + rtrim(cast(OCCTYPE as CHAR)) OccupancyCode, YEAR(yearbuilt) YearBuilt, NUMBLDGS NumBuildings, NUMSTORIES NumStories, PCTSPRNKLR PctSprinkler, CURRENCY Currency, loc.USERID1 StrUserData1, loc.USERID2 StrUserData2, loc.USERTXT1 StrUserData3, USERGEO1 UserGeoData1 into #Location from loc inner join ( select locid, max(VALUECUR) CURRENCY, max(pctsprnklr) PCTSPRNKLR from loccvg group by locid union all select LOCID, ''USD'', 0 from loc where locid not in ( select locid from loccvg ) ) lc on loc.LOCID=lc.LOCID inner join accgrp on accgrp.ACCGRPID=Loc.ACCGRPID select AccNumber, SiteNumber, SiteName, StructureNumber, StructureName, Country, StreetAddress, Postcode, City, AdminLevel2, AdminLevel1, Cresta, SubCresta, UserGeoData3, Latitude, Longitude, StructureCode, OccupancyCode, YearBuilt, NumBuildings, NumStories, Case PctSprinkler when 0 then 0 else (select LocPct from #SprinklerData S where s.LOCID=StructureNumber) end PctSprinkler, Case PctSprinkler when 0 then 0 else coalesce((select HighPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerHigh, Case PctSprinkler when 0 then 0 else coalesce((select MedPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerMed, Case PctSprinkler when 0 then 0 else coalesce((select LowPct from #SprinklerData S where s.LOCID=StructureNumber), 0) end PctSprinklerLow, Currency, StrUserData1, StrUserData2, StrUserData3, UserGeoData1, coalesce(Cond1, '''') PolCondName1, coalesce(Cond2, '''') PolCondName2, coalesce(Cond3, '''') PolCondName3, coalesce(Cond4, '''') PolCondName4, coalesce(Cond5, '''') PolCondName5, coalesce(Cond6, '''') PolCondName6, coalesce(Cond7, '''') PolCondName7, coalesce(Cond8, '''') PolCondName8, coalesce(Cond9, '''') PolCondName9, coalesce(Cond10, '''') PolCondName10, coalesce(Cond11, '''') PolCondName11, coalesce(Cond12, '''') PolCondName12, coalesce(Cond13, '''') PolCondName13, coalesce(Cond14, '''') PolCondName14, coalesce(Cond15, '''') PolCondName15, coalesce(Cond16, '''') PolCondName16, coalesce(Cond17, '''') PolCondName17, coalesce(Cond18, '''') PolCondName18, coalesce(Cond19, '''') PolCondName19, coalesce(Cond20, '''') PolCondName20, coalesce(Cond21, '''') PolCondName21, coalesce(Cond22, '''') PolCondName22, coalesce(Cond23, '''') PolCondName23, coalesce(Cond24, '''') PolCondName24, coalesce(Cond25, '''') PolCondName25, coalesce(Cond26, '''') PolCondName26, coalesce(Cond27, '''') PolCondName27, coalesce(Cond28, '''') PolCondName28, coalesce(Cond29, '''') PolCondName29, coalesce(Cond30, '''') PolCondName30 into @finalTableName from #Location lc left outer join #LocCondList lcl on lc.StructureNumber=lcl.locid order by 1, 2; drop table #SprinklerData; drop table #LocCondList; drop table #Location;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Location Coverage View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, LocPeril, LocCoverage, DamageFactor, LocValue</Headers><Categories>StructureCoverages</Categories><ConversionQuery><![CDATA[select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, Case PERIL when 1 then ''@perilMap1'' when 2 then ''@perilMap2'' when 3 then ''@perilMap3'' when 4 then ''@perilMap4'' end LocPeril , Case LABELID when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''Bldg'' when 5 then ''Cont'' when 6 then ''Time'' when 7 then ''Bldg'' when 8 then ''Cont'' when 9 then ''Time'' when 10 then ''Bldg'' when 11 then ''Cont'' when 12 then ''Time'' when 14 then ''Bldg'' when 15 then ''Cont'' when 16 then ''Time'' when 20 then ''Bldg'' when 21 then ''Cont'' when 22 then ''Time'' when 24 then ''CovA'' when 25 then ''CovB'' when 26 then ''CovC'' when 27 then ''CovD'' when 28 then ''CovA'' when 29 then ''CovB'' when 30 then ''CovC'' when 31 then ''CovD'' when 32 then ''CovA'' when 33 then ''CovB'' when 34 then ''CovC'' when 35 then ''CovD'' when 36 then ''CovA'' when 37 then ''CovB'' when 38 then ''CovC'' when 39 then ''CovD'' when 40 then ''CovA'' when 41 then ''CovB'' when 42 then ''CovC'' when 43 then ''CovD'' when 44 then ''CovA'' when 45 then ''CovB'' when 46 then ''CovC'' when 47 then ''CovD'' end LocCoverage, rank() over (partition by loccvg.locid, labelid order by loccvgid) Rank, Case COVGMOD when 1 then 1.5 when 2 then 1.25 when 3 then 1.0 when 4 then 0.5 else 1 end DamageFactor, VALUEAMT LocValue into #LocCoverage from loccvg inner join loc on loc.LOCID=loccvg.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where VALUEAMT <> 0 and PERIL in ( 1,2,3,4 ) and LABELID < 48 and loccvg.LOCID in ( select distinct LOCID from loc ) select AccNumber, SiteNumber, StructureNumber, LocPeril, case Rank when 1 then LocCoverage else LocCoverage + CAST(Rank as CHAR) end LocCoverage, DamageFactor, LocValue into @finalTableName from #LocCoverage where LocPeril <> ''NA'' order by 1, 2; drop table #LocCoverage;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Site Condition View</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, LocPeril, LocCoverage, LocCondType, LocCondPriority, LocLimit, LocDed, IsSite</Headers><Categories>SiteConditions</Categories><ConversionQuery><![CDATA[select LOCID LocID, Case when LOCID in (select distinct PRIMARYLOCID from loc where PRIMARYBLDG=0) then 1 else 0 end IsSite into #SITELIST from loc select LOCCVGID, Case PERIL when 1 then ''EXXX'' when 2 then ''WIXX'' when 3 then ''STTH'' when 4 then ''FLXX'' end Peril, Case LABELID when 1 then ''Bldg'' when 2 then ''Cont'' when 3 then ''Time'' when 4 then ''Bldg'' when 5 then ''Cont'' when 6 then ''Time'' when 7 then ''Bldg'' when 8 then ''Cont'' when 9 then ''Time'' when 10 then ''Bldg'' when 11 then ''Cont'' when 12 then ''Time'' when 14 then ''Bldg'' when 15 then ''Cont'' when 16 then ''Time'' when 20 then ''Bldg'' when 21 then ''Cont'' when 22 then ''Time'' when 24 then ''CovA'' when 25 then ''CovB'' when 26 then ''CovC'' when 27 then ''CovD'' when 28 then ''CovA'' when 29 then ''CovB'' when 30 then ''CovC'' when 31 then ''CovD'' when 32 then ''CovA'' when 33 then ''CovB'' when 34 then ''CovC'' when 35 then ''CovD'' when 36 then ''CovA'' when 37 then ''CovB'' when 38 then ''CovC'' when 39 then ''CovD'' when 40 then ''CovA'' when 41 then ''CovB'' when 42 then ''CovC'' when 43 then ''CovD'' when 44 then ''CovA'' when 45 then ''CovB'' when 46 then ''CovC'' when 47 then ''CovD'' end Coverage, IsSite into #LPC from loccvg inner join #SITELIST on #SITELIST.LocID=loccvg.LOCID where PERIL in ( 1,2,3,4 ) and LABELID<48 and ( LIMITAMT>0 or DEDUCTAMT>0 or WAITINGPERIOD>0 ) and loccvg.LOCID in ( select distinct LOCID from loc ) select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, #LPC.Peril LocPeril, #LPC.Coverage LocCoverage, rank() over (partition by loccvg.locid, labelid order by loccvg.loccvgid) Rank, Case CNTLOSSTRG when 0 then ''Standard'' else case loccvg.Peril when 1 then ''CEA'' else ''Standard'' end end LocCondType, 2 LocCondPriority, LIMITAMT LocLimit, Case when WAITINGPERIOD=0 then DEDUCTAMT else -WAITINGPERIOD end LocDed, IsSite into #LocCondition from loccvg inner join #LPC on #LPC.Loccvgid=loccvg.LOCCVGID inner join loc on loc.LOCID=loccvg.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''EQXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from eqdet inner join loccvg on loccvg.LOCID=eqdet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=eqdet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''WXXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from hudet inner join loccvg on loccvg.LOCID=hudet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=hudet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''STTH'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from todet inner join loccvg on loccvg.LOCID=todet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=todet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''FLXX'', ''AllProp'', 1, ''Standard'', 1, COMBINEDLIMAMT, COMBINEDDEDAMT, IsSite from fldet inner join loccvg on loccvg.LOCID=fldet.LOCID inner join #SITELIST on #SITELIST.Locid=loccvg.LOCID inner join loc on loc.LOCID=fldet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( COMBINEDLIMAMT > 0 or COMBINEDDEDAMT > 0 ) and LOSSTYPE=4 union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''EQXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from eqdet inner join loc on loc.LOCID=eqdet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''WXXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from hudet inner join loc on loc.LOCID=hudet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''STTH'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from todet inner join loc on loc.LOCID=todet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) union all select accgrp.ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar), case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, case IsSite when 1 then '''' else loc.LOCID end StructureNumber, ''FLXX'', ''AllCov'', 1, ''Standard'', 0, SITELIMAMT, SITEDEDAMT, IsSite from fldet inner join loc on loc.LOCID=fldet.LOCID inner join #SITELIST on #SITELIST.Locid=loc.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where ( SITELIMAMT > 0 or SITEDEDAMT > 0 ) select AccNumber, SiteNumber, StructureNumber, LocPeril, case Rank when 1 then LocCoverage else LocCoverage + CAST(Rank as CHAR) end LocCoverage, LocCondType, LocCondPriority, LocLimit, LocDed, IsSite into @finalTableName from #LocCondition where LocPeril <> ''NA'' order by 1, 2; drop table #LocCondition; drop table #LPC; drop table #SITELIST;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Reinsurance View</ViewName><Headers>AccNumber, PolNumber, SiteNumber, ReinsType, AppliesTo, LayerNumber, Currency, Peril, Coverage, LayerAmount, Attachment, CededPct, Reinsurer, TreatyName, FacCertificate</Headers><Categories>Reinsurance</Categories><ConversionQuery><![CDATA[select case EXPOSRTYPE when ''LOC'' then (select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) from accgrp where accgrpid = (select ACCGRPID from loc where LOCID=EXPOSUREID)) else ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) from accgrp where accgrpid = ( select ACCGRPID from policy where policyid=EXPOSUREID ) ) end AccNumber, case EXPOSRTYPE when ''LOC'' then case REINSTYPE when ''F'' then coalesce(cast((select top 1 POLICYID from policy where policy.ACCGRPID=(select ACCGRPID from loc where LOCID=EXPOSUREID) order by UNDCOVAMT) as char),'''') else '''' end else cast(EXPOSUREID as char) end PolNumber, case EXPOSRTYPE when ''LOC'' then cast(EXPOSUREID as char) else '''' end SiteNumber, REINSTYPE ReinsType, case EXPOSRTYPE when ''LOC'' then ''S'' else ''P'' end AppliesTo, LAYERNUM LayerNumber, LAYERCUR Currency, ''ALLP'' Peril, ''AllCov'' Coverage, LAYERAMT LayerAmount, EXCESSAMT Attachment, PCNTREINS CededPct, REINSNAME Reinsurer, case REINSTYPE when ''T'' then case TRTYINFOID when 0 then ''Unspecified'' else coalesce((select TREATYNAME from trtydesc where trtydesc.TREATYID=reinsinf.TRTYINFOID),REINSNAME,''Unspecified'') end else '''' end TreatyName, case REINSTYPE when ''F'' then rtrim(cast(EXPOSUREID as char))+''-''+rtrim(cast(LAYERNUM as char))+''-''+rtrim(cast(REINSINFID as char)) else '''' end FacCertificate into #Reinsurance from reinsinf where REINSTYPE in ( ''F'',''T'' ) and EXPOSRTYPE in ( ''LOC'',''POL'' ) select * into @finalTableName from #Reinsurance where AccNumber is not null order by 1; drop table #Reinsurance;]]></ConversionQuery></ConversionQueryInfo><ConversionQueryInfo><ViewName>Secondary Structure</ViewName><Headers>AccNumber, SiteNumber, StructureNumber, EFeatureCode, EFeatureValue, WFeatureCode, WFeatureValue, </Headers><Categories>SecondaryStructures</Categories><ConversionQuery><![CDATA[with dataEQ (AccNumber, SiteNumber, StructureNumber, Country, CLADDING, CONQUAL, FRAMEBOLT, MECHELEC, ORNAMENT, OVERPROF, POUNDING, SHAPECONF, STORYPROF, URMPROV, WALLSBRACD) as ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, loc.COUNTRY, CLADDING, CONQUAL, FRAMEBOLT, MECHELEC, ORNAMENT, OVERPROF, POUNDING, SHAPECONF, STORYPROF, URMPROV, WALLSBRACD from eqdet inner join loc on loc.LOCID=eqdet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where COUNTRY in (''US'',''CA'') and eqdet.LOCID in (select distinct LOCID from loc) ) select AccNumber, SiteNumber, StructureNumber, ''E_PRE_CON'' EFeatureCode, case CLADDING when 1 then 2 when 2 then 1 when 3 then 1 else 0 end EFeatureValue into #SecondaryFeatureEQ from dataEQ where CLADDING>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_STR_CONDN'', case CONQUAL when 1 then 2 when 2 then 3 when 3 then 4 when 4 then 1 else 0 end from dataEQ where CONQUAL>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_FND_ANCHOR'', case FRAMEBOLT when 1 then 1 when 2 then 3 else 0 end from dataEQ where FRAMEBOLT>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_MECH_EQT'', case MECHELEC when 1 then 1 when 2 then 2 when 3 then 3 else 0 end from dataEQ where MECHELEC>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_HVY_AR_ELE'', case ORNAMENT when 1 then 1 when 2 then 2 when 3 then 2 else 0 end from dataEQ where ORNAMENT>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_VERT_SETBK'', case OVERPROF when 1 then 2 when 2 then 1 else 0 end from dataEQ where OVERPROF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_POUNDING'', case POUNDING when 1 then 4 when 2 then 1 else 0 end from dataEQ where POUNDING>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_BLDG_P_LAY'', case SHAPECONF when 1 then 1 when 2 then 3 else 0 end from dataEQ where SHAPECONF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_SOFT_STORY'', case STORYPROF when 1 then 3 when 2 then 1 else 0 end from dataEQ where STORYPROF>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_URM_RETR'', case URMPROV when 1 then 2 when 2 then 1 else 0 end from dataEQ where URMPROV>0 union all select AccNumber, SiteNumber, StructureNumber, ''E_CRIP_WALL'', case WALLSBRACD when 1 then 3 when 2 then 2 when 3 then 1 else 0 end from dataEQ where WALLSBRACD>0; with dataHU (AccNumber, SiteNumber, StructureNumber, Country, CLADSYS, FOUNDSYS,RESISTDOOR, ROOFANCH, ROOFGEOM, ROOFPARAPT, ROOFSYS) as ( select ACCGRPNUM+'' - ''+cast(accgrp.ACCGRPID as varchar) AccNumber, case PRIMARYBLDG when 1 then loc.LOCID else PRIMARYLOCID end SiteNumber, loc.LOCID StructureNumber, loc.COUNTRY, CLADSYS, FOUNDSYS, RESISTDOOR, ROOFANCH, ROOFGEOM, ROOFPARAPT, ROOFSYS from hudet inner join loc on loc.LOCID=hudet.LOCID inner join accgrp on accgrp.ACCGRPID=loc.ACCGRPID where COUNTRY in (''US'',''CA'') and hudet.LOCID in (select distinct LOCID from loc) ) select AccNumber, SiteNumber, StructureNumber, ''W_WL_CLAD'' WFeatureCode, case CLADSYS when 1 then 1 when 2 then 3 when 3 then 6 when 4 then 4 when 5 then 5 when 6 then 2 when 7 then 5 when 8 then 1 else 0 end WFeatureValue into #SecondaryFeatureHU from dataHU where CLADSYS>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_FND_ANCH'', case FOUNDSYS when 1 then 5 when 2 then 4 when 3 then 1 when 4 then 1 else 0 end from dataHU where FOUNDSYS>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_DOOR_REIN'', case RESISTDOOR when 1 then 4 when 2 then 2 when 3 then 1 else 0 end from dataHU where RESISTDOOR>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF2WALL'', case ROOFANCH when 1 then 3 when 2 then 4 when 3 then 1 when 4 then 3 when 5 then 5 else 0 end from dataHU where ROOFANCH>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF_PROF'', case ROOFGEOM when 1 then 4 when 2 then 5 when 3 then 4 when 4 then 1 when 5 then 4 when 6 then 4 when 7 then 1 when 8 then 2 when 9 then 2 else 0 end from dataHU where ROOFGEOM>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_PARA'', case ROOFPARAPT when 1 then 2 else 0 end from dataHU where ROOFPARAPT>0 union all select AccNumber, SiteNumber, StructureNumber, ''W_RF_MAT'', case ROOFSYS when 1 then 4 when 2 then 8 when 3 then 7 when 4 then 3 when 5 then 1 when 6 then 10 when 7 then 9 when 8 then 2 when 9 then 2 else 0 end from dataHU where ROOFSYS>0; select AccNumber, SiteNumber, StructureNumber, EFeatureCode, EFeatureValue, '''' WFeatureCode, '''' WFeatureValue into @finalTableName from #SecondaryFeatureEQ union all select AccNumber, SiteNumber, StructureNumber, '''', '''', WFeatureCode, WFeatureValue from #SecondaryFeatureHU order by 1, 2; drop table #SecondaryFeatureEQ; drop table #SecondaryFeatureHU;]]></ConversionQuery></ConversionQueryInfo></ConversionQueries></DataExtractionTemplate>' where TemplateName = 'Standard Database Extraction Template';

	end;
end;