if exists(select * from SYSOBJECTS where ID = object_id(N'absp_GenericTableGetNewKey') and objectproperty(id,N'IsProcedure') = 1)
begin
	drop procedure absp_GenericTableGetNewKey
end
go

create procedure absp_GenericTableGetNewKey
	@tableName varchar(120),
	@fieldName varchar(120),
	@fieldValue varchar(255)
/*
##BD_BEGIN absp_GenericTableGetNewKey ^^ 
<font size ="3"> 
<pre style="font-family: Lucida Console;" > 
====================================================================================================
DB Version:    MSSQL
Purpose:

This function inserts a value into a specific field of a specific table and
returns an autogenerated key which is also created and inserted into an autoincrement field
of the table

Returns : @@identity value - Most recent value inserted into the DEFAULT AUTOINCREMENT column of the table.

====================================================================================================

</pre>
</font>
##BD_END

##PD  @tableName 	^^ Table name into which record has to be inserted.
##PD  @fieldName 	^^ Field name of the table into which record has to be inserted.
##PD  @fieldValue 	^^ The actual field value that has to be inserted.
##RD auto-generated key ^^ autoincremented key
*/
as
begin
	set nocount on
	declare @sql varchar(max)
	
	if (@tableName is NULL)
	begin
		RAISERROR ('absp_GenericTableGetNewKey: @tableName cannot be NULL', 16, 1)
		return
	end
	if (@fieldName is NULL)
	begin
		RAISERROR ('absp_GenericTableGetNewKey: @fieldName cannot be NULL', 16, 2)
		return
	end
	if (@fieldValue is NULL)
	begin
		RAISERROR ('absp_GenericTableGetNewKey: @fieldValue cannot be NULL', 16, 3)
		return
	end

	set @sql = 'INSERT INTO ' + @tableName + ' ( ' + @fieldName + ' ) VALUES ( ' + @fieldValue + ' )'
	execute(@sql)
	return @@IDENTITY
end
